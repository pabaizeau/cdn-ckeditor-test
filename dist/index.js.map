{"version":3,"file":"index.js","sources":["../src/Highlight/assets/highlightVariant.ts","../src/config/mediaEmbed.ts","../src/Editorjs/json2html/utils/transforms.ts","../src/Editorjs/json2html/utils/errors.ts","../src/Editorjs/json2html/utils/parser.ts","../src/Editorjs/json2html/json2html.ts","../node_modules/domelementtype/lib/esm/index.js","../node_modules/domhandler/lib/esm/node.js","../node_modules/domhandler/lib/esm/index.js","../node_modules/entities/lib/esm/generated/decode-data-html.js","../node_modules/entities/lib/esm/generated/decode-data-xml.js","../node_modules/entities/lib/esm/decode_codepoint.js","../node_modules/entities/lib/esm/decode.js","../node_modules/entities/lib/esm/escape.js","../node_modules/dom-serializer/lib/esm/foreignNames.js","../node_modules/dom-serializer/lib/esm/index.js","../node_modules/domutils/lib/esm/stringify.js","../node_modules/domutils/lib/esm/traversal.js","../node_modules/domutils/lib/esm/manipulation.js","../node_modules/domutils/lib/esm/querying.js","../node_modules/domutils/lib/esm/legacy.js","../node_modules/domutils/lib/esm/helpers.js","../node_modules/domutils/lib/esm/feeds.js","../node_modules/cheerio/dist/browser/options.js","../node_modules/cheerio/dist/browser/static.js","../node_modules/cheerio/dist/browser/utils.js","../node_modules/cheerio/dist/browser/api/attributes.js","../node_modules/css-what/lib/es/types.js","../node_modules/css-what/lib/es/parse.js","../node_modules/boolbase/index.js","../node_modules/css-select/lib/esm/sort.js","../node_modules/css-select/lib/esm/attributes.js","../node_modules/nth-check/lib/esm/parse.js","../node_modules/nth-check/lib/esm/compile.js","../node_modules/nth-check/lib/esm/index.js","../node_modules/css-select/lib/esm/pseudo-selectors/filters.js","../node_modules/css-select/lib/esm/pseudo-selectors/pseudos.js","../node_modules/css-select/lib/esm/pseudo-selectors/aliases.js","../node_modules/css-select/lib/esm/pseudo-selectors/subselects.js","../node_modules/css-select/lib/esm/pseudo-selectors/index.js","../node_modules/css-select/lib/esm/general.js","../node_modules/css-select/lib/esm/compile.js","../node_modules/css-select/lib/esm/index.js","../node_modules/cheerio-select/lib/esm/positionals.js","../node_modules/cheerio-select/lib/esm/helpers.js","../node_modules/cheerio-select/lib/esm/index.js","../node_modules/cheerio/dist/browser/api/traversing.js","../node_modules/cheerio/dist/browser/parse.js","../node_modules/cheerio/dist/browser/api/manipulation.js","../node_modules/cheerio/dist/browser/api/css.js","../node_modules/cheerio/dist/browser/api/forms.js","../node_modules/cheerio/dist/browser/api/extract.js","../node_modules/cheerio/dist/browser/cheerio.js","../node_modules/cheerio/dist/browser/load.js","../node_modules/parse5/dist/common/unicode.js","../node_modules/parse5/dist/common/error-codes.js","../node_modules/parse5/dist/tokenizer/preprocessor.js","../node_modules/parse5/dist/common/token.js","../node_modules/parse5/dist/common/html.js","../node_modules/parse5/dist/tokenizer/index.js","../node_modules/parse5/dist/parser/open-element-stack.js","../node_modules/parse5/dist/parser/formatting-element-list.js","../node_modules/parse5/dist/tree-adapters/default.js","../node_modules/parse5/dist/common/doctype.js","../node_modules/parse5/dist/common/foreign-content.js","../node_modules/parse5/dist/parser/index.js","../node_modules/parse5/dist/serializer/index.js","../node_modules/parse5/dist/index.js","../node_modules/parse5-htmlparser2-tree-adapter/dist/index.js","../node_modules/cheerio/dist/browser/parsers/parse5-adapter.js","../node_modules/cheerio/node_modules/htmlparser2/lib/esm/Tokenizer.js","../node_modules/cheerio/node_modules/htmlparser2/lib/esm/Parser.js","../node_modules/cheerio/node_modules/htmlparser2/lib/esm/index.js","../node_modules/cheerio/dist/browser/load-parse.js","../src/types/editorjs.ts","../src/Editorjs/html2json/utils/transforms.ts","../src/Editorjs/html2json/utils/errors.ts","../src/Editorjs/html2json/utils/parser.ts","../src/Editorjs/html2json/html2json.ts","../src/Editorjs/editorjsdataprocessor.ts","../src/Editorjs/editorjs.ts","../src/ButtonPlugin/buttonPluginEditing.ts","../src/ButtonPlugin/buttonPluginView.ts","../src/ButtonPlugin/buttonPluginCommand.ts","../src/ButtonPlugin/utils.ts","../src/ButtonPlugin/buttonPluginUI.ts","../src/ButtonPlugin/buttonPlugin.ts","../src/Highlight/utils.ts","../src/Highlight/InsertHighlightCommand.ts","../src/Highlight/HighlightEditing.ts","../src/Highlight/HighlightUI.ts","../src/Highlight/Highlight.ts","../src/Comments/CommentsIntegration.ts","../src/Comments/Comments.ts","../src/index.ts"],"sourcesContent":["const highlightIconToolBar =\n  '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 640 512\"><path fill=\"currentColor\" d=\"M592 96.5H48c-26.5 0-48 21.5-48 48v223c0 26.5 21.5 48 48 48h544c26.5 0 48-21.5 48-48v-223c0-26.5-21.5-48-48-48zm-6 271H54c-3.3 0-6-2.7-6-6v-211c0-3.3 2.7-6 6-6h532c3.3 0 6 2.7 6 6v211c0 3.3-2.7 6-6 6z\" ></path></svg>';\nconst highlightVariants = {\n  INFO: \"info\",\n  PARKING: \"parking\",\n  SPOT: \"spot\",\n  ACTION: \"action\",\n  TIP: \"tip\",\n  HOTEL: \"housing\",\n  VISIT: \"activity\",\n  RESTAURANT: \"restaurant\",\n  FAVORITE: \"favorite\",\n};\n\nconst highlights = {\n  [highlightVariants.INFO]: {\n    title: \"Bon à savoir\",\n    icon: '<svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><circle cx=\"16\" cy=\"16\" r=\"12.4\" stroke=\"#0D0D0D\" stroke-width=\"1.2\"/><path d=\"M16 16L16 22\" stroke=\"#0D0D0D\" stroke-width=\"1.2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/><circle cx=\"16\" cy=\"11\" r=\"1\" fill=\"#0D0D0D\"/></svg>',\n  },\n  [highlightVariants.PARKING]: {\n    title: \"En voiture\",\n    icon: '<svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><circle cx=\"16\" cy=\"16\" r=\"12.4\" stroke=\"#0D0D0D\" stroke-width=\"1.2\"/><path d=\"M14 14L14 22\" stroke=\"#0D0D0D\" stroke-width=\"1.2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/><path d=\"M14 11H17C18.6569 11 20 12.3431 20 14V14C20 15.6569 18.6569 17 17 17H14V11Z\" stroke=\"#0D0D0D\" stroke-width=\"1.2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/></svg>',\n  },\n  [highlightVariants.SPOT]: {\n    title: \"Titre spot\",\n    icon: '<svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><circle cx=\"16\" cy=\"12\" r=\"6.4\" stroke=\"#0D0D0D\" stroke-width=\"1.2\"/><path d=\"M16 19L16 27\" stroke=\"#0D0D0D\" stroke-width=\"1.2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/></svg>',\n  },\n  [highlightVariants.ACTION]: {\n    title: \"En action\",\n    icon: '<svg width=\"32\" height=\"32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"viewBox=\"0 0 32 32\"><path d=\"M22.361 9.507l.03.458.451.09 2.054.41-2.172 2.028h-3.256l-.157-2.378 2.918-2.588.132 1.98z\" stroke=\"black\" fill=\"transparent\" stroke-width=\"1.2\"></path><path d=\"M16 16l3.5-3.5M22 16c0 3.314-2.686 6-6 6-3.315 0-6-2.686-6-6 0-3.315 2.685-6 6-6\" stroke=\"black\" fill=\"transparent\" stroke-width=\"1.2\" stroke-miterlimit=\"10\" stroke-linecap=\"round\"></path><path d=\"M26 16c0 5.524-4.476 10-10 10S6 21.524 6 16 10.476 6 16 6\" stroke=\"black\" fill=\"transparent\" stroke-width=\"1.2\" stroke-miterlimit=\"10\" stroke-linecap=\"round\"></path></svg>',\n  },\n  [highlightVariants.FAVORITE]: {\n    title: \"Coup de coeur\",\n    icon: '<svg width=\"32\" height=\"32\" fill=\"transparent\" xmlns=\"http://www.w3.org/2000/svg\"viewBox=\"0 0 32 32\" ><path d=\"M16.16 8.834s3.4-6.661 8.89-2.423c3.659 3.332 1.046 7.873 1.046 7.873C24 18 16 27 16 27S8 18 5.96 14.284c0 0-2.615-4.238.785-7.57 3.4-3.333 7.322-1.212 8.891 2.12 0 0 .262.606.523 0z\" stroke=\"black\" fill=\"transparent\" stroke-width=\"1.3\" stroke-miterlimit=\"10\"></path></svg>',\n  },\n  [highlightVariants.TIP]: {\n    title: \"Le conseil de la rédac\",\n    icon: '<svg width=\"32\" height=\"32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"viewBox=\"0 0 32 32\" ><path d=\"M12.452 27v-2.52s.131-1.194-1.313-2.387c-1.445-1.194-3.153-3.183-3.153-5.968 0-2.786 1.708-8.22 8.01-8.22 6.3 0 7.877 6.233 7.877 7.954 0 1.724-.788 4.244-3.152 6.101-1.182 1.194-1.576 1.724-1.576 2.653V27h-6.693zM17.183 11.485s3.02 1.99 2.626 4.642M8.647 23.685l-1.576 1.592M5.364 16.128H3M6.809 6.843l1.707 1.724M16 3v2.255M25.06 6.578l-1.577 1.724M29 15.863h-2.232M22.173 23.814l1.576 1.592\" stroke=\"black\" fill=\"transparent\" stroke-width=\"1.2\" stroke-miterlimit=\"10\"></path></svg>',\n  },\n  [highlightVariants.HOTEL]: {\n    title: \"Titre hébergement\",\n    icon: `<svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <line x1=\"3.23828\" y1=\"20.545\" x2=\"28.1362\" y2=\"20.545\" stroke=\"#0D0D0D\" stroke-width=\"1.37128\"/>\n    <path d=\"M10.8518 14.7033C10.8518 15.9617 9.83173 16.9817 8.57341 16.9817C7.31509 16.9817 6.29501 15.9617 6.29501 14.7033C6.29501 13.445 7.31509 12.4249 8.57341 12.4249C9.83173 12.4249 10.8518 13.445 10.8518 14.7033Z\" stroke=\"#0D0D0D\" stroke-width=\"1.37128\"/>\n    <path d=\"M14.1445 20.0437L14.1445 9.37308\" stroke=\"#0D0D0D\" stroke-width=\"1.37128\" stroke-linecap=\"round\"/>\n    <path d=\"M3 7L3 24.7844\" stroke=\"#0D0D0D\" stroke-width=\"1.37128\" stroke-linecap=\"round\"/>\n    <path d=\"M14.2363 9.3739H22.2139C25.4879 9.3739 28.142 12.028 28.142 15.302V24.787\" stroke=\"#0D0D0D\" stroke-width=\"1.37128\" stroke-linecap=\"round\"/>\n    </svg>\n    `,\n  },\n  [highlightVariants.RESTAURANT]: {\n    title: \"Titre restaurant\",\n    icon: `<svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M12.9448 9.87747L7.59011 4.52275C6.73474 3.66738 5.3479 3.66738 4.49253 4.52275C2.50249 6.51279 2.50249 9.73927 4.49253 11.7293L9.53635 16.7731L10.5794 15.7301L5.5356 10.6863C4.12162 9.27228 4.12162 6.97978 5.5356 5.56581C5.8149 5.28651 6.26774 5.28651 6.54704 5.56581L12.508 11.5267C12.5745 10.9634 12.7202 10.4077 12.9448 9.87747ZM19.1364 20.178L24.0262 25.0678C24.3055 25.3471 24.7583 25.3471 25.0376 25.0678C25.3169 24.7885 25.3169 24.3356 25.0376 24.0563L21.2853 20.304C21.8486 20.2374 22.4043 20.0918 22.9345 19.8671L26.0807 23.0133C26.9361 23.8686 26.9361 25.2554 26.0807 26.1108C25.2253 26.9662 23.8385 26.9662 22.9831 26.1108L18.0934 21.2211L19.1364 20.178Z\" fill=\"#0D0D0D\"/>\n    <path d=\"M23.6543 3L16.0526 10.6017C15.1449 11.5094 15.1449 12.9811 16.0526 13.8889V13.8889C16.2795 14.1158 16.2795 14.4837 16.0526 14.7107L6.19097 24.5723C5.62364 25.1396 5.62364 26.0594 6.19097 26.6268V26.6268C6.75831 27.1941 7.67814 27.1941 8.24548 26.6268L18.1071 16.7652C18.3341 16.5382 18.702 16.5382 18.9289 16.7652V16.7652C19.8367 17.6729 21.3084 17.6729 22.2161 16.7652L29.8178 9.1635M25.7088 5.0545L19.5453 11.218M27.7633 7.109L21.5998 13.2725\" stroke=\"#0D0D0D\" stroke-width=\"1.47511\"/>\n    </svg>\n    `,\n  },\n  [highlightVariants.VISIT]: {\n    title: \"Titre activité\",\n    icon: `<svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M13.3962 20L16.5 17.6L19.5288 19.9423L18.3577 16.1692L21.5769 13.6769H17.7462L16.5 9.84612L15.2538 13.6769H11.4231L14.5673 16.1692L13.3962 20ZM5.42306 26C4.75191 26 4.18028 25.7639 3.70815 25.2918C3.23605 24.8197 3 24.2481 3 23.5769V20.4183C3 20.201 3.05384 20.0019 3.16151 19.8212C3.26921 19.6404 3.4221 19.5058 3.62017 19.4173C4.33557 19.0058 4.91106 18.4606 5.34664 17.7817C5.78221 17.1029 6 16.3423 6 15.5C6 14.6577 5.78221 13.8971 5.34664 13.2183C4.91106 12.5394 4.33557 11.9942 3.62017 11.5827C3.4221 11.4942 3.26921 11.3596 3.16151 11.1788C3.05384 10.9981 3 10.7991 3 10.5817V7.42306C3 6.75191 3.23605 6.18027 3.70815 5.70815C4.18028 5.23605 4.75191 5 5.42306 5H27.5769C28.2481 5 28.8197 5.23605 29.2919 5.70815C29.764 6.18027 30 6.75191 30 7.42306V10.5817C30 10.7991 29.9462 10.9981 29.8385 11.1788C29.7308 11.3596 29.5779 11.4942 29.3798 11.5827C28.6644 11.9942 28.0889 12.5394 27.6534 13.2183C27.2178 13.8971 27 14.6577 27 15.5C27 16.3423 27.2178 17.1029 27.6534 17.7817C28.0889 18.4606 28.6644 19.0058 29.3798 19.4173C29.5779 19.5058 29.7308 19.6404 29.8385 19.8212C29.9462 20.0019 30 20.201 30 20.4183V23.5769C30 24.2481 29.764 24.8197 29.2919 25.2918C28.8197 25.7639 28.2481 26 27.5769 26H5.42306ZM5.42306 24.5H27.5769C27.8462 24.5 28.0673 24.4135 28.2404 24.2404C28.4135 24.0673 28.5 23.8462 28.5 23.5769V20.675C27.575 20.125 26.8438 19.3938 26.3063 18.4813C25.7688 17.5688 25.5 16.575 25.5 15.5C25.5 14.425 25.7688 13.4313 26.3063 12.5188C26.8438 11.6063 27.575 10.875 28.5 10.325V7.42306C28.5 7.15384 28.4135 6.93269 28.2404 6.75961C28.0673 6.58654 27.8462 6.5 27.5769 6.5H5.42306C5.15384 6.5 4.93269 6.58654 4.75961 6.75961C4.58654 6.93269 4.5 7.15384 4.5 7.42306V10.325C5.425 10.875 6.15625 11.6063 6.69375 12.5188C7.23125 13.4313 7.5 14.425 7.5 15.5C7.5 16.575 7.23125 17.5688 6.69375 18.4813C6.15625 19.3938 5.425 20.125 4.5 20.675V23.5769C4.5 23.8462 4.58654 24.0673 4.75961 24.2404C4.93269 24.4135 5.15384 24.5 5.42306 24.5Z\" fill=\"#0D0D0D\"/>\n    </svg>\n    `,\n  },\n};\n\nexport { highlightIconToolBar, highlightVariants, highlights };\n","const mediaEmbedConfig = {\n  previewsInData: true,\n  providers: [\n    {\n      name: 'facebook',\n      width: 336,\n      height: 596,\n      // Updated regex to match both standard and permalink URL patterns\n      url: /https:\\/\\/www\\.facebook\\.com\\/(?:(?:permalink\\.php\\?story_fbid=(pfbid[\\w]+)&id=(\\d+))|([^\\/\\?\\&]+)\\/([^\\/\\?\\&]+))/,\n      html: (match: RegExpMatchArray) => {\n        let src;\n        if (match[1] && match[2]) {\n          // permalink pattern with story_fbid and user id\n          const postId = encodeURIComponent(`pfbid${match[1]}`);\n          const userId = match[2];\n          src = `https://www.facebook.com/plugins/post.php?href=https%3A%2F%2Fwww.facebook.com%2Fpermalink.php%3Fstory_fbid%3D${postId}%26id%3D${userId}&show_text=true&width=500`;\n        } else if (match[3] && match[4]) {\n          // standard URL pattern with username and post id\n          const userName = match[3];\n          const postId = match[4];\n          src = `https://www.facebook.com/plugins/post.php?href=https%3A%2F%2Fwww.facebook.com%2F${userName}%2F${postId}`;\n        }\n\n        return (\n          '<div style=\"position: relative; text-align: center;\">' +\n            `<iframe title=\"facebook\" width=\"336\" height=\"596\" style=\"margin: 0 auto;\" src=\"${src}\" frameborder=\"0\" allowfullscreen></iframe>` +\n          '</div>'\n        );\n      }\n    },\n    {\n      name: 'instagram',\n      url: /https:\\/\\/www\\.instagram\\.com\\/p\\/([^\\/\\?\\&]+)\\/?.*/,\n      height: 929,\n      width: 550,\n      html: (match: RegExpMatchArray) => {\n        const id = match[ 1 ];\n        return (\n          '<div style=\"position: relative; text-align: center;\">' +\n            `<iframe title=\"instagram\" width=\"550\" height=\"929\" style=\"margin: 0 auto;\" src=\"https://www.instagram.com/p/${ id }/embed\" frameborder=\"0\" allowfullscreen></iframe>` +\n          '</div>'\n        );\n      }\n    },\n    {\n      name: 'twitter',\n      url: /^https?:\\/\\/(?:twitter\\.com|x\\.com)\\/(?:#!\\/)?(\\w+)\\/status(?:es)?\\/(\\d+?.*)?$/,\n      width: 300,\n      height: 300,\n      html: (match: RegExpMatchArray) => {\n        const id = match[ 2 ];\n        return (\n          '<div style=\"position: relative; text-align: center;\">' +\n            `<iframe title=\"twitter\" width=\"300\" height=\"300\" style=\"margin: 0 auto;\" src=\"https://twitframe.com/show?url=https://twitter.com/${ id }\" frameborder=\"0\" allowfullscreen></iframe>` +\n          '</div>'\n        );\n      }\n    },\n    {\n      name: 'youtube',\n      url: /(?:https?:\\/\\/)?(?:www\\.)?(?:(?:youtu\\.be\\/)|(?:youtube\\.com)\\/(?:v\\/|u\\/\\w\\/|embed\\/|watch))(?:(?:\\?v=)?([^#&?=]*))?((?:[?&]\\w*=\\w*)*)/,\n      height: 320,\n      width: 580,\n      html: (match: RegExpMatchArray) => {\n        const id = match[ 1 ];\n        const time = match[ 2 ];\n        return (\n          '<div style=\"position: relative; text-align: center\">' +\n            `<iframe title=\"youtube\" width=\"580\" height=\"320\" src=\"https://www.youtube.com/embed/${ id }${ time ? `?${ time }` : '' }\" ` +\n              'frameborder=\"0\" allow=\"autoplay; encrypted-media\" allowfullscreen>' +\n            '</iframe>' +\n          '</div>'\n        )\n      }\n    },\n  ],\n  extraProviders: [\n    {\n      name: 'shorts',\n      url: /https:\\/\\/(?:www\\.)?youtube\\.com\\/shorts\\/([a-zA-Z0-9_-]+)/,\n      width: 336,\n      height: 596,\n      html: (match: RegExpMatchArray) => {\n        const id = match[ 1 ];\n        return (\n          '<div style=\"position: relative; text-align: center;\">' +\n          `<iframe title=\"shorts\" width=\"336\" height=\"596\" style=\"margin: 0 auto;\" src=\"https://www.youtube.com/embed/${ id }\" frameborder=\"0\" allowfullscreen></iframe>` +\n          '</div>'\n        );\n      }\n    },\n    {\n      name: 'reel',\n      url: /https:\\/\\/www\\.instagram\\.com\\/reel\\/([^\\/\\?\\&]+)\\/?.*/,\n      height: 929,\n      width: 550,\n      html: (match: RegExpMatchArray) => {\n        const id = match[ 1 ];\n        return (\n          '<div style=\"position: relative; text-align: center;\">' +\n            `<iframe title=\"reel\" width=\"550\" height=\"929\" style=\"margin: 0 auto;\" src=\"https://www.instagram.com/reel/${ id }/embed/captioned\" frameborder=\"0\" allowfullscreen></iframe>` +\n          '</div>'\n        );\n      }\n    },\n    {\n      name: 'linkedin',\n      url: /https:\\/\\/www\\.linkedin\\.com\\/embed\\/feed\\/update\\/urn:li:([a-zA-Z:0-9]+)/,\n      width: 504,\n      height: 1000,\n      html: (match: RegExpMatchArray) => {\n        const id = match[ 1 ];\n        return (\n          '<div style=\"position: relative; text-align: center;\">' +\n            `<iframe title=\"linkedin\" width=\"420\" height=\"1000\" style=\"margin: 0 auto;\" src=\"https://www.linkedin.com/embed/feed/update/urn:li:${ id }\" frameborder=\"0\" scrolling=\"no\" allowtransparency=\"true\"></iframe>` +\n          '</div>'\n        );\n      }\n    },\n    {\n      name: 'spotify',\n      url: /https:\\/\\/open\\.spotify\\.com(?:\\/intl-fr)?\\/(playlist|track|album|artist)\\/([a-zA-Z0-9]+)/,\n      width: 600,\n      height: 352,\n      html: (match: RegExpMatchArray) => {\n        const type = match[1]; // playlist, track, album, artist\n        const id = match[2];   // L'ID unique du contenu\n    \n        // Construire l'URL d'embed en fonction du type (playlist, track, album, artist)\n        const embedUrl = `https://open.spotify.com/embed/${type}/${id}?utm_source=generator`;\n    \n        return (\n          '<div style=\"position: relative; text-align: center;\">' +\n            `<iframe title=\"spotify\" width=\"100%\" height=\"352\" style=\"margin: 0 auto;\" src=\"${embedUrl}\" frameborder=\"0\" scrolling=\"no\" allowtransparency=\"true\"></iframe>` +\n          '</div>'\n        );\n      }\n    },\n    {\n      name: 'tiktok',\n      // Regex pour capturer l'URL TikTok avec l'option \"intl-fr\"\n      url: /https:\\/\\/www\\.tiktok\\.com(?:\\/intl-fr)?\\/@([a-zA-Z0-9_.]+)\\/video\\/([0-9]+)/,\n      width: 100,\n      height: 500,\n      html: (match: RegExpMatchArray) => {\n        const username = match[1]; // Capture le nom d'utilisateur\n        const videoId = match[2];  // Capture l'ID de la vidéo\n    \n        // Construire l'URL d'embed TikTok\n        const embedUrl = `https://www.tiktok.com/embed/v2/${videoId}`;\n    \n        return (\n          '<div style=\"position: relative; text-align: center;\">' +\n            `<iframe title=\"tiktok\" width=\"100%\" height=\"500\" style=\"margin: 0 auto;\" src=\"${embedUrl}\" frameborder=\"0\" scrolling=\"no\" allowtransparency=\"true\" allow=\"autoplay; clipboard-write; encrypted-media; picture-in-picture\" allowfullscreen></iframe>` +\n          '</div>'\n        );\n      }\n    },\n  ]\n}\n// combine all providers to help with rendering\nexport const allProviders = mediaEmbedConfig.providers.concat(mediaEmbedConfig.extraProviders).reduce((acc: any, provider: any) => {\n  acc[provider.name] = provider;\n  return acc;\n}\n, {});\n\nexport default mediaEmbedConfig;","import {\n  HeaderBlock,\n  ListBlock,\n  ParagraphBlock,\n  TableBlock,\n  LinkToolBlock,\n  QuoteBlock,\n  ImageBlock,\n  MediaEmbedBlock,\n  HighlightBlock,\n  ImageContainerBlock\n} from \"../../../types/index.js\";\nimport { highlights } from \"../../../Highlight/assets/highlightVariant.js\";\nimport { allProviders } from '../../../config/index.js';\nimport { ButtonPluginBlock } from \"../../../types/buttonPlugin.js\";\n\nexport type transforms = {\n  [key: string]: any;\n  paragraph(block: ParagraphBlock): string;\n  headerH2(block: HeaderBlock): string;\n  headerH3(block: HeaderBlock): string;\n  unorderedList(block: ListBlock): string;\n  orderedList(block: ListBlock): string;\n  table(block: TableBlock): string;\n  linkTool(block: LinkToolBlock): string;\n  quote(block: QuoteBlock): string;\n  image(block: ImageBlock): string;\n  imageContainer(block: ImageContainerBlock): string;\n  highlight(block: HighlightBlock): string;\n  embed(block: MediaEmbedBlock): string;\n  buttonPlugin(block: ButtonPluginBlock): string;\n};\n\nconst transforms: transforms = {\n  paragraph: ({ data }) => {\n    return `<p>${data.text}</p>`;\n  },\n  headerH2: ({ data }) => {\n    return `<h2>${data.text}</h2>`;\n  },\n  headerH3: ({ data }) => {\n    return `<h3>${data.text}</h3>`;\n  },\n  mediaLib: () => {\n    return \"\";\n  },\n  unorderedList: ({ data }) => {\n    if (!data.items) {\n      return \"\";\n    }\n\n    return `\n      <ul>\n        ${data.items.map((item) => `<li>${item}</li>`).join(\"\")}\n      </ul>\n    `;\n  },\n  orderedList: ({ data }) => {\n    if (!data.items) {\n      return \"\";\n    }\n\n    return `\n      <ol>\n        ${data.items.map((item) => `<li>${item}</li>`).join(\"\")}\n      </ol>\n    `;\n  },\n  table: ({ data }) => {\n    if (!data.content) {\n      return \"\";\n    }\n\n    return `\n      <figure class=\"table\" contenteditable=\"false\">\n        <table>\n          ${data.withHeadings ? (\n            `<thead>\n              <tr>\n                ${data.content[0]\n                  .map(\n                    (cell: string) => `\n                    <th contenteditable=\"true\">\n                      <span>${cell}</span>\n                    </th>\n                  `\n                  )\n                  .join(\"\")}\n              </tr>\n            </thead>\n            `\n          ) : \"\"}\n          <tbody>\n            ${data.content.slice(data.withHeadings ? 1 : 0)\n              .map(\n                (row: string[]) => `\n                <tr>\n                  ${row\n                    .map(\n                      (cell: string) => `\n                      <td contenteditable=\"true\">\n                        <span>${cell}</span>\n                      </td>\n                    `\n                    )\n                    .join(\"\")}\n                </tr>\n              `\n              )\n              .join(\"\")}\n          </tbody>\n        </table>\n      </figure>\n    `;\n  },\n  imageContainer: ({ data }) => {\n    if (!data.children?.length) {\n      return \"\";\n    }\n    return `<figure class=\"images-container\">${data.children.map((child: ImageBlock) => {\n      const { file, caption } = child.data;\n      return `<figure\n        class=\"image\"\n        contenteditable=\"false\">\n        <img src=\"${file.url}\" alt=\"${file.alt}\">\n        <figcaption contenteditable=\"true\">${caption}</figcaption>\n      </figure>`;\n    }).join('')}</figure>`;\n  },\n  image: ({ data }) => {\n    const { file, caption, stretched } = data;\n    return `\n      <figure\n        class=\"image\"\n        data-stretched=\"${!!stretched}\"\n        ${!!stretched ? 'style=\"width:70%; margin: 0 auto; display: block; text-align: center;\"' : ''}\n        contenteditable=\"false\">\n        <img src=\"${file.url}\" alt=\"${file.alt}\">\n        <figcaption contenteditable=\"true\">${caption}</figcaption>\n      </figure>\n    `;\n  },\n  linkTool: ({ data }) => {\n    const { link, meta } = data;\n    const imageUrl =  meta.image ? meta.image.url : 'https://placehold.co/80x80';\n    return `\n      <figure class=\"link-tool\"\n        data-id=\"${meta.id}\"\n        data-href=\"${link}\"\n        data-title=\"${meta.title}\"\n        data-image-url=\"${imageUrl}\"\n        contenteditable=\"false\">\n          <div class=\"link-tool-container\">\n              <a class=\"link-tool-content\" href=\"${link}\" data-id=\"${meta.id}\" target=\"_blank\" rel=\"nofollow noindex noreferrer\">\n                  <div class=\"link-tool-image\" style=\"background-image: url('${imageUrl}');\" >\n                  </div>\n                  <div class=\"link-tool-title\">${meta.title}</div>\n                  <div class=\"link-tool-anchor\">${link}</div>\n              </a>\n          </div>\n      </figure>\n    `;\n  },\n  quote: ({ data }) => {\n    return `\n      <figure class=\"quote\">\n        <p class=\"quote__content\">${data.text}</p>\n        <figcaption class=\"quote__caption\">${data.caption ?? ''}</figcaption>\n      </figure>\n    `;\n  },\n  highlight: ({ data }) => {\n    const {variant, title, description} = data;\n\n    return `\n    <figure class=\"ck-highlight ck-highlight-${variant}\" data-variant=${variant}>\n        <div class=\"ck-highlight__title\">\n          ${title}\n        </div>\n        <div class=\"ck-highlight__description\" contenteditable=\"true\">\n          ${description}\n        </div>\n        <div class=\"ck-iconWrapper\">\n          <div class=\"ck-iconHighlight\">\n            ${highlights[variant].icon}\n          </div>\n      </div>\n   </figure>`;\n  },\n  // TODO: add caption to media embed <figcaption class=\"media-embed__caption\">${data.caption || ''}</figcaption>\n  embed: ({ data }) => {\n    const regex = allProviders[data.service].url;\n    const match = RegExp(regex).exec(data.source);\n    return `\n      <figure class=\"media\">\n        <div class=\"ck-media__wrapper\" data-oembed-url=\"${data.source}\" data-caption=\"${data.caption}\">\n          ${allProviders[data.service].html(match)}\n        </div>\n      </figure>\n\n    `;\n  },\n\n  buttonPlugin: ({ data }) => {\n    const { href, title } = data;\n    return `\n      <figure class=\"button-plugin\"\n        data-href=\"${href}\"\n        data-title=\"${title}\"\n        contenteditable=\"false\">\n          <div class=\"button-plugin-tool-container\">\n              <a class=\"button-plugin-tool-content\" href=\"${href}\" target=\"_blank\" rel=\"nofollow noindex noreferrer\">\n                  <div class=\"button-plugin-tool-title\">${title}</div>\n                  <div class=\"button-plugin-tool-anchor\">${href}</div>\n              </a>\n          </div>\n      </figure>\n    `;\n  },\n\n};\n\nexport default transforms;\n","export function ParseFunctionError(type: string) {\n  return new Error(`\\x1b[31m The Parser function of type \"${type}\" is not defined. \\n\n  Define your custom parser functions as: \\x1b[34mhttps://github.com/pavittarx/editorjs-html#extend-for-custom-blocks \\x1b[0m`);\n}\n","import transforms from \"./transforms.js\";\nimport { ParseFunctionError } from \"./errors.js\";\nimport { RichTextObject } from \"../../../types/index.js\";\n\ntype parser = {\n  parse(OutputData: RichTextObject): Array<string>;\n};\n\nconst parser = (plugins = {}): parser => {\n  const parsers = Object.assign({}, transforms, plugins);\n\n  return {\n    parse: ({ blocks }) => {\n      return blocks.map((block) => {\n        return parsers[block.type]\n          ? parsers[block.type](block)\n          : ParseFunctionError(block.type);\n      });\n    },\n  };\n};\n\nexport default parser;\n","/**\n * @module editorjs/json2html/json2html\n */\n\nimport edjsParser from \"./utils/parser\";\n/**\n * Parses editorjs string to an HTML.\n */\nexport default function json2html(data: string) {\n  try {\n    if (!data) {\n      return data;\n    }\n    const parsedJson = JSON.parse(data);\n    const edjs = edjsParser();\n    const html = edjs.parse(parsedJson);\n    return html.join(\"\");\n  } catch (e) {\n    console.log({ e });\n    return data;\n  }\n}\n","/** Types of elements found in htmlparser2's DOM */\nexport var ElementType;\n(function (ElementType) {\n    /** Type for the root element of a document */\n    ElementType[\"Root\"] = \"root\";\n    /** Type for Text */\n    ElementType[\"Text\"] = \"text\";\n    /** Type for <? ... ?> */\n    ElementType[\"Directive\"] = \"directive\";\n    /** Type for <!-- ... --> */\n    ElementType[\"Comment\"] = \"comment\";\n    /** Type for <script> tags */\n    ElementType[\"Script\"] = \"script\";\n    /** Type for <style> tags */\n    ElementType[\"Style\"] = \"style\";\n    /** Type for Any tag */\n    ElementType[\"Tag\"] = \"tag\";\n    /** Type for <![CDATA[ ... ]]> */\n    ElementType[\"CDATA\"] = \"cdata\";\n    /** Type for <!doctype ...> */\n    ElementType[\"Doctype\"] = \"doctype\";\n})(ElementType || (ElementType = {}));\n/**\n * Tests whether an element is a tag or not.\n *\n * @param elem Element to test\n */\nexport function isTag(elem) {\n    return (elem.type === ElementType.Tag ||\n        elem.type === ElementType.Script ||\n        elem.type === ElementType.Style);\n}\n// Exports for backwards compatibility\n/** Type for the root element of a document */\nexport const Root = ElementType.Root;\n/** Type for Text */\nexport const Text = ElementType.Text;\n/** Type for <? ... ?> */\nexport const Directive = ElementType.Directive;\n/** Type for <!-- ... --> */\nexport const Comment = ElementType.Comment;\n/** Type for <script> tags */\nexport const Script = ElementType.Script;\n/** Type for <style> tags */\nexport const Style = ElementType.Style;\n/** Type for Any tag */\nexport const Tag = ElementType.Tag;\n/** Type for <![CDATA[ ... ]]> */\nexport const CDATA = ElementType.CDATA;\n/** Type for <!doctype ...> */\nexport const Doctype = ElementType.Doctype;\n","import { ElementType, isTag as isTagRaw } from \"domelementtype\";\n/**\n * This object will be used as the prototype for Nodes when creating a\n * DOM-Level-1-compliant structure.\n */\nexport class Node {\n    constructor() {\n        /** Parent of the node */\n        this.parent = null;\n        /** Previous sibling */\n        this.prev = null;\n        /** Next sibling */\n        this.next = null;\n        /** The start index of the node. Requires `withStartIndices` on the handler to be `true. */\n        this.startIndex = null;\n        /** The end index of the node. Requires `withEndIndices` on the handler to be `true. */\n        this.endIndex = null;\n    }\n    // Read-write aliases for properties\n    /**\n     * Same as {@link parent}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */\n    get parentNode() {\n        return this.parent;\n    }\n    set parentNode(parent) {\n        this.parent = parent;\n    }\n    /**\n     * Same as {@link prev}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */\n    get previousSibling() {\n        return this.prev;\n    }\n    set previousSibling(prev) {\n        this.prev = prev;\n    }\n    /**\n     * Same as {@link next}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */\n    get nextSibling() {\n        return this.next;\n    }\n    set nextSibling(next) {\n        this.next = next;\n    }\n    /**\n     * Clone this node, and optionally its children.\n     *\n     * @param recursive Clone child nodes as well.\n     * @returns A clone of the node.\n     */\n    cloneNode(recursive = false) {\n        return cloneNode(this, recursive);\n    }\n}\n/**\n * A node that contains some data.\n */\nexport class DataNode extends Node {\n    /**\n     * @param data The content of the data node\n     */\n    constructor(data) {\n        super();\n        this.data = data;\n    }\n    /**\n     * Same as {@link data}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */\n    get nodeValue() {\n        return this.data;\n    }\n    set nodeValue(data) {\n        this.data = data;\n    }\n}\n/**\n * Text within the document.\n */\nexport class Text extends DataNode {\n    constructor() {\n        super(...arguments);\n        this.type = ElementType.Text;\n    }\n    get nodeType() {\n        return 3;\n    }\n}\n/**\n * Comments within the document.\n */\nexport class Comment extends DataNode {\n    constructor() {\n        super(...arguments);\n        this.type = ElementType.Comment;\n    }\n    get nodeType() {\n        return 8;\n    }\n}\n/**\n * Processing instructions, including doc types.\n */\nexport class ProcessingInstruction extends DataNode {\n    constructor(name, data) {\n        super(data);\n        this.name = name;\n        this.type = ElementType.Directive;\n    }\n    get nodeType() {\n        return 1;\n    }\n}\n/**\n * A `Node` that can have children.\n */\nexport class NodeWithChildren extends Node {\n    /**\n     * @param children Children of the node. Only certain node types can have children.\n     */\n    constructor(children) {\n        super();\n        this.children = children;\n    }\n    // Aliases\n    /** First child of the node. */\n    get firstChild() {\n        var _a;\n        return (_a = this.children[0]) !== null && _a !== void 0 ? _a : null;\n    }\n    /** Last child of the node. */\n    get lastChild() {\n        return this.children.length > 0\n            ? this.children[this.children.length - 1]\n            : null;\n    }\n    /**\n     * Same as {@link children}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */\n    get childNodes() {\n        return this.children;\n    }\n    set childNodes(children) {\n        this.children = children;\n    }\n}\nexport class CDATA extends NodeWithChildren {\n    constructor() {\n        super(...arguments);\n        this.type = ElementType.CDATA;\n    }\n    get nodeType() {\n        return 4;\n    }\n}\n/**\n * The root node of the document.\n */\nexport class Document extends NodeWithChildren {\n    constructor() {\n        super(...arguments);\n        this.type = ElementType.Root;\n    }\n    get nodeType() {\n        return 9;\n    }\n}\n/**\n * An element within the DOM.\n */\nexport class Element extends NodeWithChildren {\n    /**\n     * @param name Name of the tag, eg. `div`, `span`.\n     * @param attribs Object mapping attribute names to attribute values.\n     * @param children Children of the node.\n     */\n    constructor(name, attribs, children = [], type = name === \"script\"\n        ? ElementType.Script\n        : name === \"style\"\n            ? ElementType.Style\n            : ElementType.Tag) {\n        super(children);\n        this.name = name;\n        this.attribs = attribs;\n        this.type = type;\n    }\n    get nodeType() {\n        return 1;\n    }\n    // DOM Level 1 aliases\n    /**\n     * Same as {@link name}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */\n    get tagName() {\n        return this.name;\n    }\n    set tagName(name) {\n        this.name = name;\n    }\n    get attributes() {\n        return Object.keys(this.attribs).map((name) => {\n            var _a, _b;\n            return ({\n                name,\n                value: this.attribs[name],\n                namespace: (_a = this[\"x-attribsNamespace\"]) === null || _a === void 0 ? void 0 : _a[name],\n                prefix: (_b = this[\"x-attribsPrefix\"]) === null || _b === void 0 ? void 0 : _b[name],\n            });\n        });\n    }\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node is a `Element`, `false` otherwise.\n */\nexport function isTag(node) {\n    return isTagRaw(node);\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `CDATA`, `false` otherwise.\n */\nexport function isCDATA(node) {\n    return node.type === ElementType.CDATA;\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `Text`, `false` otherwise.\n */\nexport function isText(node) {\n    return node.type === ElementType.Text;\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `Comment`, `false` otherwise.\n */\nexport function isComment(node) {\n    return node.type === ElementType.Comment;\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `ProcessingInstruction`, `false` otherwise.\n */\nexport function isDirective(node) {\n    return node.type === ElementType.Directive;\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `ProcessingInstruction`, `false` otherwise.\n */\nexport function isDocument(node) {\n    return node.type === ElementType.Root;\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has children, `false` otherwise.\n */\nexport function hasChildren(node) {\n    return Object.prototype.hasOwnProperty.call(node, \"children\");\n}\n/**\n * Clone a node, and optionally its children.\n *\n * @param recursive Clone child nodes as well.\n * @returns A clone of the node.\n */\nexport function cloneNode(node, recursive = false) {\n    let result;\n    if (isText(node)) {\n        result = new Text(node.data);\n    }\n    else if (isComment(node)) {\n        result = new Comment(node.data);\n    }\n    else if (isTag(node)) {\n        const children = recursive ? cloneChildren(node.children) : [];\n        const clone = new Element(node.name, { ...node.attribs }, children);\n        children.forEach((child) => (child.parent = clone));\n        if (node.namespace != null) {\n            clone.namespace = node.namespace;\n        }\n        if (node[\"x-attribsNamespace\"]) {\n            clone[\"x-attribsNamespace\"] = { ...node[\"x-attribsNamespace\"] };\n        }\n        if (node[\"x-attribsPrefix\"]) {\n            clone[\"x-attribsPrefix\"] = { ...node[\"x-attribsPrefix\"] };\n        }\n        result = clone;\n    }\n    else if (isCDATA(node)) {\n        const children = recursive ? cloneChildren(node.children) : [];\n        const clone = new CDATA(children);\n        children.forEach((child) => (child.parent = clone));\n        result = clone;\n    }\n    else if (isDocument(node)) {\n        const children = recursive ? cloneChildren(node.children) : [];\n        const clone = new Document(children);\n        children.forEach((child) => (child.parent = clone));\n        if (node[\"x-mode\"]) {\n            clone[\"x-mode\"] = node[\"x-mode\"];\n        }\n        result = clone;\n    }\n    else if (isDirective(node)) {\n        const instruction = new ProcessingInstruction(node.name, node.data);\n        if (node[\"x-name\"] != null) {\n            instruction[\"x-name\"] = node[\"x-name\"];\n            instruction[\"x-publicId\"] = node[\"x-publicId\"];\n            instruction[\"x-systemId\"] = node[\"x-systemId\"];\n        }\n        result = instruction;\n    }\n    else {\n        throw new Error(`Not implemented yet: ${node.type}`);\n    }\n    result.startIndex = node.startIndex;\n    result.endIndex = node.endIndex;\n    if (node.sourceCodeLocation != null) {\n        result.sourceCodeLocation = node.sourceCodeLocation;\n    }\n    return result;\n}\nfunction cloneChildren(childs) {\n    const children = childs.map((child) => cloneNode(child, true));\n    for (let i = 1; i < children.length; i++) {\n        children[i].prev = children[i - 1];\n        children[i - 1].next = children[i];\n    }\n    return children;\n}\n","import { ElementType } from \"domelementtype\";\nimport { Element, Text, Comment, CDATA, Document, ProcessingInstruction, } from \"./node.js\";\nexport * from \"./node.js\";\n// Default options\nconst defaultOpts = {\n    withStartIndices: false,\n    withEndIndices: false,\n    xmlMode: false,\n};\nexport class DomHandler {\n    /**\n     * @param callback Called once parsing has completed.\n     * @param options Settings for the handler.\n     * @param elementCB Callback whenever a tag is closed.\n     */\n    constructor(callback, options, elementCB) {\n        /** The elements of the DOM */\n        this.dom = [];\n        /** The root element for the DOM */\n        this.root = new Document(this.dom);\n        /** Indicated whether parsing has been completed. */\n        this.done = false;\n        /** Stack of open tags. */\n        this.tagStack = [this.root];\n        /** A data node that is still being written to. */\n        this.lastNode = null;\n        /** Reference to the parser instance. Used for location information. */\n        this.parser = null;\n        // Make it possible to skip arguments, for backwards-compatibility\n        if (typeof options === \"function\") {\n            elementCB = options;\n            options = defaultOpts;\n        }\n        if (typeof callback === \"object\") {\n            options = callback;\n            callback = undefined;\n        }\n        this.callback = callback !== null && callback !== void 0 ? callback : null;\n        this.options = options !== null && options !== void 0 ? options : defaultOpts;\n        this.elementCB = elementCB !== null && elementCB !== void 0 ? elementCB : null;\n    }\n    onparserinit(parser) {\n        this.parser = parser;\n    }\n    // Resets the handler back to starting state\n    onreset() {\n        this.dom = [];\n        this.root = new Document(this.dom);\n        this.done = false;\n        this.tagStack = [this.root];\n        this.lastNode = null;\n        this.parser = null;\n    }\n    // Signals the handler that parsing is done\n    onend() {\n        if (this.done)\n            return;\n        this.done = true;\n        this.parser = null;\n        this.handleCallback(null);\n    }\n    onerror(error) {\n        this.handleCallback(error);\n    }\n    onclosetag() {\n        this.lastNode = null;\n        const elem = this.tagStack.pop();\n        if (this.options.withEndIndices) {\n            elem.endIndex = this.parser.endIndex;\n        }\n        if (this.elementCB)\n            this.elementCB(elem);\n    }\n    onopentag(name, attribs) {\n        const type = this.options.xmlMode ? ElementType.Tag : undefined;\n        const element = new Element(name, attribs, undefined, type);\n        this.addNode(element);\n        this.tagStack.push(element);\n    }\n    ontext(data) {\n        const { lastNode } = this;\n        if (lastNode && lastNode.type === ElementType.Text) {\n            lastNode.data += data;\n            if (this.options.withEndIndices) {\n                lastNode.endIndex = this.parser.endIndex;\n            }\n        }\n        else {\n            const node = new Text(data);\n            this.addNode(node);\n            this.lastNode = node;\n        }\n    }\n    oncomment(data) {\n        if (this.lastNode && this.lastNode.type === ElementType.Comment) {\n            this.lastNode.data += data;\n            return;\n        }\n        const node = new Comment(data);\n        this.addNode(node);\n        this.lastNode = node;\n    }\n    oncommentend() {\n        this.lastNode = null;\n    }\n    oncdatastart() {\n        const text = new Text(\"\");\n        const node = new CDATA([text]);\n        this.addNode(node);\n        text.parent = node;\n        this.lastNode = text;\n    }\n    oncdataend() {\n        this.lastNode = null;\n    }\n    onprocessinginstruction(name, data) {\n        const node = new ProcessingInstruction(name, data);\n        this.addNode(node);\n    }\n    handleCallback(error) {\n        if (typeof this.callback === \"function\") {\n            this.callback(error, this.dom);\n        }\n        else if (error) {\n            throw error;\n        }\n    }\n    addNode(node) {\n        const parent = this.tagStack[this.tagStack.length - 1];\n        const previousSibling = parent.children[parent.children.length - 1];\n        if (this.options.withStartIndices) {\n            node.startIndex = this.parser.startIndex;\n        }\n        if (this.options.withEndIndices) {\n            node.endIndex = this.parser.endIndex;\n        }\n        parent.children.push(node);\n        if (previousSibling) {\n            node.prev = previousSibling;\n            previousSibling.next = node;\n        }\n        node.parent = parent;\n        this.lastNode = null;\n    }\n}\nexport default DomHandler;\n","// Generated using scripts/write-decode-map.ts\nexport default new Uint16Array(\n// prettier-ignore\n\"\\u1d41<\\xd5\\u0131\\u028a\\u049d\\u057b\\u05d0\\u0675\\u06de\\u07a2\\u07d6\\u080f\\u0a4a\\u0a91\\u0da1\\u0e6d\\u0f09\\u0f26\\u10ca\\u1228\\u12e1\\u1415\\u149d\\u14c3\\u14df\\u1525\\0\\0\\0\\0\\0\\0\\u156b\\u16cd\\u198d\\u1c12\\u1ddd\\u1f7e\\u2060\\u21b0\\u228d\\u23c0\\u23fb\\u2442\\u2824\\u2912\\u2d08\\u2e48\\u2fce\\u3016\\u32ba\\u3639\\u37ac\\u38fe\\u3a28\\u3a71\\u3ae0\\u3b2e\\u0800EMabcfglmnoprstu\\\\bfms\\x7f\\x84\\x8b\\x90\\x95\\x98\\xa6\\xb3\\xb9\\xc8\\xcflig\\u803b\\xc6\\u40c6P\\u803b&\\u4026cute\\u803b\\xc1\\u40c1reve;\\u4102\\u0100iyx}rc\\u803b\\xc2\\u40c2;\\u4410r;\\uc000\\ud835\\udd04rave\\u803b\\xc0\\u40c0pha;\\u4391acr;\\u4100d;\\u6a53\\u0100gp\\x9d\\xa1on;\\u4104f;\\uc000\\ud835\\udd38plyFunction;\\u6061ing\\u803b\\xc5\\u40c5\\u0100cs\\xbe\\xc3r;\\uc000\\ud835\\udc9cign;\\u6254ilde\\u803b\\xc3\\u40c3ml\\u803b\\xc4\\u40c4\\u0400aceforsu\\xe5\\xfb\\xfe\\u0117\\u011c\\u0122\\u0127\\u012a\\u0100cr\\xea\\xf2kslash;\\u6216\\u0176\\xf6\\xf8;\\u6ae7ed;\\u6306y;\\u4411\\u0180crt\\u0105\\u010b\\u0114ause;\\u6235noullis;\\u612ca;\\u4392r;\\uc000\\ud835\\udd05pf;\\uc000\\ud835\\udd39eve;\\u42d8c\\xf2\\u0113mpeq;\\u624e\\u0700HOacdefhilorsu\\u014d\\u0151\\u0156\\u0180\\u019e\\u01a2\\u01b5\\u01b7\\u01ba\\u01dc\\u0215\\u0273\\u0278\\u027ecy;\\u4427PY\\u803b\\xa9\\u40a9\\u0180cpy\\u015d\\u0162\\u017aute;\\u4106\\u0100;i\\u0167\\u0168\\u62d2talDifferentialD;\\u6145leys;\\u612d\\u0200aeio\\u0189\\u018e\\u0194\\u0198ron;\\u410cdil\\u803b\\xc7\\u40c7rc;\\u4108nint;\\u6230ot;\\u410a\\u0100dn\\u01a7\\u01adilla;\\u40b8terDot;\\u40b7\\xf2\\u017fi;\\u43a7rcle\\u0200DMPT\\u01c7\\u01cb\\u01d1\\u01d6ot;\\u6299inus;\\u6296lus;\\u6295imes;\\u6297o\\u0100cs\\u01e2\\u01f8kwiseContourIntegral;\\u6232eCurly\\u0100DQ\\u0203\\u020foubleQuote;\\u601duote;\\u6019\\u0200lnpu\\u021e\\u0228\\u0247\\u0255on\\u0100;e\\u0225\\u0226\\u6237;\\u6a74\\u0180git\\u022f\\u0236\\u023aruent;\\u6261nt;\\u622fourIntegral;\\u622e\\u0100fr\\u024c\\u024e;\\u6102oduct;\\u6210nterClockwiseContourIntegral;\\u6233oss;\\u6a2fcr;\\uc000\\ud835\\udc9ep\\u0100;C\\u0284\\u0285\\u62d3ap;\\u624d\\u0580DJSZacefios\\u02a0\\u02ac\\u02b0\\u02b4\\u02b8\\u02cb\\u02d7\\u02e1\\u02e6\\u0333\\u048d\\u0100;o\\u0179\\u02a5trahd;\\u6911cy;\\u4402cy;\\u4405cy;\\u440f\\u0180grs\\u02bf\\u02c4\\u02c7ger;\\u6021r;\\u61a1hv;\\u6ae4\\u0100ay\\u02d0\\u02d5ron;\\u410e;\\u4414l\\u0100;t\\u02dd\\u02de\\u6207a;\\u4394r;\\uc000\\ud835\\udd07\\u0100af\\u02eb\\u0327\\u0100cm\\u02f0\\u0322ritical\\u0200ADGT\\u0300\\u0306\\u0316\\u031ccute;\\u40b4o\\u0174\\u030b\\u030d;\\u42d9bleAcute;\\u42ddrave;\\u4060ilde;\\u42dcond;\\u62c4ferentialD;\\u6146\\u0470\\u033d\\0\\0\\0\\u0342\\u0354\\0\\u0405f;\\uc000\\ud835\\udd3b\\u0180;DE\\u0348\\u0349\\u034d\\u40a8ot;\\u60dcqual;\\u6250ble\\u0300CDLRUV\\u0363\\u0372\\u0382\\u03cf\\u03e2\\u03f8ontourIntegra\\xec\\u0239o\\u0274\\u0379\\0\\0\\u037b\\xbb\\u0349nArrow;\\u61d3\\u0100eo\\u0387\\u03a4ft\\u0180ART\\u0390\\u0396\\u03a1rrow;\\u61d0ightArrow;\\u61d4e\\xe5\\u02cang\\u0100LR\\u03ab\\u03c4eft\\u0100AR\\u03b3\\u03b9rrow;\\u67f8ightArrow;\\u67faightArrow;\\u67f9ight\\u0100AT\\u03d8\\u03derrow;\\u61d2ee;\\u62a8p\\u0241\\u03e9\\0\\0\\u03efrrow;\\u61d1ownArrow;\\u61d5erticalBar;\\u6225n\\u0300ABLRTa\\u0412\\u042a\\u0430\\u045e\\u047f\\u037crrow\\u0180;BU\\u041d\\u041e\\u0422\\u6193ar;\\u6913pArrow;\\u61f5reve;\\u4311eft\\u02d2\\u043a\\0\\u0446\\0\\u0450ightVector;\\u6950eeVector;\\u695eector\\u0100;B\\u0459\\u045a\\u61bdar;\\u6956ight\\u01d4\\u0467\\0\\u0471eeVector;\\u695fector\\u0100;B\\u047a\\u047b\\u61c1ar;\\u6957ee\\u0100;A\\u0486\\u0487\\u62a4rrow;\\u61a7\\u0100ct\\u0492\\u0497r;\\uc000\\ud835\\udc9frok;\\u4110\\u0800NTacdfglmopqstux\\u04bd\\u04c0\\u04c4\\u04cb\\u04de\\u04e2\\u04e7\\u04ee\\u04f5\\u0521\\u052f\\u0536\\u0552\\u055d\\u0560\\u0565G;\\u414aH\\u803b\\xd0\\u40d0cute\\u803b\\xc9\\u40c9\\u0180aiy\\u04d2\\u04d7\\u04dcron;\\u411arc\\u803b\\xca\\u40ca;\\u442dot;\\u4116r;\\uc000\\ud835\\udd08rave\\u803b\\xc8\\u40c8ement;\\u6208\\u0100ap\\u04fa\\u04fecr;\\u4112ty\\u0253\\u0506\\0\\0\\u0512mallSquare;\\u65fberySmallSquare;\\u65ab\\u0100gp\\u0526\\u052aon;\\u4118f;\\uc000\\ud835\\udd3csilon;\\u4395u\\u0100ai\\u053c\\u0549l\\u0100;T\\u0542\\u0543\\u6a75ilde;\\u6242librium;\\u61cc\\u0100ci\\u0557\\u055ar;\\u6130m;\\u6a73a;\\u4397ml\\u803b\\xcb\\u40cb\\u0100ip\\u056a\\u056fsts;\\u6203onentialE;\\u6147\\u0280cfios\\u0585\\u0588\\u058d\\u05b2\\u05ccy;\\u4424r;\\uc000\\ud835\\udd09lled\\u0253\\u0597\\0\\0\\u05a3mallSquare;\\u65fcerySmallSquare;\\u65aa\\u0370\\u05ba\\0\\u05bf\\0\\0\\u05c4f;\\uc000\\ud835\\udd3dAll;\\u6200riertrf;\\u6131c\\xf2\\u05cb\\u0600JTabcdfgorst\\u05e8\\u05ec\\u05ef\\u05fa\\u0600\\u0612\\u0616\\u061b\\u061d\\u0623\\u066c\\u0672cy;\\u4403\\u803b>\\u403emma\\u0100;d\\u05f7\\u05f8\\u4393;\\u43dcreve;\\u411e\\u0180eiy\\u0607\\u060c\\u0610dil;\\u4122rc;\\u411c;\\u4413ot;\\u4120r;\\uc000\\ud835\\udd0a;\\u62d9pf;\\uc000\\ud835\\udd3eeater\\u0300EFGLST\\u0635\\u0644\\u064e\\u0656\\u065b\\u0666qual\\u0100;L\\u063e\\u063f\\u6265ess;\\u62dbullEqual;\\u6267reater;\\u6aa2ess;\\u6277lantEqual;\\u6a7eilde;\\u6273cr;\\uc000\\ud835\\udca2;\\u626b\\u0400Aacfiosu\\u0685\\u068b\\u0696\\u069b\\u069e\\u06aa\\u06be\\u06caRDcy;\\u442a\\u0100ct\\u0690\\u0694ek;\\u42c7;\\u405eirc;\\u4124r;\\u610clbertSpace;\\u610b\\u01f0\\u06af\\0\\u06b2f;\\u610dizontalLine;\\u6500\\u0100ct\\u06c3\\u06c5\\xf2\\u06a9rok;\\u4126mp\\u0144\\u06d0\\u06d8ownHum\\xf0\\u012fqual;\\u624f\\u0700EJOacdfgmnostu\\u06fa\\u06fe\\u0703\\u0707\\u070e\\u071a\\u071e\\u0721\\u0728\\u0744\\u0778\\u078b\\u078f\\u0795cy;\\u4415lig;\\u4132cy;\\u4401cute\\u803b\\xcd\\u40cd\\u0100iy\\u0713\\u0718rc\\u803b\\xce\\u40ce;\\u4418ot;\\u4130r;\\u6111rave\\u803b\\xcc\\u40cc\\u0180;ap\\u0720\\u072f\\u073f\\u0100cg\\u0734\\u0737r;\\u412ainaryI;\\u6148lie\\xf3\\u03dd\\u01f4\\u0749\\0\\u0762\\u0100;e\\u074d\\u074e\\u622c\\u0100gr\\u0753\\u0758ral;\\u622bsection;\\u62c2isible\\u0100CT\\u076c\\u0772omma;\\u6063imes;\\u6062\\u0180gpt\\u077f\\u0783\\u0788on;\\u412ef;\\uc000\\ud835\\udd40a;\\u4399cr;\\u6110ilde;\\u4128\\u01eb\\u079a\\0\\u079ecy;\\u4406l\\u803b\\xcf\\u40cf\\u0280cfosu\\u07ac\\u07b7\\u07bc\\u07c2\\u07d0\\u0100iy\\u07b1\\u07b5rc;\\u4134;\\u4419r;\\uc000\\ud835\\udd0dpf;\\uc000\\ud835\\udd41\\u01e3\\u07c7\\0\\u07ccr;\\uc000\\ud835\\udca5rcy;\\u4408kcy;\\u4404\\u0380HJacfos\\u07e4\\u07e8\\u07ec\\u07f1\\u07fd\\u0802\\u0808cy;\\u4425cy;\\u440cppa;\\u439a\\u0100ey\\u07f6\\u07fbdil;\\u4136;\\u441ar;\\uc000\\ud835\\udd0epf;\\uc000\\ud835\\udd42cr;\\uc000\\ud835\\udca6\\u0580JTaceflmost\\u0825\\u0829\\u082c\\u0850\\u0863\\u09b3\\u09b8\\u09c7\\u09cd\\u0a37\\u0a47cy;\\u4409\\u803b<\\u403c\\u0280cmnpr\\u0837\\u083c\\u0841\\u0844\\u084dute;\\u4139bda;\\u439bg;\\u67ealacetrf;\\u6112r;\\u619e\\u0180aey\\u0857\\u085c\\u0861ron;\\u413ddil;\\u413b;\\u441b\\u0100fs\\u0868\\u0970t\\u0500ACDFRTUVar\\u087e\\u08a9\\u08b1\\u08e0\\u08e6\\u08fc\\u092f\\u095b\\u0390\\u096a\\u0100nr\\u0883\\u088fgleBracket;\\u67e8row\\u0180;BR\\u0899\\u089a\\u089e\\u6190ar;\\u61e4ightArrow;\\u61c6eiling;\\u6308o\\u01f5\\u08b7\\0\\u08c3bleBracket;\\u67e6n\\u01d4\\u08c8\\0\\u08d2eeVector;\\u6961ector\\u0100;B\\u08db\\u08dc\\u61c3ar;\\u6959loor;\\u630aight\\u0100AV\\u08ef\\u08f5rrow;\\u6194ector;\\u694e\\u0100er\\u0901\\u0917e\\u0180;AV\\u0909\\u090a\\u0910\\u62a3rrow;\\u61a4ector;\\u695aiangle\\u0180;BE\\u0924\\u0925\\u0929\\u62b2ar;\\u69cfqual;\\u62b4p\\u0180DTV\\u0937\\u0942\\u094cownVector;\\u6951eeVector;\\u6960ector\\u0100;B\\u0956\\u0957\\u61bfar;\\u6958ector\\u0100;B\\u0965\\u0966\\u61bcar;\\u6952ight\\xe1\\u039cs\\u0300EFGLST\\u097e\\u098b\\u0995\\u099d\\u09a2\\u09adqualGreater;\\u62daullEqual;\\u6266reater;\\u6276ess;\\u6aa1lantEqual;\\u6a7dilde;\\u6272r;\\uc000\\ud835\\udd0f\\u0100;e\\u09bd\\u09be\\u62d8ftarrow;\\u61daidot;\\u413f\\u0180npw\\u09d4\\u0a16\\u0a1bg\\u0200LRlr\\u09de\\u09f7\\u0a02\\u0a10eft\\u0100AR\\u09e6\\u09ecrrow;\\u67f5ightArrow;\\u67f7ightArrow;\\u67f6eft\\u0100ar\\u03b3\\u0a0aight\\xe1\\u03bfight\\xe1\\u03caf;\\uc000\\ud835\\udd43er\\u0100LR\\u0a22\\u0a2ceftArrow;\\u6199ightArrow;\\u6198\\u0180cht\\u0a3e\\u0a40\\u0a42\\xf2\\u084c;\\u61b0rok;\\u4141;\\u626a\\u0400acefiosu\\u0a5a\\u0a5d\\u0a60\\u0a77\\u0a7c\\u0a85\\u0a8b\\u0a8ep;\\u6905y;\\u441c\\u0100dl\\u0a65\\u0a6fiumSpace;\\u605flintrf;\\u6133r;\\uc000\\ud835\\udd10nusPlus;\\u6213pf;\\uc000\\ud835\\udd44c\\xf2\\u0a76;\\u439c\\u0480Jacefostu\\u0aa3\\u0aa7\\u0aad\\u0ac0\\u0b14\\u0b19\\u0d91\\u0d97\\u0d9ecy;\\u440acute;\\u4143\\u0180aey\\u0ab4\\u0ab9\\u0aberon;\\u4147dil;\\u4145;\\u441d\\u0180gsw\\u0ac7\\u0af0\\u0b0eative\\u0180MTV\\u0ad3\\u0adf\\u0ae8ediumSpace;\\u600bhi\\u0100cn\\u0ae6\\u0ad8\\xeb\\u0ad9eryThi\\xee\\u0ad9ted\\u0100GL\\u0af8\\u0b06reaterGreate\\xf2\\u0673essLes\\xf3\\u0a48Line;\\u400ar;\\uc000\\ud835\\udd11\\u0200Bnpt\\u0b22\\u0b28\\u0b37\\u0b3areak;\\u6060BreakingSpace;\\u40a0f;\\u6115\\u0680;CDEGHLNPRSTV\\u0b55\\u0b56\\u0b6a\\u0b7c\\u0ba1\\u0beb\\u0c04\\u0c5e\\u0c84\\u0ca6\\u0cd8\\u0d61\\u0d85\\u6aec\\u0100ou\\u0b5b\\u0b64ngruent;\\u6262pCap;\\u626doubleVerticalBar;\\u6226\\u0180lqx\\u0b83\\u0b8a\\u0b9bement;\\u6209ual\\u0100;T\\u0b92\\u0b93\\u6260ilde;\\uc000\\u2242\\u0338ists;\\u6204reater\\u0380;EFGLST\\u0bb6\\u0bb7\\u0bbd\\u0bc9\\u0bd3\\u0bd8\\u0be5\\u626fqual;\\u6271ullEqual;\\uc000\\u2267\\u0338reater;\\uc000\\u226b\\u0338ess;\\u6279lantEqual;\\uc000\\u2a7e\\u0338ilde;\\u6275ump\\u0144\\u0bf2\\u0bfdownHump;\\uc000\\u224e\\u0338qual;\\uc000\\u224f\\u0338e\\u0100fs\\u0c0a\\u0c27tTriangle\\u0180;BE\\u0c1a\\u0c1b\\u0c21\\u62eaar;\\uc000\\u29cf\\u0338qual;\\u62ecs\\u0300;EGLST\\u0c35\\u0c36\\u0c3c\\u0c44\\u0c4b\\u0c58\\u626equal;\\u6270reater;\\u6278ess;\\uc000\\u226a\\u0338lantEqual;\\uc000\\u2a7d\\u0338ilde;\\u6274ested\\u0100GL\\u0c68\\u0c79reaterGreater;\\uc000\\u2aa2\\u0338essLess;\\uc000\\u2aa1\\u0338recedes\\u0180;ES\\u0c92\\u0c93\\u0c9b\\u6280qual;\\uc000\\u2aaf\\u0338lantEqual;\\u62e0\\u0100ei\\u0cab\\u0cb9verseElement;\\u620cghtTriangle\\u0180;BE\\u0ccb\\u0ccc\\u0cd2\\u62ebar;\\uc000\\u29d0\\u0338qual;\\u62ed\\u0100qu\\u0cdd\\u0d0cuareSu\\u0100bp\\u0ce8\\u0cf9set\\u0100;E\\u0cf0\\u0cf3\\uc000\\u228f\\u0338qual;\\u62e2erset\\u0100;E\\u0d03\\u0d06\\uc000\\u2290\\u0338qual;\\u62e3\\u0180bcp\\u0d13\\u0d24\\u0d4eset\\u0100;E\\u0d1b\\u0d1e\\uc000\\u2282\\u20d2qual;\\u6288ceeds\\u0200;EST\\u0d32\\u0d33\\u0d3b\\u0d46\\u6281qual;\\uc000\\u2ab0\\u0338lantEqual;\\u62e1ilde;\\uc000\\u227f\\u0338erset\\u0100;E\\u0d58\\u0d5b\\uc000\\u2283\\u20d2qual;\\u6289ilde\\u0200;EFT\\u0d6e\\u0d6f\\u0d75\\u0d7f\\u6241qual;\\u6244ullEqual;\\u6247ilde;\\u6249erticalBar;\\u6224cr;\\uc000\\ud835\\udca9ilde\\u803b\\xd1\\u40d1;\\u439d\\u0700Eacdfgmoprstuv\\u0dbd\\u0dc2\\u0dc9\\u0dd5\\u0ddb\\u0de0\\u0de7\\u0dfc\\u0e02\\u0e20\\u0e22\\u0e32\\u0e3f\\u0e44lig;\\u4152cute\\u803b\\xd3\\u40d3\\u0100iy\\u0dce\\u0dd3rc\\u803b\\xd4\\u40d4;\\u441eblac;\\u4150r;\\uc000\\ud835\\udd12rave\\u803b\\xd2\\u40d2\\u0180aei\\u0dee\\u0df2\\u0df6cr;\\u414cga;\\u43a9cron;\\u439fpf;\\uc000\\ud835\\udd46enCurly\\u0100DQ\\u0e0e\\u0e1aoubleQuote;\\u601cuote;\\u6018;\\u6a54\\u0100cl\\u0e27\\u0e2cr;\\uc000\\ud835\\udcaaash\\u803b\\xd8\\u40d8i\\u016c\\u0e37\\u0e3cde\\u803b\\xd5\\u40d5es;\\u6a37ml\\u803b\\xd6\\u40d6er\\u0100BP\\u0e4b\\u0e60\\u0100ar\\u0e50\\u0e53r;\\u603eac\\u0100ek\\u0e5a\\u0e5c;\\u63deet;\\u63b4arenthesis;\\u63dc\\u0480acfhilors\\u0e7f\\u0e87\\u0e8a\\u0e8f\\u0e92\\u0e94\\u0e9d\\u0eb0\\u0efcrtialD;\\u6202y;\\u441fr;\\uc000\\ud835\\udd13i;\\u43a6;\\u43a0usMinus;\\u40b1\\u0100ip\\u0ea2\\u0eadncareplan\\xe5\\u069df;\\u6119\\u0200;eio\\u0eb9\\u0eba\\u0ee0\\u0ee4\\u6abbcedes\\u0200;EST\\u0ec8\\u0ec9\\u0ecf\\u0eda\\u627aqual;\\u6aaflantEqual;\\u627cilde;\\u627eme;\\u6033\\u0100dp\\u0ee9\\u0eeeuct;\\u620fortion\\u0100;a\\u0225\\u0ef9l;\\u621d\\u0100ci\\u0f01\\u0f06r;\\uc000\\ud835\\udcab;\\u43a8\\u0200Ufos\\u0f11\\u0f16\\u0f1b\\u0f1fOT\\u803b\\\"\\u4022r;\\uc000\\ud835\\udd14pf;\\u611acr;\\uc000\\ud835\\udcac\\u0600BEacefhiorsu\\u0f3e\\u0f43\\u0f47\\u0f60\\u0f73\\u0fa7\\u0faa\\u0fad\\u1096\\u10a9\\u10b4\\u10bearr;\\u6910G\\u803b\\xae\\u40ae\\u0180cnr\\u0f4e\\u0f53\\u0f56ute;\\u4154g;\\u67ebr\\u0100;t\\u0f5c\\u0f5d\\u61a0l;\\u6916\\u0180aey\\u0f67\\u0f6c\\u0f71ron;\\u4158dil;\\u4156;\\u4420\\u0100;v\\u0f78\\u0f79\\u611cerse\\u0100EU\\u0f82\\u0f99\\u0100lq\\u0f87\\u0f8eement;\\u620builibrium;\\u61cbpEquilibrium;\\u696fr\\xbb\\u0f79o;\\u43a1ght\\u0400ACDFTUVa\\u0fc1\\u0feb\\u0ff3\\u1022\\u1028\\u105b\\u1087\\u03d8\\u0100nr\\u0fc6\\u0fd2gleBracket;\\u67e9row\\u0180;BL\\u0fdc\\u0fdd\\u0fe1\\u6192ar;\\u61e5eftArrow;\\u61c4eiling;\\u6309o\\u01f5\\u0ff9\\0\\u1005bleBracket;\\u67e7n\\u01d4\\u100a\\0\\u1014eeVector;\\u695dector\\u0100;B\\u101d\\u101e\\u61c2ar;\\u6955loor;\\u630b\\u0100er\\u102d\\u1043e\\u0180;AV\\u1035\\u1036\\u103c\\u62a2rrow;\\u61a6ector;\\u695biangle\\u0180;BE\\u1050\\u1051\\u1055\\u62b3ar;\\u69d0qual;\\u62b5p\\u0180DTV\\u1063\\u106e\\u1078ownVector;\\u694feeVector;\\u695cector\\u0100;B\\u1082\\u1083\\u61bear;\\u6954ector\\u0100;B\\u1091\\u1092\\u61c0ar;\\u6953\\u0100pu\\u109b\\u109ef;\\u611dndImplies;\\u6970ightarrow;\\u61db\\u0100ch\\u10b9\\u10bcr;\\u611b;\\u61b1leDelayed;\\u69f4\\u0680HOacfhimoqstu\\u10e4\\u10f1\\u10f7\\u10fd\\u1119\\u111e\\u1151\\u1156\\u1161\\u1167\\u11b5\\u11bb\\u11bf\\u0100Cc\\u10e9\\u10eeHcy;\\u4429y;\\u4428FTcy;\\u442ccute;\\u415a\\u0280;aeiy\\u1108\\u1109\\u110e\\u1113\\u1117\\u6abcron;\\u4160dil;\\u415erc;\\u415c;\\u4421r;\\uc000\\ud835\\udd16ort\\u0200DLRU\\u112a\\u1134\\u113e\\u1149ownArrow\\xbb\\u041eeftArrow\\xbb\\u089aightArrow\\xbb\\u0fddpArrow;\\u6191gma;\\u43a3allCircle;\\u6218pf;\\uc000\\ud835\\udd4a\\u0272\\u116d\\0\\0\\u1170t;\\u621aare\\u0200;ISU\\u117b\\u117c\\u1189\\u11af\\u65a1ntersection;\\u6293u\\u0100bp\\u118f\\u119eset\\u0100;E\\u1197\\u1198\\u628fqual;\\u6291erset\\u0100;E\\u11a8\\u11a9\\u6290qual;\\u6292nion;\\u6294cr;\\uc000\\ud835\\udcaear;\\u62c6\\u0200bcmp\\u11c8\\u11db\\u1209\\u120b\\u0100;s\\u11cd\\u11ce\\u62d0et\\u0100;E\\u11cd\\u11d5qual;\\u6286\\u0100ch\\u11e0\\u1205eeds\\u0200;EST\\u11ed\\u11ee\\u11f4\\u11ff\\u627bqual;\\u6ab0lantEqual;\\u627dilde;\\u627fTh\\xe1\\u0f8c;\\u6211\\u0180;es\\u1212\\u1213\\u1223\\u62d1rset\\u0100;E\\u121c\\u121d\\u6283qual;\\u6287et\\xbb\\u1213\\u0580HRSacfhiors\\u123e\\u1244\\u1249\\u1255\\u125e\\u1271\\u1276\\u129f\\u12c2\\u12c8\\u12d1ORN\\u803b\\xde\\u40deADE;\\u6122\\u0100Hc\\u124e\\u1252cy;\\u440by;\\u4426\\u0100bu\\u125a\\u125c;\\u4009;\\u43a4\\u0180aey\\u1265\\u126a\\u126fron;\\u4164dil;\\u4162;\\u4422r;\\uc000\\ud835\\udd17\\u0100ei\\u127b\\u1289\\u01f2\\u1280\\0\\u1287efore;\\u6234a;\\u4398\\u0100cn\\u128e\\u1298kSpace;\\uc000\\u205f\\u200aSpace;\\u6009lde\\u0200;EFT\\u12ab\\u12ac\\u12b2\\u12bc\\u623cqual;\\u6243ullEqual;\\u6245ilde;\\u6248pf;\\uc000\\ud835\\udd4bipleDot;\\u60db\\u0100ct\\u12d6\\u12dbr;\\uc000\\ud835\\udcafrok;\\u4166\\u0ae1\\u12f7\\u130e\\u131a\\u1326\\0\\u132c\\u1331\\0\\0\\0\\0\\0\\u1338\\u133d\\u1377\\u1385\\0\\u13ff\\u1404\\u140a\\u1410\\u0100cr\\u12fb\\u1301ute\\u803b\\xda\\u40dar\\u0100;o\\u1307\\u1308\\u619fcir;\\u6949r\\u01e3\\u1313\\0\\u1316y;\\u440eve;\\u416c\\u0100iy\\u131e\\u1323rc\\u803b\\xdb\\u40db;\\u4423blac;\\u4170r;\\uc000\\ud835\\udd18rave\\u803b\\xd9\\u40d9acr;\\u416a\\u0100di\\u1341\\u1369er\\u0100BP\\u1348\\u135d\\u0100ar\\u134d\\u1350r;\\u405fac\\u0100ek\\u1357\\u1359;\\u63dfet;\\u63b5arenthesis;\\u63ddon\\u0100;P\\u1370\\u1371\\u62c3lus;\\u628e\\u0100gp\\u137b\\u137fon;\\u4172f;\\uc000\\ud835\\udd4c\\u0400ADETadps\\u1395\\u13ae\\u13b8\\u13c4\\u03e8\\u13d2\\u13d7\\u13f3rrow\\u0180;BD\\u1150\\u13a0\\u13a4ar;\\u6912ownArrow;\\u61c5ownArrow;\\u6195quilibrium;\\u696eee\\u0100;A\\u13cb\\u13cc\\u62a5rrow;\\u61a5own\\xe1\\u03f3er\\u0100LR\\u13de\\u13e8eftArrow;\\u6196ightArrow;\\u6197i\\u0100;l\\u13f9\\u13fa\\u43d2on;\\u43a5ing;\\u416ecr;\\uc000\\ud835\\udcb0ilde;\\u4168ml\\u803b\\xdc\\u40dc\\u0480Dbcdefosv\\u1427\\u142c\\u1430\\u1433\\u143e\\u1485\\u148a\\u1490\\u1496ash;\\u62abar;\\u6aeby;\\u4412ash\\u0100;l\\u143b\\u143c\\u62a9;\\u6ae6\\u0100er\\u1443\\u1445;\\u62c1\\u0180bty\\u144c\\u1450\\u147aar;\\u6016\\u0100;i\\u144f\\u1455cal\\u0200BLST\\u1461\\u1465\\u146a\\u1474ar;\\u6223ine;\\u407ceparator;\\u6758ilde;\\u6240ThinSpace;\\u600ar;\\uc000\\ud835\\udd19pf;\\uc000\\ud835\\udd4dcr;\\uc000\\ud835\\udcb1dash;\\u62aa\\u0280cefos\\u14a7\\u14ac\\u14b1\\u14b6\\u14bcirc;\\u4174dge;\\u62c0r;\\uc000\\ud835\\udd1apf;\\uc000\\ud835\\udd4ecr;\\uc000\\ud835\\udcb2\\u0200fios\\u14cb\\u14d0\\u14d2\\u14d8r;\\uc000\\ud835\\udd1b;\\u439epf;\\uc000\\ud835\\udd4fcr;\\uc000\\ud835\\udcb3\\u0480AIUacfosu\\u14f1\\u14f5\\u14f9\\u14fd\\u1504\\u150f\\u1514\\u151a\\u1520cy;\\u442fcy;\\u4407cy;\\u442ecute\\u803b\\xdd\\u40dd\\u0100iy\\u1509\\u150drc;\\u4176;\\u442br;\\uc000\\ud835\\udd1cpf;\\uc000\\ud835\\udd50cr;\\uc000\\ud835\\udcb4ml;\\u4178\\u0400Hacdefos\\u1535\\u1539\\u153f\\u154b\\u154f\\u155d\\u1560\\u1564cy;\\u4416cute;\\u4179\\u0100ay\\u1544\\u1549ron;\\u417d;\\u4417ot;\\u417b\\u01f2\\u1554\\0\\u155boWidt\\xe8\\u0ad9a;\\u4396r;\\u6128pf;\\u6124cr;\\uc000\\ud835\\udcb5\\u0be1\\u1583\\u158a\\u1590\\0\\u15b0\\u15b6\\u15bf\\0\\0\\0\\0\\u15c6\\u15db\\u15eb\\u165f\\u166d\\0\\u1695\\u169b\\u16b2\\u16b9\\0\\u16becute\\u803b\\xe1\\u40e1reve;\\u4103\\u0300;Ediuy\\u159c\\u159d\\u15a1\\u15a3\\u15a8\\u15ad\\u623e;\\uc000\\u223e\\u0333;\\u623frc\\u803b\\xe2\\u40e2te\\u80bb\\xb4\\u0306;\\u4430lig\\u803b\\xe6\\u40e6\\u0100;r\\xb2\\u15ba;\\uc000\\ud835\\udd1erave\\u803b\\xe0\\u40e0\\u0100ep\\u15ca\\u15d6\\u0100fp\\u15cf\\u15d4sym;\\u6135\\xe8\\u15d3ha;\\u43b1\\u0100ap\\u15dfc\\u0100cl\\u15e4\\u15e7r;\\u4101g;\\u6a3f\\u0264\\u15f0\\0\\0\\u160a\\u0280;adsv\\u15fa\\u15fb\\u15ff\\u1601\\u1607\\u6227nd;\\u6a55;\\u6a5clope;\\u6a58;\\u6a5a\\u0380;elmrsz\\u1618\\u1619\\u161b\\u161e\\u163f\\u164f\\u1659\\u6220;\\u69a4e\\xbb\\u1619sd\\u0100;a\\u1625\\u1626\\u6221\\u0461\\u1630\\u1632\\u1634\\u1636\\u1638\\u163a\\u163c\\u163e;\\u69a8;\\u69a9;\\u69aa;\\u69ab;\\u69ac;\\u69ad;\\u69ae;\\u69aft\\u0100;v\\u1645\\u1646\\u621fb\\u0100;d\\u164c\\u164d\\u62be;\\u699d\\u0100pt\\u1654\\u1657h;\\u6222\\xbb\\xb9arr;\\u637c\\u0100gp\\u1663\\u1667on;\\u4105f;\\uc000\\ud835\\udd52\\u0380;Eaeiop\\u12c1\\u167b\\u167d\\u1682\\u1684\\u1687\\u168a;\\u6a70cir;\\u6a6f;\\u624ad;\\u624bs;\\u4027rox\\u0100;e\\u12c1\\u1692\\xf1\\u1683ing\\u803b\\xe5\\u40e5\\u0180cty\\u16a1\\u16a6\\u16a8r;\\uc000\\ud835\\udcb6;\\u402amp\\u0100;e\\u12c1\\u16af\\xf1\\u0288ilde\\u803b\\xe3\\u40e3ml\\u803b\\xe4\\u40e4\\u0100ci\\u16c2\\u16c8onin\\xf4\\u0272nt;\\u6a11\\u0800Nabcdefiklnoprsu\\u16ed\\u16f1\\u1730\\u173c\\u1743\\u1748\\u1778\\u177d\\u17e0\\u17e6\\u1839\\u1850\\u170d\\u193d\\u1948\\u1970ot;\\u6aed\\u0100cr\\u16f6\\u171ek\\u0200ceps\\u1700\\u1705\\u170d\\u1713ong;\\u624cpsilon;\\u43f6rime;\\u6035im\\u0100;e\\u171a\\u171b\\u623dq;\\u62cd\\u0176\\u1722\\u1726ee;\\u62bded\\u0100;g\\u172c\\u172d\\u6305e\\xbb\\u172drk\\u0100;t\\u135c\\u1737brk;\\u63b6\\u0100oy\\u1701\\u1741;\\u4431quo;\\u601e\\u0280cmprt\\u1753\\u175b\\u1761\\u1764\\u1768aus\\u0100;e\\u010a\\u0109ptyv;\\u69b0s\\xe9\\u170cno\\xf5\\u0113\\u0180ahw\\u176f\\u1771\\u1773;\\u43b2;\\u6136een;\\u626cr;\\uc000\\ud835\\udd1fg\\u0380costuvw\\u178d\\u179d\\u17b3\\u17c1\\u17d5\\u17db\\u17de\\u0180aiu\\u1794\\u1796\\u179a\\xf0\\u0760rc;\\u65efp\\xbb\\u1371\\u0180dpt\\u17a4\\u17a8\\u17adot;\\u6a00lus;\\u6a01imes;\\u6a02\\u0271\\u17b9\\0\\0\\u17becup;\\u6a06ar;\\u6605riangle\\u0100du\\u17cd\\u17d2own;\\u65bdp;\\u65b3plus;\\u6a04e\\xe5\\u1444\\xe5\\u14adarow;\\u690d\\u0180ako\\u17ed\\u1826\\u1835\\u0100cn\\u17f2\\u1823k\\u0180lst\\u17fa\\u05ab\\u1802ozenge;\\u69ebriangle\\u0200;dlr\\u1812\\u1813\\u1818\\u181d\\u65b4own;\\u65beeft;\\u65c2ight;\\u65b8k;\\u6423\\u01b1\\u182b\\0\\u1833\\u01b2\\u182f\\0\\u1831;\\u6592;\\u65914;\\u6593ck;\\u6588\\u0100eo\\u183e\\u184d\\u0100;q\\u1843\\u1846\\uc000=\\u20e5uiv;\\uc000\\u2261\\u20e5t;\\u6310\\u0200ptwx\\u1859\\u185e\\u1867\\u186cf;\\uc000\\ud835\\udd53\\u0100;t\\u13cb\\u1863om\\xbb\\u13cctie;\\u62c8\\u0600DHUVbdhmptuv\\u1885\\u1896\\u18aa\\u18bb\\u18d7\\u18db\\u18ec\\u18ff\\u1905\\u190a\\u1910\\u1921\\u0200LRlr\\u188e\\u1890\\u1892\\u1894;\\u6557;\\u6554;\\u6556;\\u6553\\u0280;DUdu\\u18a1\\u18a2\\u18a4\\u18a6\\u18a8\\u6550;\\u6566;\\u6569;\\u6564;\\u6567\\u0200LRlr\\u18b3\\u18b5\\u18b7\\u18b9;\\u655d;\\u655a;\\u655c;\\u6559\\u0380;HLRhlr\\u18ca\\u18cb\\u18cd\\u18cf\\u18d1\\u18d3\\u18d5\\u6551;\\u656c;\\u6563;\\u6560;\\u656b;\\u6562;\\u655fox;\\u69c9\\u0200LRlr\\u18e4\\u18e6\\u18e8\\u18ea;\\u6555;\\u6552;\\u6510;\\u650c\\u0280;DUdu\\u06bd\\u18f7\\u18f9\\u18fb\\u18fd;\\u6565;\\u6568;\\u652c;\\u6534inus;\\u629flus;\\u629eimes;\\u62a0\\u0200LRlr\\u1919\\u191b\\u191d\\u191f;\\u655b;\\u6558;\\u6518;\\u6514\\u0380;HLRhlr\\u1930\\u1931\\u1933\\u1935\\u1937\\u1939\\u193b\\u6502;\\u656a;\\u6561;\\u655e;\\u653c;\\u6524;\\u651c\\u0100ev\\u0123\\u1942bar\\u803b\\xa6\\u40a6\\u0200ceio\\u1951\\u1956\\u195a\\u1960r;\\uc000\\ud835\\udcb7mi;\\u604fm\\u0100;e\\u171a\\u171cl\\u0180;bh\\u1968\\u1969\\u196b\\u405c;\\u69c5sub;\\u67c8\\u016c\\u1974\\u197el\\u0100;e\\u1979\\u197a\\u6022t\\xbb\\u197ap\\u0180;Ee\\u012f\\u1985\\u1987;\\u6aae\\u0100;q\\u06dc\\u06db\\u0ce1\\u19a7\\0\\u19e8\\u1a11\\u1a15\\u1a32\\0\\u1a37\\u1a50\\0\\0\\u1ab4\\0\\0\\u1ac1\\0\\0\\u1b21\\u1b2e\\u1b4d\\u1b52\\0\\u1bfd\\0\\u1c0c\\u0180cpr\\u19ad\\u19b2\\u19ddute;\\u4107\\u0300;abcds\\u19bf\\u19c0\\u19c4\\u19ca\\u19d5\\u19d9\\u6229nd;\\u6a44rcup;\\u6a49\\u0100au\\u19cf\\u19d2p;\\u6a4bp;\\u6a47ot;\\u6a40;\\uc000\\u2229\\ufe00\\u0100eo\\u19e2\\u19e5t;\\u6041\\xee\\u0693\\u0200aeiu\\u19f0\\u19fb\\u1a01\\u1a05\\u01f0\\u19f5\\0\\u19f8s;\\u6a4don;\\u410ddil\\u803b\\xe7\\u40e7rc;\\u4109ps\\u0100;s\\u1a0c\\u1a0d\\u6a4cm;\\u6a50ot;\\u410b\\u0180dmn\\u1a1b\\u1a20\\u1a26il\\u80bb\\xb8\\u01adptyv;\\u69b2t\\u8100\\xa2;e\\u1a2d\\u1a2e\\u40a2r\\xe4\\u01b2r;\\uc000\\ud835\\udd20\\u0180cei\\u1a3d\\u1a40\\u1a4dy;\\u4447ck\\u0100;m\\u1a47\\u1a48\\u6713ark\\xbb\\u1a48;\\u43c7r\\u0380;Ecefms\\u1a5f\\u1a60\\u1a62\\u1a6b\\u1aa4\\u1aaa\\u1aae\\u65cb;\\u69c3\\u0180;el\\u1a69\\u1a6a\\u1a6d\\u42c6q;\\u6257e\\u0261\\u1a74\\0\\0\\u1a88rrow\\u0100lr\\u1a7c\\u1a81eft;\\u61baight;\\u61bb\\u0280RSacd\\u1a92\\u1a94\\u1a96\\u1a9a\\u1a9f\\xbb\\u0f47;\\u64c8st;\\u629birc;\\u629aash;\\u629dnint;\\u6a10id;\\u6aefcir;\\u69c2ubs\\u0100;u\\u1abb\\u1abc\\u6663it\\xbb\\u1abc\\u02ec\\u1ac7\\u1ad4\\u1afa\\0\\u1b0aon\\u0100;e\\u1acd\\u1ace\\u403a\\u0100;q\\xc7\\xc6\\u026d\\u1ad9\\0\\0\\u1ae2a\\u0100;t\\u1ade\\u1adf\\u402c;\\u4040\\u0180;fl\\u1ae8\\u1ae9\\u1aeb\\u6201\\xee\\u1160e\\u0100mx\\u1af1\\u1af6ent\\xbb\\u1ae9e\\xf3\\u024d\\u01e7\\u1afe\\0\\u1b07\\u0100;d\\u12bb\\u1b02ot;\\u6a6dn\\xf4\\u0246\\u0180fry\\u1b10\\u1b14\\u1b17;\\uc000\\ud835\\udd54o\\xe4\\u0254\\u8100\\xa9;s\\u0155\\u1b1dr;\\u6117\\u0100ao\\u1b25\\u1b29rr;\\u61b5ss;\\u6717\\u0100cu\\u1b32\\u1b37r;\\uc000\\ud835\\udcb8\\u0100bp\\u1b3c\\u1b44\\u0100;e\\u1b41\\u1b42\\u6acf;\\u6ad1\\u0100;e\\u1b49\\u1b4a\\u6ad0;\\u6ad2dot;\\u62ef\\u0380delprvw\\u1b60\\u1b6c\\u1b77\\u1b82\\u1bac\\u1bd4\\u1bf9arr\\u0100lr\\u1b68\\u1b6a;\\u6938;\\u6935\\u0270\\u1b72\\0\\0\\u1b75r;\\u62dec;\\u62dfarr\\u0100;p\\u1b7f\\u1b80\\u61b6;\\u693d\\u0300;bcdos\\u1b8f\\u1b90\\u1b96\\u1ba1\\u1ba5\\u1ba8\\u622arcap;\\u6a48\\u0100au\\u1b9b\\u1b9ep;\\u6a46p;\\u6a4aot;\\u628dr;\\u6a45;\\uc000\\u222a\\ufe00\\u0200alrv\\u1bb5\\u1bbf\\u1bde\\u1be3rr\\u0100;m\\u1bbc\\u1bbd\\u61b7;\\u693cy\\u0180evw\\u1bc7\\u1bd4\\u1bd8q\\u0270\\u1bce\\0\\0\\u1bd2re\\xe3\\u1b73u\\xe3\\u1b75ee;\\u62ceedge;\\u62cfen\\u803b\\xa4\\u40a4earrow\\u0100lr\\u1bee\\u1bf3eft\\xbb\\u1b80ight\\xbb\\u1bbde\\xe4\\u1bdd\\u0100ci\\u1c01\\u1c07onin\\xf4\\u01f7nt;\\u6231lcty;\\u632d\\u0980AHabcdefhijlorstuwz\\u1c38\\u1c3b\\u1c3f\\u1c5d\\u1c69\\u1c75\\u1c8a\\u1c9e\\u1cac\\u1cb7\\u1cfb\\u1cff\\u1d0d\\u1d7b\\u1d91\\u1dab\\u1dbb\\u1dc6\\u1dcdr\\xf2\\u0381ar;\\u6965\\u0200glrs\\u1c48\\u1c4d\\u1c52\\u1c54ger;\\u6020eth;\\u6138\\xf2\\u1133h\\u0100;v\\u1c5a\\u1c5b\\u6010\\xbb\\u090a\\u016b\\u1c61\\u1c67arow;\\u690fa\\xe3\\u0315\\u0100ay\\u1c6e\\u1c73ron;\\u410f;\\u4434\\u0180;ao\\u0332\\u1c7c\\u1c84\\u0100gr\\u02bf\\u1c81r;\\u61catseq;\\u6a77\\u0180glm\\u1c91\\u1c94\\u1c98\\u803b\\xb0\\u40b0ta;\\u43b4ptyv;\\u69b1\\u0100ir\\u1ca3\\u1ca8sht;\\u697f;\\uc000\\ud835\\udd21ar\\u0100lr\\u1cb3\\u1cb5\\xbb\\u08dc\\xbb\\u101e\\u0280aegsv\\u1cc2\\u0378\\u1cd6\\u1cdc\\u1ce0m\\u0180;os\\u0326\\u1cca\\u1cd4nd\\u0100;s\\u0326\\u1cd1uit;\\u6666amma;\\u43ddin;\\u62f2\\u0180;io\\u1ce7\\u1ce8\\u1cf8\\u40f7de\\u8100\\xf7;o\\u1ce7\\u1cf0ntimes;\\u62c7n\\xf8\\u1cf7cy;\\u4452c\\u026f\\u1d06\\0\\0\\u1d0arn;\\u631eop;\\u630d\\u0280lptuw\\u1d18\\u1d1d\\u1d22\\u1d49\\u1d55lar;\\u4024f;\\uc000\\ud835\\udd55\\u0280;emps\\u030b\\u1d2d\\u1d37\\u1d3d\\u1d42q\\u0100;d\\u0352\\u1d33ot;\\u6251inus;\\u6238lus;\\u6214quare;\\u62a1blebarwedg\\xe5\\xfan\\u0180adh\\u112e\\u1d5d\\u1d67ownarrow\\xf3\\u1c83arpoon\\u0100lr\\u1d72\\u1d76ef\\xf4\\u1cb4igh\\xf4\\u1cb6\\u0162\\u1d7f\\u1d85karo\\xf7\\u0f42\\u026f\\u1d8a\\0\\0\\u1d8ern;\\u631fop;\\u630c\\u0180cot\\u1d98\\u1da3\\u1da6\\u0100ry\\u1d9d\\u1da1;\\uc000\\ud835\\udcb9;\\u4455l;\\u69f6rok;\\u4111\\u0100dr\\u1db0\\u1db4ot;\\u62f1i\\u0100;f\\u1dba\\u1816\\u65bf\\u0100ah\\u1dc0\\u1dc3r\\xf2\\u0429a\\xf2\\u0fa6angle;\\u69a6\\u0100ci\\u1dd2\\u1dd5y;\\u445fgrarr;\\u67ff\\u0900Dacdefglmnopqrstux\\u1e01\\u1e09\\u1e19\\u1e38\\u0578\\u1e3c\\u1e49\\u1e61\\u1e7e\\u1ea5\\u1eaf\\u1ebd\\u1ee1\\u1f2a\\u1f37\\u1f44\\u1f4e\\u1f5a\\u0100Do\\u1e06\\u1d34o\\xf4\\u1c89\\u0100cs\\u1e0e\\u1e14ute\\u803b\\xe9\\u40e9ter;\\u6a6e\\u0200aioy\\u1e22\\u1e27\\u1e31\\u1e36ron;\\u411br\\u0100;c\\u1e2d\\u1e2e\\u6256\\u803b\\xea\\u40ealon;\\u6255;\\u444dot;\\u4117\\u0100Dr\\u1e41\\u1e45ot;\\u6252;\\uc000\\ud835\\udd22\\u0180;rs\\u1e50\\u1e51\\u1e57\\u6a9aave\\u803b\\xe8\\u40e8\\u0100;d\\u1e5c\\u1e5d\\u6a96ot;\\u6a98\\u0200;ils\\u1e6a\\u1e6b\\u1e72\\u1e74\\u6a99nters;\\u63e7;\\u6113\\u0100;d\\u1e79\\u1e7a\\u6a95ot;\\u6a97\\u0180aps\\u1e85\\u1e89\\u1e97cr;\\u4113ty\\u0180;sv\\u1e92\\u1e93\\u1e95\\u6205et\\xbb\\u1e93p\\u01001;\\u1e9d\\u1ea4\\u0133\\u1ea1\\u1ea3;\\u6004;\\u6005\\u6003\\u0100gs\\u1eaa\\u1eac;\\u414bp;\\u6002\\u0100gp\\u1eb4\\u1eb8on;\\u4119f;\\uc000\\ud835\\udd56\\u0180als\\u1ec4\\u1ece\\u1ed2r\\u0100;s\\u1eca\\u1ecb\\u62d5l;\\u69e3us;\\u6a71i\\u0180;lv\\u1eda\\u1edb\\u1edf\\u43b5on\\xbb\\u1edb;\\u43f5\\u0200csuv\\u1eea\\u1ef3\\u1f0b\\u1f23\\u0100io\\u1eef\\u1e31rc\\xbb\\u1e2e\\u0269\\u1ef9\\0\\0\\u1efb\\xed\\u0548ant\\u0100gl\\u1f02\\u1f06tr\\xbb\\u1e5dess\\xbb\\u1e7a\\u0180aei\\u1f12\\u1f16\\u1f1als;\\u403dst;\\u625fv\\u0100;D\\u0235\\u1f20D;\\u6a78parsl;\\u69e5\\u0100Da\\u1f2f\\u1f33ot;\\u6253rr;\\u6971\\u0180cdi\\u1f3e\\u1f41\\u1ef8r;\\u612fo\\xf4\\u0352\\u0100ah\\u1f49\\u1f4b;\\u43b7\\u803b\\xf0\\u40f0\\u0100mr\\u1f53\\u1f57l\\u803b\\xeb\\u40ebo;\\u60ac\\u0180cip\\u1f61\\u1f64\\u1f67l;\\u4021s\\xf4\\u056e\\u0100eo\\u1f6c\\u1f74ctatio\\xee\\u0559nential\\xe5\\u0579\\u09e1\\u1f92\\0\\u1f9e\\0\\u1fa1\\u1fa7\\0\\0\\u1fc6\\u1fcc\\0\\u1fd3\\0\\u1fe6\\u1fea\\u2000\\0\\u2008\\u205allingdotse\\xf1\\u1e44y;\\u4444male;\\u6640\\u0180ilr\\u1fad\\u1fb3\\u1fc1lig;\\u8000\\ufb03\\u0269\\u1fb9\\0\\0\\u1fbdg;\\u8000\\ufb00ig;\\u8000\\ufb04;\\uc000\\ud835\\udd23lig;\\u8000\\ufb01lig;\\uc000fj\\u0180alt\\u1fd9\\u1fdc\\u1fe1t;\\u666dig;\\u8000\\ufb02ns;\\u65b1of;\\u4192\\u01f0\\u1fee\\0\\u1ff3f;\\uc000\\ud835\\udd57\\u0100ak\\u05bf\\u1ff7\\u0100;v\\u1ffc\\u1ffd\\u62d4;\\u6ad9artint;\\u6a0d\\u0100ao\\u200c\\u2055\\u0100cs\\u2011\\u2052\\u03b1\\u201a\\u2030\\u2038\\u2045\\u2048\\0\\u2050\\u03b2\\u2022\\u2025\\u2027\\u202a\\u202c\\0\\u202e\\u803b\\xbd\\u40bd;\\u6153\\u803b\\xbc\\u40bc;\\u6155;\\u6159;\\u615b\\u01b3\\u2034\\0\\u2036;\\u6154;\\u6156\\u02b4\\u203e\\u2041\\0\\0\\u2043\\u803b\\xbe\\u40be;\\u6157;\\u615c5;\\u6158\\u01b6\\u204c\\0\\u204e;\\u615a;\\u615d8;\\u615el;\\u6044wn;\\u6322cr;\\uc000\\ud835\\udcbb\\u0880Eabcdefgijlnorstv\\u2082\\u2089\\u209f\\u20a5\\u20b0\\u20b4\\u20f0\\u20f5\\u20fa\\u20ff\\u2103\\u2112\\u2138\\u0317\\u213e\\u2152\\u219e\\u0100;l\\u064d\\u2087;\\u6a8c\\u0180cmp\\u2090\\u2095\\u209dute;\\u41f5ma\\u0100;d\\u209c\\u1cda\\u43b3;\\u6a86reve;\\u411f\\u0100iy\\u20aa\\u20aerc;\\u411d;\\u4433ot;\\u4121\\u0200;lqs\\u063e\\u0642\\u20bd\\u20c9\\u0180;qs\\u063e\\u064c\\u20c4lan\\xf4\\u0665\\u0200;cdl\\u0665\\u20d2\\u20d5\\u20e5c;\\u6aa9ot\\u0100;o\\u20dc\\u20dd\\u6a80\\u0100;l\\u20e2\\u20e3\\u6a82;\\u6a84\\u0100;e\\u20ea\\u20ed\\uc000\\u22db\\ufe00s;\\u6a94r;\\uc000\\ud835\\udd24\\u0100;g\\u0673\\u061bmel;\\u6137cy;\\u4453\\u0200;Eaj\\u065a\\u210c\\u210e\\u2110;\\u6a92;\\u6aa5;\\u6aa4\\u0200Eaes\\u211b\\u211d\\u2129\\u2134;\\u6269p\\u0100;p\\u2123\\u2124\\u6a8arox\\xbb\\u2124\\u0100;q\\u212e\\u212f\\u6a88\\u0100;q\\u212e\\u211bim;\\u62e7pf;\\uc000\\ud835\\udd58\\u0100ci\\u2143\\u2146r;\\u610am\\u0180;el\\u066b\\u214e\\u2150;\\u6a8e;\\u6a90\\u8300>;cdlqr\\u05ee\\u2160\\u216a\\u216e\\u2173\\u2179\\u0100ci\\u2165\\u2167;\\u6aa7r;\\u6a7aot;\\u62d7Par;\\u6995uest;\\u6a7c\\u0280adels\\u2184\\u216a\\u2190\\u0656\\u219b\\u01f0\\u2189\\0\\u218epro\\xf8\\u209er;\\u6978q\\u0100lq\\u063f\\u2196les\\xf3\\u2088i\\xed\\u066b\\u0100en\\u21a3\\u21adrtneqq;\\uc000\\u2269\\ufe00\\xc5\\u21aa\\u0500Aabcefkosy\\u21c4\\u21c7\\u21f1\\u21f5\\u21fa\\u2218\\u221d\\u222f\\u2268\\u227dr\\xf2\\u03a0\\u0200ilmr\\u21d0\\u21d4\\u21d7\\u21dbrs\\xf0\\u1484f\\xbb\\u2024il\\xf4\\u06a9\\u0100dr\\u21e0\\u21e4cy;\\u444a\\u0180;cw\\u08f4\\u21eb\\u21efir;\\u6948;\\u61adar;\\u610firc;\\u4125\\u0180alr\\u2201\\u220e\\u2213rts\\u0100;u\\u2209\\u220a\\u6665it\\xbb\\u220alip;\\u6026con;\\u62b9r;\\uc000\\ud835\\udd25s\\u0100ew\\u2223\\u2229arow;\\u6925arow;\\u6926\\u0280amopr\\u223a\\u223e\\u2243\\u225e\\u2263rr;\\u61fftht;\\u623bk\\u0100lr\\u2249\\u2253eftarrow;\\u61a9ightarrow;\\u61aaf;\\uc000\\ud835\\udd59bar;\\u6015\\u0180clt\\u226f\\u2274\\u2278r;\\uc000\\ud835\\udcbdas\\xe8\\u21f4rok;\\u4127\\u0100bp\\u2282\\u2287ull;\\u6043hen\\xbb\\u1c5b\\u0ae1\\u22a3\\0\\u22aa\\0\\u22b8\\u22c5\\u22ce\\0\\u22d5\\u22f3\\0\\0\\u22f8\\u2322\\u2367\\u2362\\u237f\\0\\u2386\\u23aa\\u23b4cute\\u803b\\xed\\u40ed\\u0180;iy\\u0771\\u22b0\\u22b5rc\\u803b\\xee\\u40ee;\\u4438\\u0100cx\\u22bc\\u22bfy;\\u4435cl\\u803b\\xa1\\u40a1\\u0100fr\\u039f\\u22c9;\\uc000\\ud835\\udd26rave\\u803b\\xec\\u40ec\\u0200;ino\\u073e\\u22dd\\u22e9\\u22ee\\u0100in\\u22e2\\u22e6nt;\\u6a0ct;\\u622dfin;\\u69dcta;\\u6129lig;\\u4133\\u0180aop\\u22fe\\u231a\\u231d\\u0180cgt\\u2305\\u2308\\u2317r;\\u412b\\u0180elp\\u071f\\u230f\\u2313in\\xe5\\u078ear\\xf4\\u0720h;\\u4131f;\\u62b7ed;\\u41b5\\u0280;cfot\\u04f4\\u232c\\u2331\\u233d\\u2341are;\\u6105in\\u0100;t\\u2338\\u2339\\u621eie;\\u69dddo\\xf4\\u2319\\u0280;celp\\u0757\\u234c\\u2350\\u235b\\u2361al;\\u62ba\\u0100gr\\u2355\\u2359er\\xf3\\u1563\\xe3\\u234darhk;\\u6a17rod;\\u6a3c\\u0200cgpt\\u236f\\u2372\\u2376\\u237by;\\u4451on;\\u412ff;\\uc000\\ud835\\udd5aa;\\u43b9uest\\u803b\\xbf\\u40bf\\u0100ci\\u238a\\u238fr;\\uc000\\ud835\\udcben\\u0280;Edsv\\u04f4\\u239b\\u239d\\u23a1\\u04f3;\\u62f9ot;\\u62f5\\u0100;v\\u23a6\\u23a7\\u62f4;\\u62f3\\u0100;i\\u0777\\u23aelde;\\u4129\\u01eb\\u23b8\\0\\u23bccy;\\u4456l\\u803b\\xef\\u40ef\\u0300cfmosu\\u23cc\\u23d7\\u23dc\\u23e1\\u23e7\\u23f5\\u0100iy\\u23d1\\u23d5rc;\\u4135;\\u4439r;\\uc000\\ud835\\udd27ath;\\u4237pf;\\uc000\\ud835\\udd5b\\u01e3\\u23ec\\0\\u23f1r;\\uc000\\ud835\\udcbfrcy;\\u4458kcy;\\u4454\\u0400acfghjos\\u240b\\u2416\\u2422\\u2427\\u242d\\u2431\\u2435\\u243bppa\\u0100;v\\u2413\\u2414\\u43ba;\\u43f0\\u0100ey\\u241b\\u2420dil;\\u4137;\\u443ar;\\uc000\\ud835\\udd28reen;\\u4138cy;\\u4445cy;\\u445cpf;\\uc000\\ud835\\udd5ccr;\\uc000\\ud835\\udcc0\\u0b80ABEHabcdefghjlmnoprstuv\\u2470\\u2481\\u2486\\u248d\\u2491\\u250e\\u253d\\u255a\\u2580\\u264e\\u265e\\u2665\\u2679\\u267d\\u269a\\u26b2\\u26d8\\u275d\\u2768\\u278b\\u27c0\\u2801\\u2812\\u0180art\\u2477\\u247a\\u247cr\\xf2\\u09c6\\xf2\\u0395ail;\\u691barr;\\u690e\\u0100;g\\u0994\\u248b;\\u6a8bar;\\u6962\\u0963\\u24a5\\0\\u24aa\\0\\u24b1\\0\\0\\0\\0\\0\\u24b5\\u24ba\\0\\u24c6\\u24c8\\u24cd\\0\\u24f9ute;\\u413amptyv;\\u69b4ra\\xee\\u084cbda;\\u43bbg\\u0180;dl\\u088e\\u24c1\\u24c3;\\u6991\\xe5\\u088e;\\u6a85uo\\u803b\\xab\\u40abr\\u0400;bfhlpst\\u0899\\u24de\\u24e6\\u24e9\\u24eb\\u24ee\\u24f1\\u24f5\\u0100;f\\u089d\\u24e3s;\\u691fs;\\u691d\\xeb\\u2252p;\\u61abl;\\u6939im;\\u6973l;\\u61a2\\u0180;ae\\u24ff\\u2500\\u2504\\u6aabil;\\u6919\\u0100;s\\u2509\\u250a\\u6aad;\\uc000\\u2aad\\ufe00\\u0180abr\\u2515\\u2519\\u251drr;\\u690crk;\\u6772\\u0100ak\\u2522\\u252cc\\u0100ek\\u2528\\u252a;\\u407b;\\u405b\\u0100es\\u2531\\u2533;\\u698bl\\u0100du\\u2539\\u253b;\\u698f;\\u698d\\u0200aeuy\\u2546\\u254b\\u2556\\u2558ron;\\u413e\\u0100di\\u2550\\u2554il;\\u413c\\xec\\u08b0\\xe2\\u2529;\\u443b\\u0200cqrs\\u2563\\u2566\\u256d\\u257da;\\u6936uo\\u0100;r\\u0e19\\u1746\\u0100du\\u2572\\u2577har;\\u6967shar;\\u694bh;\\u61b2\\u0280;fgqs\\u258b\\u258c\\u0989\\u25f3\\u25ff\\u6264t\\u0280ahlrt\\u2598\\u25a4\\u25b7\\u25c2\\u25e8rrow\\u0100;t\\u0899\\u25a1a\\xe9\\u24f6arpoon\\u0100du\\u25af\\u25b4own\\xbb\\u045ap\\xbb\\u0966eftarrows;\\u61c7ight\\u0180ahs\\u25cd\\u25d6\\u25derrow\\u0100;s\\u08f4\\u08a7arpoon\\xf3\\u0f98quigarro\\xf7\\u21f0hreetimes;\\u62cb\\u0180;qs\\u258b\\u0993\\u25falan\\xf4\\u09ac\\u0280;cdgs\\u09ac\\u260a\\u260d\\u261d\\u2628c;\\u6aa8ot\\u0100;o\\u2614\\u2615\\u6a7f\\u0100;r\\u261a\\u261b\\u6a81;\\u6a83\\u0100;e\\u2622\\u2625\\uc000\\u22da\\ufe00s;\\u6a93\\u0280adegs\\u2633\\u2639\\u263d\\u2649\\u264bppro\\xf8\\u24c6ot;\\u62d6q\\u0100gq\\u2643\\u2645\\xf4\\u0989gt\\xf2\\u248c\\xf4\\u099bi\\xed\\u09b2\\u0180ilr\\u2655\\u08e1\\u265asht;\\u697c;\\uc000\\ud835\\udd29\\u0100;E\\u099c\\u2663;\\u6a91\\u0161\\u2669\\u2676r\\u0100du\\u25b2\\u266e\\u0100;l\\u0965\\u2673;\\u696alk;\\u6584cy;\\u4459\\u0280;acht\\u0a48\\u2688\\u268b\\u2691\\u2696r\\xf2\\u25c1orne\\xf2\\u1d08ard;\\u696bri;\\u65fa\\u0100io\\u269f\\u26a4dot;\\u4140ust\\u0100;a\\u26ac\\u26ad\\u63b0che\\xbb\\u26ad\\u0200Eaes\\u26bb\\u26bd\\u26c9\\u26d4;\\u6268p\\u0100;p\\u26c3\\u26c4\\u6a89rox\\xbb\\u26c4\\u0100;q\\u26ce\\u26cf\\u6a87\\u0100;q\\u26ce\\u26bbim;\\u62e6\\u0400abnoptwz\\u26e9\\u26f4\\u26f7\\u271a\\u272f\\u2741\\u2747\\u2750\\u0100nr\\u26ee\\u26f1g;\\u67ecr;\\u61fdr\\xeb\\u08c1g\\u0180lmr\\u26ff\\u270d\\u2714eft\\u0100ar\\u09e6\\u2707ight\\xe1\\u09f2apsto;\\u67fcight\\xe1\\u09fdparrow\\u0100lr\\u2725\\u2729ef\\xf4\\u24edight;\\u61ac\\u0180afl\\u2736\\u2739\\u273dr;\\u6985;\\uc000\\ud835\\udd5dus;\\u6a2dimes;\\u6a34\\u0161\\u274b\\u274fst;\\u6217\\xe1\\u134e\\u0180;ef\\u2757\\u2758\\u1800\\u65cange\\xbb\\u2758ar\\u0100;l\\u2764\\u2765\\u4028t;\\u6993\\u0280achmt\\u2773\\u2776\\u277c\\u2785\\u2787r\\xf2\\u08a8orne\\xf2\\u1d8car\\u0100;d\\u0f98\\u2783;\\u696d;\\u600eri;\\u62bf\\u0300achiqt\\u2798\\u279d\\u0a40\\u27a2\\u27ae\\u27bbquo;\\u6039r;\\uc000\\ud835\\udcc1m\\u0180;eg\\u09b2\\u27aa\\u27ac;\\u6a8d;\\u6a8f\\u0100bu\\u252a\\u27b3o\\u0100;r\\u0e1f\\u27b9;\\u601arok;\\u4142\\u8400<;cdhilqr\\u082b\\u27d2\\u2639\\u27dc\\u27e0\\u27e5\\u27ea\\u27f0\\u0100ci\\u27d7\\u27d9;\\u6aa6r;\\u6a79re\\xe5\\u25f2mes;\\u62c9arr;\\u6976uest;\\u6a7b\\u0100Pi\\u27f5\\u27f9ar;\\u6996\\u0180;ef\\u2800\\u092d\\u181b\\u65c3r\\u0100du\\u2807\\u280dshar;\\u694ahar;\\u6966\\u0100en\\u2817\\u2821rtneqq;\\uc000\\u2268\\ufe00\\xc5\\u281e\\u0700Dacdefhilnopsu\\u2840\\u2845\\u2882\\u288e\\u2893\\u28a0\\u28a5\\u28a8\\u28da\\u28e2\\u28e4\\u0a83\\u28f3\\u2902Dot;\\u623a\\u0200clpr\\u284e\\u2852\\u2863\\u287dr\\u803b\\xaf\\u40af\\u0100et\\u2857\\u2859;\\u6642\\u0100;e\\u285e\\u285f\\u6720se\\xbb\\u285f\\u0100;s\\u103b\\u2868to\\u0200;dlu\\u103b\\u2873\\u2877\\u287bow\\xee\\u048cef\\xf4\\u090f\\xf0\\u13d1ker;\\u65ae\\u0100oy\\u2887\\u288cmma;\\u6a29;\\u443cash;\\u6014asuredangle\\xbb\\u1626r;\\uc000\\ud835\\udd2ao;\\u6127\\u0180cdn\\u28af\\u28b4\\u28c9ro\\u803b\\xb5\\u40b5\\u0200;acd\\u1464\\u28bd\\u28c0\\u28c4s\\xf4\\u16a7ir;\\u6af0ot\\u80bb\\xb7\\u01b5us\\u0180;bd\\u28d2\\u1903\\u28d3\\u6212\\u0100;u\\u1d3c\\u28d8;\\u6a2a\\u0163\\u28de\\u28e1p;\\u6adb\\xf2\\u2212\\xf0\\u0a81\\u0100dp\\u28e9\\u28eeels;\\u62a7f;\\uc000\\ud835\\udd5e\\u0100ct\\u28f8\\u28fdr;\\uc000\\ud835\\udcc2pos\\xbb\\u159d\\u0180;lm\\u2909\\u290a\\u290d\\u43bctimap;\\u62b8\\u0c00GLRVabcdefghijlmoprstuvw\\u2942\\u2953\\u297e\\u2989\\u2998\\u29da\\u29e9\\u2a15\\u2a1a\\u2a58\\u2a5d\\u2a83\\u2a95\\u2aa4\\u2aa8\\u2b04\\u2b07\\u2b44\\u2b7f\\u2bae\\u2c34\\u2c67\\u2c7c\\u2ce9\\u0100gt\\u2947\\u294b;\\uc000\\u22d9\\u0338\\u0100;v\\u2950\\u0bcf\\uc000\\u226b\\u20d2\\u0180elt\\u295a\\u2972\\u2976ft\\u0100ar\\u2961\\u2967rrow;\\u61cdightarrow;\\u61ce;\\uc000\\u22d8\\u0338\\u0100;v\\u297b\\u0c47\\uc000\\u226a\\u20d2ightarrow;\\u61cf\\u0100Dd\\u298e\\u2993ash;\\u62afash;\\u62ae\\u0280bcnpt\\u29a3\\u29a7\\u29ac\\u29b1\\u29ccla\\xbb\\u02deute;\\u4144g;\\uc000\\u2220\\u20d2\\u0280;Eiop\\u0d84\\u29bc\\u29c0\\u29c5\\u29c8;\\uc000\\u2a70\\u0338d;\\uc000\\u224b\\u0338s;\\u4149ro\\xf8\\u0d84ur\\u0100;a\\u29d3\\u29d4\\u666el\\u0100;s\\u29d3\\u0b38\\u01f3\\u29df\\0\\u29e3p\\u80bb\\xa0\\u0b37mp\\u0100;e\\u0bf9\\u0c00\\u0280aeouy\\u29f4\\u29fe\\u2a03\\u2a10\\u2a13\\u01f0\\u29f9\\0\\u29fb;\\u6a43on;\\u4148dil;\\u4146ng\\u0100;d\\u0d7e\\u2a0aot;\\uc000\\u2a6d\\u0338p;\\u6a42;\\u443dash;\\u6013\\u0380;Aadqsx\\u0b92\\u2a29\\u2a2d\\u2a3b\\u2a41\\u2a45\\u2a50rr;\\u61d7r\\u0100hr\\u2a33\\u2a36k;\\u6924\\u0100;o\\u13f2\\u13f0ot;\\uc000\\u2250\\u0338ui\\xf6\\u0b63\\u0100ei\\u2a4a\\u2a4ear;\\u6928\\xed\\u0b98ist\\u0100;s\\u0ba0\\u0b9fr;\\uc000\\ud835\\udd2b\\u0200Eest\\u0bc5\\u2a66\\u2a79\\u2a7c\\u0180;qs\\u0bbc\\u2a6d\\u0be1\\u0180;qs\\u0bbc\\u0bc5\\u2a74lan\\xf4\\u0be2i\\xed\\u0bea\\u0100;r\\u0bb6\\u2a81\\xbb\\u0bb7\\u0180Aap\\u2a8a\\u2a8d\\u2a91r\\xf2\\u2971rr;\\u61aear;\\u6af2\\u0180;sv\\u0f8d\\u2a9c\\u0f8c\\u0100;d\\u2aa1\\u2aa2\\u62fc;\\u62facy;\\u445a\\u0380AEadest\\u2ab7\\u2aba\\u2abe\\u2ac2\\u2ac5\\u2af6\\u2af9r\\xf2\\u2966;\\uc000\\u2266\\u0338rr;\\u619ar;\\u6025\\u0200;fqs\\u0c3b\\u2ace\\u2ae3\\u2aeft\\u0100ar\\u2ad4\\u2ad9rro\\xf7\\u2ac1ightarro\\xf7\\u2a90\\u0180;qs\\u0c3b\\u2aba\\u2aealan\\xf4\\u0c55\\u0100;s\\u0c55\\u2af4\\xbb\\u0c36i\\xed\\u0c5d\\u0100;r\\u0c35\\u2afei\\u0100;e\\u0c1a\\u0c25i\\xe4\\u0d90\\u0100pt\\u2b0c\\u2b11f;\\uc000\\ud835\\udd5f\\u8180\\xac;in\\u2b19\\u2b1a\\u2b36\\u40acn\\u0200;Edv\\u0b89\\u2b24\\u2b28\\u2b2e;\\uc000\\u22f9\\u0338ot;\\uc000\\u22f5\\u0338\\u01e1\\u0b89\\u2b33\\u2b35;\\u62f7;\\u62f6i\\u0100;v\\u0cb8\\u2b3c\\u01e1\\u0cb8\\u2b41\\u2b43;\\u62fe;\\u62fd\\u0180aor\\u2b4b\\u2b63\\u2b69r\\u0200;ast\\u0b7b\\u2b55\\u2b5a\\u2b5flle\\xec\\u0b7bl;\\uc000\\u2afd\\u20e5;\\uc000\\u2202\\u0338lint;\\u6a14\\u0180;ce\\u0c92\\u2b70\\u2b73u\\xe5\\u0ca5\\u0100;c\\u0c98\\u2b78\\u0100;e\\u0c92\\u2b7d\\xf1\\u0c98\\u0200Aait\\u2b88\\u2b8b\\u2b9d\\u2ba7r\\xf2\\u2988rr\\u0180;cw\\u2b94\\u2b95\\u2b99\\u619b;\\uc000\\u2933\\u0338;\\uc000\\u219d\\u0338ghtarrow\\xbb\\u2b95ri\\u0100;e\\u0ccb\\u0cd6\\u0380chimpqu\\u2bbd\\u2bcd\\u2bd9\\u2b04\\u0b78\\u2be4\\u2bef\\u0200;cer\\u0d32\\u2bc6\\u0d37\\u2bc9u\\xe5\\u0d45;\\uc000\\ud835\\udcc3ort\\u026d\\u2b05\\0\\0\\u2bd6ar\\xe1\\u2b56m\\u0100;e\\u0d6e\\u2bdf\\u0100;q\\u0d74\\u0d73su\\u0100bp\\u2beb\\u2bed\\xe5\\u0cf8\\xe5\\u0d0b\\u0180bcp\\u2bf6\\u2c11\\u2c19\\u0200;Ees\\u2bff\\u2c00\\u0d22\\u2c04\\u6284;\\uc000\\u2ac5\\u0338et\\u0100;e\\u0d1b\\u2c0bq\\u0100;q\\u0d23\\u2c00c\\u0100;e\\u0d32\\u2c17\\xf1\\u0d38\\u0200;Ees\\u2c22\\u2c23\\u0d5f\\u2c27\\u6285;\\uc000\\u2ac6\\u0338et\\u0100;e\\u0d58\\u2c2eq\\u0100;q\\u0d60\\u2c23\\u0200gilr\\u2c3d\\u2c3f\\u2c45\\u2c47\\xec\\u0bd7lde\\u803b\\xf1\\u40f1\\xe7\\u0c43iangle\\u0100lr\\u2c52\\u2c5ceft\\u0100;e\\u0c1a\\u2c5a\\xf1\\u0c26ight\\u0100;e\\u0ccb\\u2c65\\xf1\\u0cd7\\u0100;m\\u2c6c\\u2c6d\\u43bd\\u0180;es\\u2c74\\u2c75\\u2c79\\u4023ro;\\u6116p;\\u6007\\u0480DHadgilrs\\u2c8f\\u2c94\\u2c99\\u2c9e\\u2ca3\\u2cb0\\u2cb6\\u2cd3\\u2ce3ash;\\u62adarr;\\u6904p;\\uc000\\u224d\\u20d2ash;\\u62ac\\u0100et\\u2ca8\\u2cac;\\uc000\\u2265\\u20d2;\\uc000>\\u20d2nfin;\\u69de\\u0180Aet\\u2cbd\\u2cc1\\u2cc5rr;\\u6902;\\uc000\\u2264\\u20d2\\u0100;r\\u2cca\\u2ccd\\uc000<\\u20d2ie;\\uc000\\u22b4\\u20d2\\u0100At\\u2cd8\\u2cdcrr;\\u6903rie;\\uc000\\u22b5\\u20d2im;\\uc000\\u223c\\u20d2\\u0180Aan\\u2cf0\\u2cf4\\u2d02rr;\\u61d6r\\u0100hr\\u2cfa\\u2cfdk;\\u6923\\u0100;o\\u13e7\\u13e5ear;\\u6927\\u1253\\u1a95\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\u2d2d\\0\\u2d38\\u2d48\\u2d60\\u2d65\\u2d72\\u2d84\\u1b07\\0\\0\\u2d8d\\u2dab\\0\\u2dc8\\u2dce\\0\\u2ddc\\u2e19\\u2e2b\\u2e3e\\u2e43\\u0100cs\\u2d31\\u1a97ute\\u803b\\xf3\\u40f3\\u0100iy\\u2d3c\\u2d45r\\u0100;c\\u1a9e\\u2d42\\u803b\\xf4\\u40f4;\\u443e\\u0280abios\\u1aa0\\u2d52\\u2d57\\u01c8\\u2d5alac;\\u4151v;\\u6a38old;\\u69bclig;\\u4153\\u0100cr\\u2d69\\u2d6dir;\\u69bf;\\uc000\\ud835\\udd2c\\u036f\\u2d79\\0\\0\\u2d7c\\0\\u2d82n;\\u42dbave\\u803b\\xf2\\u40f2;\\u69c1\\u0100bm\\u2d88\\u0df4ar;\\u69b5\\u0200acit\\u2d95\\u2d98\\u2da5\\u2da8r\\xf2\\u1a80\\u0100ir\\u2d9d\\u2da0r;\\u69beoss;\\u69bbn\\xe5\\u0e52;\\u69c0\\u0180aei\\u2db1\\u2db5\\u2db9cr;\\u414dga;\\u43c9\\u0180cdn\\u2dc0\\u2dc5\\u01cdron;\\u43bf;\\u69b6pf;\\uc000\\ud835\\udd60\\u0180ael\\u2dd4\\u2dd7\\u01d2r;\\u69b7rp;\\u69b9\\u0380;adiosv\\u2dea\\u2deb\\u2dee\\u2e08\\u2e0d\\u2e10\\u2e16\\u6228r\\xf2\\u1a86\\u0200;efm\\u2df7\\u2df8\\u2e02\\u2e05\\u6a5dr\\u0100;o\\u2dfe\\u2dff\\u6134f\\xbb\\u2dff\\u803b\\xaa\\u40aa\\u803b\\xba\\u40bagof;\\u62b6r;\\u6a56lope;\\u6a57;\\u6a5b\\u0180clo\\u2e1f\\u2e21\\u2e27\\xf2\\u2e01ash\\u803b\\xf8\\u40f8l;\\u6298i\\u016c\\u2e2f\\u2e34de\\u803b\\xf5\\u40f5es\\u0100;a\\u01db\\u2e3as;\\u6a36ml\\u803b\\xf6\\u40f6bar;\\u633d\\u0ae1\\u2e5e\\0\\u2e7d\\0\\u2e80\\u2e9d\\0\\u2ea2\\u2eb9\\0\\0\\u2ecb\\u0e9c\\0\\u2f13\\0\\0\\u2f2b\\u2fbc\\0\\u2fc8r\\u0200;ast\\u0403\\u2e67\\u2e72\\u0e85\\u8100\\xb6;l\\u2e6d\\u2e6e\\u40b6le\\xec\\u0403\\u0269\\u2e78\\0\\0\\u2e7bm;\\u6af3;\\u6afdy;\\u443fr\\u0280cimpt\\u2e8b\\u2e8f\\u2e93\\u1865\\u2e97nt;\\u4025od;\\u402eil;\\u6030enk;\\u6031r;\\uc000\\ud835\\udd2d\\u0180imo\\u2ea8\\u2eb0\\u2eb4\\u0100;v\\u2ead\\u2eae\\u43c6;\\u43d5ma\\xf4\\u0a76ne;\\u660e\\u0180;tv\\u2ebf\\u2ec0\\u2ec8\\u43c0chfork\\xbb\\u1ffd;\\u43d6\\u0100au\\u2ecf\\u2edfn\\u0100ck\\u2ed5\\u2eddk\\u0100;h\\u21f4\\u2edb;\\u610e\\xf6\\u21f4s\\u0480;abcdemst\\u2ef3\\u2ef4\\u1908\\u2ef9\\u2efd\\u2f04\\u2f06\\u2f0a\\u2f0e\\u402bcir;\\u6a23ir;\\u6a22\\u0100ou\\u1d40\\u2f02;\\u6a25;\\u6a72n\\u80bb\\xb1\\u0e9dim;\\u6a26wo;\\u6a27\\u0180ipu\\u2f19\\u2f20\\u2f25ntint;\\u6a15f;\\uc000\\ud835\\udd61nd\\u803b\\xa3\\u40a3\\u0500;Eaceinosu\\u0ec8\\u2f3f\\u2f41\\u2f44\\u2f47\\u2f81\\u2f89\\u2f92\\u2f7e\\u2fb6;\\u6ab3p;\\u6ab7u\\xe5\\u0ed9\\u0100;c\\u0ece\\u2f4c\\u0300;acens\\u0ec8\\u2f59\\u2f5f\\u2f66\\u2f68\\u2f7eppro\\xf8\\u2f43urlye\\xf1\\u0ed9\\xf1\\u0ece\\u0180aes\\u2f6f\\u2f76\\u2f7approx;\\u6ab9qq;\\u6ab5im;\\u62e8i\\xed\\u0edfme\\u0100;s\\u2f88\\u0eae\\u6032\\u0180Eas\\u2f78\\u2f90\\u2f7a\\xf0\\u2f75\\u0180dfp\\u0eec\\u2f99\\u2faf\\u0180als\\u2fa0\\u2fa5\\u2faalar;\\u632eine;\\u6312urf;\\u6313\\u0100;t\\u0efb\\u2fb4\\xef\\u0efbrel;\\u62b0\\u0100ci\\u2fc0\\u2fc5r;\\uc000\\ud835\\udcc5;\\u43c8ncsp;\\u6008\\u0300fiopsu\\u2fda\\u22e2\\u2fdf\\u2fe5\\u2feb\\u2ff1r;\\uc000\\ud835\\udd2epf;\\uc000\\ud835\\udd62rime;\\u6057cr;\\uc000\\ud835\\udcc6\\u0180aeo\\u2ff8\\u3009\\u3013t\\u0100ei\\u2ffe\\u3005rnion\\xf3\\u06b0nt;\\u6a16st\\u0100;e\\u3010\\u3011\\u403f\\xf1\\u1f19\\xf4\\u0f14\\u0a80ABHabcdefhilmnoprstux\\u3040\\u3051\\u3055\\u3059\\u30e0\\u310e\\u312b\\u3147\\u3162\\u3172\\u318e\\u3206\\u3215\\u3224\\u3229\\u3258\\u326e\\u3272\\u3290\\u32b0\\u32b7\\u0180art\\u3047\\u304a\\u304cr\\xf2\\u10b3\\xf2\\u03ddail;\\u691car\\xf2\\u1c65ar;\\u6964\\u0380cdenqrt\\u3068\\u3075\\u3078\\u307f\\u308f\\u3094\\u30cc\\u0100eu\\u306d\\u3071;\\uc000\\u223d\\u0331te;\\u4155i\\xe3\\u116emptyv;\\u69b3g\\u0200;del\\u0fd1\\u3089\\u308b\\u308d;\\u6992;\\u69a5\\xe5\\u0fd1uo\\u803b\\xbb\\u40bbr\\u0580;abcfhlpstw\\u0fdc\\u30ac\\u30af\\u30b7\\u30b9\\u30bc\\u30be\\u30c0\\u30c3\\u30c7\\u30cap;\\u6975\\u0100;f\\u0fe0\\u30b4s;\\u6920;\\u6933s;\\u691e\\xeb\\u225d\\xf0\\u272el;\\u6945im;\\u6974l;\\u61a3;\\u619d\\u0100ai\\u30d1\\u30d5il;\\u691ao\\u0100;n\\u30db\\u30dc\\u6236al\\xf3\\u0f1e\\u0180abr\\u30e7\\u30ea\\u30eer\\xf2\\u17e5rk;\\u6773\\u0100ak\\u30f3\\u30fdc\\u0100ek\\u30f9\\u30fb;\\u407d;\\u405d\\u0100es\\u3102\\u3104;\\u698cl\\u0100du\\u310a\\u310c;\\u698e;\\u6990\\u0200aeuy\\u3117\\u311c\\u3127\\u3129ron;\\u4159\\u0100di\\u3121\\u3125il;\\u4157\\xec\\u0ff2\\xe2\\u30fa;\\u4440\\u0200clqs\\u3134\\u3137\\u313d\\u3144a;\\u6937dhar;\\u6969uo\\u0100;r\\u020e\\u020dh;\\u61b3\\u0180acg\\u314e\\u315f\\u0f44l\\u0200;ips\\u0f78\\u3158\\u315b\\u109cn\\xe5\\u10bbar\\xf4\\u0fa9t;\\u65ad\\u0180ilr\\u3169\\u1023\\u316esht;\\u697d;\\uc000\\ud835\\udd2f\\u0100ao\\u3177\\u3186r\\u0100du\\u317d\\u317f\\xbb\\u047b\\u0100;l\\u1091\\u3184;\\u696c\\u0100;v\\u318b\\u318c\\u43c1;\\u43f1\\u0180gns\\u3195\\u31f9\\u31fcht\\u0300ahlrst\\u31a4\\u31b0\\u31c2\\u31d8\\u31e4\\u31eerrow\\u0100;t\\u0fdc\\u31ada\\xe9\\u30c8arpoon\\u0100du\\u31bb\\u31bfow\\xee\\u317ep\\xbb\\u1092eft\\u0100ah\\u31ca\\u31d0rrow\\xf3\\u0feaarpoon\\xf3\\u0551ightarrows;\\u61c9quigarro\\xf7\\u30cbhreetimes;\\u62ccg;\\u42daingdotse\\xf1\\u1f32\\u0180ahm\\u320d\\u3210\\u3213r\\xf2\\u0feaa\\xf2\\u0551;\\u600foust\\u0100;a\\u321e\\u321f\\u63b1che\\xbb\\u321fmid;\\u6aee\\u0200abpt\\u3232\\u323d\\u3240\\u3252\\u0100nr\\u3237\\u323ag;\\u67edr;\\u61fer\\xeb\\u1003\\u0180afl\\u3247\\u324a\\u324er;\\u6986;\\uc000\\ud835\\udd63us;\\u6a2eimes;\\u6a35\\u0100ap\\u325d\\u3267r\\u0100;g\\u3263\\u3264\\u4029t;\\u6994olint;\\u6a12ar\\xf2\\u31e3\\u0200achq\\u327b\\u3280\\u10bc\\u3285quo;\\u603ar;\\uc000\\ud835\\udcc7\\u0100bu\\u30fb\\u328ao\\u0100;r\\u0214\\u0213\\u0180hir\\u3297\\u329b\\u32a0re\\xe5\\u31f8mes;\\u62cai\\u0200;efl\\u32aa\\u1059\\u1821\\u32ab\\u65b9tri;\\u69celuhar;\\u6968;\\u611e\\u0d61\\u32d5\\u32db\\u32df\\u332c\\u3338\\u3371\\0\\u337a\\u33a4\\0\\0\\u33ec\\u33f0\\0\\u3428\\u3448\\u345a\\u34ad\\u34b1\\u34ca\\u34f1\\0\\u3616\\0\\0\\u3633cute;\\u415bqu\\xef\\u27ba\\u0500;Eaceinpsy\\u11ed\\u32f3\\u32f5\\u32ff\\u3302\\u330b\\u330f\\u331f\\u3326\\u3329;\\u6ab4\\u01f0\\u32fa\\0\\u32fc;\\u6ab8on;\\u4161u\\xe5\\u11fe\\u0100;d\\u11f3\\u3307il;\\u415frc;\\u415d\\u0180Eas\\u3316\\u3318\\u331b;\\u6ab6p;\\u6abaim;\\u62e9olint;\\u6a13i\\xed\\u1204;\\u4441ot\\u0180;be\\u3334\\u1d47\\u3335\\u62c5;\\u6a66\\u0380Aacmstx\\u3346\\u334a\\u3357\\u335b\\u335e\\u3363\\u336drr;\\u61d8r\\u0100hr\\u3350\\u3352\\xeb\\u2228\\u0100;o\\u0a36\\u0a34t\\u803b\\xa7\\u40a7i;\\u403bwar;\\u6929m\\u0100in\\u3369\\xf0nu\\xf3\\xf1t;\\u6736r\\u0100;o\\u3376\\u2055\\uc000\\ud835\\udd30\\u0200acoy\\u3382\\u3386\\u3391\\u33a0rp;\\u666f\\u0100hy\\u338b\\u338fcy;\\u4449;\\u4448rt\\u026d\\u3399\\0\\0\\u339ci\\xe4\\u1464ara\\xec\\u2e6f\\u803b\\xad\\u40ad\\u0100gm\\u33a8\\u33b4ma\\u0180;fv\\u33b1\\u33b2\\u33b2\\u43c3;\\u43c2\\u0400;deglnpr\\u12ab\\u33c5\\u33c9\\u33ce\\u33d6\\u33de\\u33e1\\u33e6ot;\\u6a6a\\u0100;q\\u12b1\\u12b0\\u0100;E\\u33d3\\u33d4\\u6a9e;\\u6aa0\\u0100;E\\u33db\\u33dc\\u6a9d;\\u6a9fe;\\u6246lus;\\u6a24arr;\\u6972ar\\xf2\\u113d\\u0200aeit\\u33f8\\u3408\\u340f\\u3417\\u0100ls\\u33fd\\u3404lsetm\\xe9\\u336ahp;\\u6a33parsl;\\u69e4\\u0100dl\\u1463\\u3414e;\\u6323\\u0100;e\\u341c\\u341d\\u6aaa\\u0100;s\\u3422\\u3423\\u6aac;\\uc000\\u2aac\\ufe00\\u0180flp\\u342e\\u3433\\u3442tcy;\\u444c\\u0100;b\\u3438\\u3439\\u402f\\u0100;a\\u343e\\u343f\\u69c4r;\\u633ff;\\uc000\\ud835\\udd64a\\u0100dr\\u344d\\u0402es\\u0100;u\\u3454\\u3455\\u6660it\\xbb\\u3455\\u0180csu\\u3460\\u3479\\u349f\\u0100au\\u3465\\u346fp\\u0100;s\\u1188\\u346b;\\uc000\\u2293\\ufe00p\\u0100;s\\u11b4\\u3475;\\uc000\\u2294\\ufe00u\\u0100bp\\u347f\\u348f\\u0180;es\\u1197\\u119c\\u3486et\\u0100;e\\u1197\\u348d\\xf1\\u119d\\u0180;es\\u11a8\\u11ad\\u3496et\\u0100;e\\u11a8\\u349d\\xf1\\u11ae\\u0180;af\\u117b\\u34a6\\u05b0r\\u0165\\u34ab\\u05b1\\xbb\\u117car\\xf2\\u1148\\u0200cemt\\u34b9\\u34be\\u34c2\\u34c5r;\\uc000\\ud835\\udcc8tm\\xee\\xf1i\\xec\\u3415ar\\xe6\\u11be\\u0100ar\\u34ce\\u34d5r\\u0100;f\\u34d4\\u17bf\\u6606\\u0100an\\u34da\\u34edight\\u0100ep\\u34e3\\u34eapsilo\\xee\\u1ee0h\\xe9\\u2eafs\\xbb\\u2852\\u0280bcmnp\\u34fb\\u355e\\u1209\\u358b\\u358e\\u0480;Edemnprs\\u350e\\u350f\\u3511\\u3515\\u351e\\u3523\\u352c\\u3531\\u3536\\u6282;\\u6ac5ot;\\u6abd\\u0100;d\\u11da\\u351aot;\\u6ac3ult;\\u6ac1\\u0100Ee\\u3528\\u352a;\\u6acb;\\u628alus;\\u6abfarr;\\u6979\\u0180eiu\\u353d\\u3552\\u3555t\\u0180;en\\u350e\\u3545\\u354bq\\u0100;q\\u11da\\u350feq\\u0100;q\\u352b\\u3528m;\\u6ac7\\u0100bp\\u355a\\u355c;\\u6ad5;\\u6ad3c\\u0300;acens\\u11ed\\u356c\\u3572\\u3579\\u357b\\u3326ppro\\xf8\\u32faurlye\\xf1\\u11fe\\xf1\\u11f3\\u0180aes\\u3582\\u3588\\u331bppro\\xf8\\u331aq\\xf1\\u3317g;\\u666a\\u0680123;Edehlmnps\\u35a9\\u35ac\\u35af\\u121c\\u35b2\\u35b4\\u35c0\\u35c9\\u35d5\\u35da\\u35df\\u35e8\\u35ed\\u803b\\xb9\\u40b9\\u803b\\xb2\\u40b2\\u803b\\xb3\\u40b3;\\u6ac6\\u0100os\\u35b9\\u35bct;\\u6abeub;\\u6ad8\\u0100;d\\u1222\\u35c5ot;\\u6ac4s\\u0100ou\\u35cf\\u35d2l;\\u67c9b;\\u6ad7arr;\\u697bult;\\u6ac2\\u0100Ee\\u35e4\\u35e6;\\u6acc;\\u628blus;\\u6ac0\\u0180eiu\\u35f4\\u3609\\u360ct\\u0180;en\\u121c\\u35fc\\u3602q\\u0100;q\\u1222\\u35b2eq\\u0100;q\\u35e7\\u35e4m;\\u6ac8\\u0100bp\\u3611\\u3613;\\u6ad4;\\u6ad6\\u0180Aan\\u361c\\u3620\\u362drr;\\u61d9r\\u0100hr\\u3626\\u3628\\xeb\\u222e\\u0100;o\\u0a2b\\u0a29war;\\u692alig\\u803b\\xdf\\u40df\\u0be1\\u3651\\u365d\\u3660\\u12ce\\u3673\\u3679\\0\\u367e\\u36c2\\0\\0\\0\\0\\0\\u36db\\u3703\\0\\u3709\\u376c\\0\\0\\0\\u3787\\u0272\\u3656\\0\\0\\u365bget;\\u6316;\\u43c4r\\xeb\\u0e5f\\u0180aey\\u3666\\u366b\\u3670ron;\\u4165dil;\\u4163;\\u4442lrec;\\u6315r;\\uc000\\ud835\\udd31\\u0200eiko\\u3686\\u369d\\u36b5\\u36bc\\u01f2\\u368b\\0\\u3691e\\u01004f\\u1284\\u1281a\\u0180;sv\\u3698\\u3699\\u369b\\u43b8ym;\\u43d1\\u0100cn\\u36a2\\u36b2k\\u0100as\\u36a8\\u36aeppro\\xf8\\u12c1im\\xbb\\u12acs\\xf0\\u129e\\u0100as\\u36ba\\u36ae\\xf0\\u12c1rn\\u803b\\xfe\\u40fe\\u01ec\\u031f\\u36c6\\u22e7es\\u8180\\xd7;bd\\u36cf\\u36d0\\u36d8\\u40d7\\u0100;a\\u190f\\u36d5r;\\u6a31;\\u6a30\\u0180eps\\u36e1\\u36e3\\u3700\\xe1\\u2a4d\\u0200;bcf\\u0486\\u36ec\\u36f0\\u36f4ot;\\u6336ir;\\u6af1\\u0100;o\\u36f9\\u36fc\\uc000\\ud835\\udd65rk;\\u6ada\\xe1\\u3362rime;\\u6034\\u0180aip\\u370f\\u3712\\u3764d\\xe5\\u1248\\u0380adempst\\u3721\\u374d\\u3740\\u3751\\u3757\\u375c\\u375fngle\\u0280;dlqr\\u3730\\u3731\\u3736\\u3740\\u3742\\u65b5own\\xbb\\u1dbbeft\\u0100;e\\u2800\\u373e\\xf1\\u092e;\\u625cight\\u0100;e\\u32aa\\u374b\\xf1\\u105aot;\\u65ecinus;\\u6a3alus;\\u6a39b;\\u69cdime;\\u6a3bezium;\\u63e2\\u0180cht\\u3772\\u377d\\u3781\\u0100ry\\u3777\\u377b;\\uc000\\ud835\\udcc9;\\u4446cy;\\u445brok;\\u4167\\u0100io\\u378b\\u378ex\\xf4\\u1777head\\u0100lr\\u3797\\u37a0eftarro\\xf7\\u084fightarrow\\xbb\\u0f5d\\u0900AHabcdfghlmoprstuw\\u37d0\\u37d3\\u37d7\\u37e4\\u37f0\\u37fc\\u380e\\u381c\\u3823\\u3834\\u3851\\u385d\\u386b\\u38a9\\u38cc\\u38d2\\u38ea\\u38f6r\\xf2\\u03edar;\\u6963\\u0100cr\\u37dc\\u37e2ute\\u803b\\xfa\\u40fa\\xf2\\u1150r\\u01e3\\u37ea\\0\\u37edy;\\u445eve;\\u416d\\u0100iy\\u37f5\\u37farc\\u803b\\xfb\\u40fb;\\u4443\\u0180abh\\u3803\\u3806\\u380br\\xf2\\u13adlac;\\u4171a\\xf2\\u13c3\\u0100ir\\u3813\\u3818sht;\\u697e;\\uc000\\ud835\\udd32rave\\u803b\\xf9\\u40f9\\u0161\\u3827\\u3831r\\u0100lr\\u382c\\u382e\\xbb\\u0957\\xbb\\u1083lk;\\u6580\\u0100ct\\u3839\\u384d\\u026f\\u383f\\0\\0\\u384arn\\u0100;e\\u3845\\u3846\\u631cr\\xbb\\u3846op;\\u630fri;\\u65f8\\u0100al\\u3856\\u385acr;\\u416b\\u80bb\\xa8\\u0349\\u0100gp\\u3862\\u3866on;\\u4173f;\\uc000\\ud835\\udd66\\u0300adhlsu\\u114b\\u3878\\u387d\\u1372\\u3891\\u38a0own\\xe1\\u13b3arpoon\\u0100lr\\u3888\\u388cef\\xf4\\u382digh\\xf4\\u382fi\\u0180;hl\\u3899\\u389a\\u389c\\u43c5\\xbb\\u13faon\\xbb\\u389aparrows;\\u61c8\\u0180cit\\u38b0\\u38c4\\u38c8\\u026f\\u38b6\\0\\0\\u38c1rn\\u0100;e\\u38bc\\u38bd\\u631dr\\xbb\\u38bdop;\\u630eng;\\u416fri;\\u65f9cr;\\uc000\\ud835\\udcca\\u0180dir\\u38d9\\u38dd\\u38e2ot;\\u62f0lde;\\u4169i\\u0100;f\\u3730\\u38e8\\xbb\\u1813\\u0100am\\u38ef\\u38f2r\\xf2\\u38a8l\\u803b\\xfc\\u40fcangle;\\u69a7\\u0780ABDacdeflnoprsz\\u391c\\u391f\\u3929\\u392d\\u39b5\\u39b8\\u39bd\\u39df\\u39e4\\u39e8\\u39f3\\u39f9\\u39fd\\u3a01\\u3a20r\\xf2\\u03f7ar\\u0100;v\\u3926\\u3927\\u6ae8;\\u6ae9as\\xe8\\u03e1\\u0100nr\\u3932\\u3937grt;\\u699c\\u0380eknprst\\u34e3\\u3946\\u394b\\u3952\\u395d\\u3964\\u3996app\\xe1\\u2415othin\\xe7\\u1e96\\u0180hir\\u34eb\\u2ec8\\u3959op\\xf4\\u2fb5\\u0100;h\\u13b7\\u3962\\xef\\u318d\\u0100iu\\u3969\\u396dgm\\xe1\\u33b3\\u0100bp\\u3972\\u3984setneq\\u0100;q\\u397d\\u3980\\uc000\\u228a\\ufe00;\\uc000\\u2acb\\ufe00setneq\\u0100;q\\u398f\\u3992\\uc000\\u228b\\ufe00;\\uc000\\u2acc\\ufe00\\u0100hr\\u399b\\u399fet\\xe1\\u369ciangle\\u0100lr\\u39aa\\u39afeft\\xbb\\u0925ight\\xbb\\u1051y;\\u4432ash\\xbb\\u1036\\u0180elr\\u39c4\\u39d2\\u39d7\\u0180;be\\u2dea\\u39cb\\u39cfar;\\u62bbq;\\u625alip;\\u62ee\\u0100bt\\u39dc\\u1468a\\xf2\\u1469r;\\uc000\\ud835\\udd33tr\\xe9\\u39aesu\\u0100bp\\u39ef\\u39f1\\xbb\\u0d1c\\xbb\\u0d59pf;\\uc000\\ud835\\udd67ro\\xf0\\u0efbtr\\xe9\\u39b4\\u0100cu\\u3a06\\u3a0br;\\uc000\\ud835\\udccb\\u0100bp\\u3a10\\u3a18n\\u0100Ee\\u3980\\u3a16\\xbb\\u397en\\u0100Ee\\u3992\\u3a1e\\xbb\\u3990igzag;\\u699a\\u0380cefoprs\\u3a36\\u3a3b\\u3a56\\u3a5b\\u3a54\\u3a61\\u3a6airc;\\u4175\\u0100di\\u3a40\\u3a51\\u0100bg\\u3a45\\u3a49ar;\\u6a5fe\\u0100;q\\u15fa\\u3a4f;\\u6259erp;\\u6118r;\\uc000\\ud835\\udd34pf;\\uc000\\ud835\\udd68\\u0100;e\\u1479\\u3a66at\\xe8\\u1479cr;\\uc000\\ud835\\udccc\\u0ae3\\u178e\\u3a87\\0\\u3a8b\\0\\u3a90\\u3a9b\\0\\0\\u3a9d\\u3aa8\\u3aab\\u3aaf\\0\\0\\u3ac3\\u3ace\\0\\u3ad8\\u17dc\\u17dftr\\xe9\\u17d1r;\\uc000\\ud835\\udd35\\u0100Aa\\u3a94\\u3a97r\\xf2\\u03c3r\\xf2\\u09f6;\\u43be\\u0100Aa\\u3aa1\\u3aa4r\\xf2\\u03b8r\\xf2\\u09eba\\xf0\\u2713is;\\u62fb\\u0180dpt\\u17a4\\u3ab5\\u3abe\\u0100fl\\u3aba\\u17a9;\\uc000\\ud835\\udd69im\\xe5\\u17b2\\u0100Aa\\u3ac7\\u3acar\\xf2\\u03cer\\xf2\\u0a01\\u0100cq\\u3ad2\\u17b8r;\\uc000\\ud835\\udccd\\u0100pt\\u17d6\\u3adcr\\xe9\\u17d4\\u0400acefiosu\\u3af0\\u3afd\\u3b08\\u3b0c\\u3b11\\u3b15\\u3b1b\\u3b21c\\u0100uy\\u3af6\\u3afbte\\u803b\\xfd\\u40fd;\\u444f\\u0100iy\\u3b02\\u3b06rc;\\u4177;\\u444bn\\u803b\\xa5\\u40a5r;\\uc000\\ud835\\udd36cy;\\u4457pf;\\uc000\\ud835\\udd6acr;\\uc000\\ud835\\udcce\\u0100cm\\u3b26\\u3b29y;\\u444el\\u803b\\xff\\u40ff\\u0500acdefhiosw\\u3b42\\u3b48\\u3b54\\u3b58\\u3b64\\u3b69\\u3b6d\\u3b74\\u3b7a\\u3b80cute;\\u417a\\u0100ay\\u3b4d\\u3b52ron;\\u417e;\\u4437ot;\\u417c\\u0100et\\u3b5d\\u3b61tr\\xe6\\u155fa;\\u43b6r;\\uc000\\ud835\\udd37cy;\\u4436grarr;\\u61ddpf;\\uc000\\ud835\\udd6bcr;\\uc000\\ud835\\udccf\\u0100jn\\u3b85\\u3b87;\\u600dj;\\u600c\"\n    .split(\"\")\n    .map((c) => c.charCodeAt(0)));\n//# sourceMappingURL=decode-data-html.js.map","// Generated using scripts/write-decode-map.ts\nexport default new Uint16Array(\n// prettier-ignore\n\"\\u0200aglq\\t\\x15\\x18\\x1b\\u026d\\x0f\\0\\0\\x12p;\\u4026os;\\u4027t;\\u403et;\\u403cuot;\\u4022\"\n    .split(\"\")\n    .map((c) => c.charCodeAt(0)));\n//# sourceMappingURL=decode-data-xml.js.map","// Adapted from https://github.com/mathiasbynens/he/blob/36afe179392226cf1b6ccdb16ebbb7a5a844d93a/src/he.js#L106-L134\nvar _a;\nconst decodeMap = new Map([\n    [0, 65533],\n    // C1 Unicode control character reference replacements\n    [128, 8364],\n    [130, 8218],\n    [131, 402],\n    [132, 8222],\n    [133, 8230],\n    [134, 8224],\n    [135, 8225],\n    [136, 710],\n    [137, 8240],\n    [138, 352],\n    [139, 8249],\n    [140, 338],\n    [142, 381],\n    [145, 8216],\n    [146, 8217],\n    [147, 8220],\n    [148, 8221],\n    [149, 8226],\n    [150, 8211],\n    [151, 8212],\n    [152, 732],\n    [153, 8482],\n    [154, 353],\n    [155, 8250],\n    [156, 339],\n    [158, 382],\n    [159, 376],\n]);\n/**\n * Polyfill for `String.fromCodePoint`. It is used to create a string from a Unicode code point.\n */\nexport const fromCodePoint = \n// eslint-disable-next-line @typescript-eslint/no-unnecessary-condition, node/no-unsupported-features/es-builtins\n(_a = String.fromCodePoint) !== null && _a !== void 0 ? _a : function (codePoint) {\n    let output = \"\";\n    if (codePoint > 0xffff) {\n        codePoint -= 0x10000;\n        output += String.fromCharCode(((codePoint >>> 10) & 0x3ff) | 0xd800);\n        codePoint = 0xdc00 | (codePoint & 0x3ff);\n    }\n    output += String.fromCharCode(codePoint);\n    return output;\n};\n/**\n * Replace the given code point with a replacement character if it is a\n * surrogate or is outside the valid range. Otherwise return the code\n * point unchanged.\n */\nexport function replaceCodePoint(codePoint) {\n    var _a;\n    if ((codePoint >= 0xd800 && codePoint <= 0xdfff) || codePoint > 0x10ffff) {\n        return 0xfffd;\n    }\n    return (_a = decodeMap.get(codePoint)) !== null && _a !== void 0 ? _a : codePoint;\n}\n/**\n * Replace the code point if relevant, then convert it to a string.\n *\n * @deprecated Use `fromCodePoint(replaceCodePoint(codePoint))` instead.\n * @param codePoint The code point to decode.\n * @returns The decoded code point.\n */\nexport default function decodeCodePoint(codePoint) {\n    return fromCodePoint(replaceCodePoint(codePoint));\n}\n//# sourceMappingURL=decode_codepoint.js.map","import htmlDecodeTree from \"./generated/decode-data-html.js\";\nimport xmlDecodeTree from \"./generated/decode-data-xml.js\";\nimport decodeCodePoint, { replaceCodePoint, fromCodePoint, } from \"./decode_codepoint.js\";\n// Re-export for use by eg. htmlparser2\nexport { htmlDecodeTree, xmlDecodeTree, decodeCodePoint };\nexport { replaceCodePoint, fromCodePoint } from \"./decode_codepoint.js\";\nvar CharCodes;\n(function (CharCodes) {\n    CharCodes[CharCodes[\"NUM\"] = 35] = \"NUM\";\n    CharCodes[CharCodes[\"SEMI\"] = 59] = \"SEMI\";\n    CharCodes[CharCodes[\"EQUALS\"] = 61] = \"EQUALS\";\n    CharCodes[CharCodes[\"ZERO\"] = 48] = \"ZERO\";\n    CharCodes[CharCodes[\"NINE\"] = 57] = \"NINE\";\n    CharCodes[CharCodes[\"LOWER_A\"] = 97] = \"LOWER_A\";\n    CharCodes[CharCodes[\"LOWER_F\"] = 102] = \"LOWER_F\";\n    CharCodes[CharCodes[\"LOWER_X\"] = 120] = \"LOWER_X\";\n    CharCodes[CharCodes[\"LOWER_Z\"] = 122] = \"LOWER_Z\";\n    CharCodes[CharCodes[\"UPPER_A\"] = 65] = \"UPPER_A\";\n    CharCodes[CharCodes[\"UPPER_F\"] = 70] = \"UPPER_F\";\n    CharCodes[CharCodes[\"UPPER_Z\"] = 90] = \"UPPER_Z\";\n})(CharCodes || (CharCodes = {}));\n/** Bit that needs to be set to convert an upper case ASCII character to lower case */\nconst TO_LOWER_BIT = 0b100000;\nexport var BinTrieFlags;\n(function (BinTrieFlags) {\n    BinTrieFlags[BinTrieFlags[\"VALUE_LENGTH\"] = 49152] = \"VALUE_LENGTH\";\n    BinTrieFlags[BinTrieFlags[\"BRANCH_LENGTH\"] = 16256] = \"BRANCH_LENGTH\";\n    BinTrieFlags[BinTrieFlags[\"JUMP_TABLE\"] = 127] = \"JUMP_TABLE\";\n})(BinTrieFlags || (BinTrieFlags = {}));\nfunction isNumber(code) {\n    return code >= CharCodes.ZERO && code <= CharCodes.NINE;\n}\nfunction isHexadecimalCharacter(code) {\n    return ((code >= CharCodes.UPPER_A && code <= CharCodes.UPPER_F) ||\n        (code >= CharCodes.LOWER_A && code <= CharCodes.LOWER_F));\n}\nfunction isAsciiAlphaNumeric(code) {\n    return ((code >= CharCodes.UPPER_A && code <= CharCodes.UPPER_Z) ||\n        (code >= CharCodes.LOWER_A && code <= CharCodes.LOWER_Z) ||\n        isNumber(code));\n}\n/**\n * Checks if the given character is a valid end character for an entity in an attribute.\n *\n * Attribute values that aren't terminated properly aren't parsed, and shouldn't lead to a parser error.\n * See the example in https://html.spec.whatwg.org/multipage/parsing.html#named-character-reference-state\n */\nfunction isEntityInAttributeInvalidEnd(code) {\n    return code === CharCodes.EQUALS || isAsciiAlphaNumeric(code);\n}\nvar EntityDecoderState;\n(function (EntityDecoderState) {\n    EntityDecoderState[EntityDecoderState[\"EntityStart\"] = 0] = \"EntityStart\";\n    EntityDecoderState[EntityDecoderState[\"NumericStart\"] = 1] = \"NumericStart\";\n    EntityDecoderState[EntityDecoderState[\"NumericDecimal\"] = 2] = \"NumericDecimal\";\n    EntityDecoderState[EntityDecoderState[\"NumericHex\"] = 3] = \"NumericHex\";\n    EntityDecoderState[EntityDecoderState[\"NamedEntity\"] = 4] = \"NamedEntity\";\n})(EntityDecoderState || (EntityDecoderState = {}));\nexport var DecodingMode;\n(function (DecodingMode) {\n    /** Entities in text nodes that can end with any character. */\n    DecodingMode[DecodingMode[\"Legacy\"] = 0] = \"Legacy\";\n    /** Only allow entities terminated with a semicolon. */\n    DecodingMode[DecodingMode[\"Strict\"] = 1] = \"Strict\";\n    /** Entities in attributes have limitations on ending characters. */\n    DecodingMode[DecodingMode[\"Attribute\"] = 2] = \"Attribute\";\n})(DecodingMode || (DecodingMode = {}));\n/**\n * Token decoder with support of writing partial entities.\n */\nexport class EntityDecoder {\n    constructor(\n    /** The tree used to decode entities. */\n    decodeTree, \n    /**\n     * The function that is called when a codepoint is decoded.\n     *\n     * For multi-byte named entities, this will be called multiple times,\n     * with the second codepoint, and the same `consumed` value.\n     *\n     * @param codepoint The decoded codepoint.\n     * @param consumed The number of bytes consumed by the decoder.\n     */\n    emitCodePoint, \n    /** An object that is used to produce errors. */\n    errors) {\n        this.decodeTree = decodeTree;\n        this.emitCodePoint = emitCodePoint;\n        this.errors = errors;\n        /** The current state of the decoder. */\n        this.state = EntityDecoderState.EntityStart;\n        /** Characters that were consumed while parsing an entity. */\n        this.consumed = 1;\n        /**\n         * The result of the entity.\n         *\n         * Either the result index of a numeric entity, or the codepoint of a\n         * numeric entity.\n         */\n        this.result = 0;\n        /** The current index in the decode tree. */\n        this.treeIndex = 0;\n        /** The number of characters that were consumed in excess. */\n        this.excess = 1;\n        /** The mode in which the decoder is operating. */\n        this.decodeMode = DecodingMode.Strict;\n    }\n    /** Resets the instance to make it reusable. */\n    startEntity(decodeMode) {\n        this.decodeMode = decodeMode;\n        this.state = EntityDecoderState.EntityStart;\n        this.result = 0;\n        this.treeIndex = 0;\n        this.excess = 1;\n        this.consumed = 1;\n    }\n    /**\n     * Write an entity to the decoder. This can be called multiple times with partial entities.\n     * If the entity is incomplete, the decoder will return -1.\n     *\n     * Mirrors the implementation of `getDecoder`, but with the ability to stop decoding if the\n     * entity is incomplete, and resume when the next string is written.\n     *\n     * @param string The string containing the entity (or a continuation of the entity).\n     * @param offset The offset at which the entity begins. Should be 0 if this is not the first call.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    write(str, offset) {\n        switch (this.state) {\n            case EntityDecoderState.EntityStart: {\n                if (str.charCodeAt(offset) === CharCodes.NUM) {\n                    this.state = EntityDecoderState.NumericStart;\n                    this.consumed += 1;\n                    return this.stateNumericStart(str, offset + 1);\n                }\n                this.state = EntityDecoderState.NamedEntity;\n                return this.stateNamedEntity(str, offset);\n            }\n            case EntityDecoderState.NumericStart: {\n                return this.stateNumericStart(str, offset);\n            }\n            case EntityDecoderState.NumericDecimal: {\n                return this.stateNumericDecimal(str, offset);\n            }\n            case EntityDecoderState.NumericHex: {\n                return this.stateNumericHex(str, offset);\n            }\n            case EntityDecoderState.NamedEntity: {\n                return this.stateNamedEntity(str, offset);\n            }\n        }\n    }\n    /**\n     * Switches between the numeric decimal and hexadecimal states.\n     *\n     * Equivalent to the `Numeric character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNumericStart(str, offset) {\n        if (offset >= str.length) {\n            return -1;\n        }\n        if ((str.charCodeAt(offset) | TO_LOWER_BIT) === CharCodes.LOWER_X) {\n            this.state = EntityDecoderState.NumericHex;\n            this.consumed += 1;\n            return this.stateNumericHex(str, offset + 1);\n        }\n        this.state = EntityDecoderState.NumericDecimal;\n        return this.stateNumericDecimal(str, offset);\n    }\n    addToNumericResult(str, start, end, base) {\n        if (start !== end) {\n            const digitCount = end - start;\n            this.result =\n                this.result * Math.pow(base, digitCount) +\n                    parseInt(str.substr(start, digitCount), base);\n            this.consumed += digitCount;\n        }\n    }\n    /**\n     * Parses a hexadecimal numeric entity.\n     *\n     * Equivalent to the `Hexademical character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNumericHex(str, offset) {\n        const startIdx = offset;\n        while (offset < str.length) {\n            const char = str.charCodeAt(offset);\n            if (isNumber(char) || isHexadecimalCharacter(char)) {\n                offset += 1;\n            }\n            else {\n                this.addToNumericResult(str, startIdx, offset, 16);\n                return this.emitNumericEntity(char, 3);\n            }\n        }\n        this.addToNumericResult(str, startIdx, offset, 16);\n        return -1;\n    }\n    /**\n     * Parses a decimal numeric entity.\n     *\n     * Equivalent to the `Decimal character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNumericDecimal(str, offset) {\n        const startIdx = offset;\n        while (offset < str.length) {\n            const char = str.charCodeAt(offset);\n            if (isNumber(char)) {\n                offset += 1;\n            }\n            else {\n                this.addToNumericResult(str, startIdx, offset, 10);\n                return this.emitNumericEntity(char, 2);\n            }\n        }\n        this.addToNumericResult(str, startIdx, offset, 10);\n        return -1;\n    }\n    /**\n     * Validate and emit a numeric entity.\n     *\n     * Implements the logic from the `Hexademical character reference start\n     * state` and `Numeric character reference end state` in the HTML spec.\n     *\n     * @param lastCp The last code point of the entity. Used to see if the\n     *               entity was terminated with a semicolon.\n     * @param expectedLength The minimum number of characters that should be\n     *                       consumed. Used to validate that at least one digit\n     *                       was consumed.\n     * @returns The number of characters that were consumed.\n     */\n    emitNumericEntity(lastCp, expectedLength) {\n        var _a;\n        // Ensure we consumed at least one digit.\n        if (this.consumed <= expectedLength) {\n            (_a = this.errors) === null || _a === void 0 ? void 0 : _a.absenceOfDigitsInNumericCharacterReference(this.consumed);\n            return 0;\n        }\n        // Figure out if this is a legit end of the entity\n        if (lastCp === CharCodes.SEMI) {\n            this.consumed += 1;\n        }\n        else if (this.decodeMode === DecodingMode.Strict) {\n            return 0;\n        }\n        this.emitCodePoint(replaceCodePoint(this.result), this.consumed);\n        if (this.errors) {\n            if (lastCp !== CharCodes.SEMI) {\n                this.errors.missingSemicolonAfterCharacterReference();\n            }\n            this.errors.validateNumericCharacterReference(this.result);\n        }\n        return this.consumed;\n    }\n    /**\n     * Parses a named entity.\n     *\n     * Equivalent to the `Named character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNamedEntity(str, offset) {\n        const { decodeTree } = this;\n        let current = decodeTree[this.treeIndex];\n        // The mask is the number of bytes of the value, including the current byte.\n        let valueLength = (current & BinTrieFlags.VALUE_LENGTH) >> 14;\n        for (; offset < str.length; offset++, this.excess++) {\n            const char = str.charCodeAt(offset);\n            this.treeIndex = determineBranch(decodeTree, current, this.treeIndex + Math.max(1, valueLength), char);\n            if (this.treeIndex < 0) {\n                return this.result === 0 ||\n                    // If we are parsing an attribute\n                    (this.decodeMode === DecodingMode.Attribute &&\n                        // We shouldn't have consumed any characters after the entity,\n                        (valueLength === 0 ||\n                            // And there should be no invalid characters.\n                            isEntityInAttributeInvalidEnd(char)))\n                    ? 0\n                    : this.emitNotTerminatedNamedEntity();\n            }\n            current = decodeTree[this.treeIndex];\n            valueLength = (current & BinTrieFlags.VALUE_LENGTH) >> 14;\n            // If the branch is a value, store it and continue\n            if (valueLength !== 0) {\n                // If the entity is terminated by a semicolon, we are done.\n                if (char === CharCodes.SEMI) {\n                    return this.emitNamedEntityData(this.treeIndex, valueLength, this.consumed + this.excess);\n                }\n                // If we encounter a non-terminated (legacy) entity while parsing strictly, then ignore it.\n                if (this.decodeMode !== DecodingMode.Strict) {\n                    this.result = this.treeIndex;\n                    this.consumed += this.excess;\n                    this.excess = 0;\n                }\n            }\n        }\n        return -1;\n    }\n    /**\n     * Emit a named entity that was not terminated with a semicolon.\n     *\n     * @returns The number of characters consumed.\n     */\n    emitNotTerminatedNamedEntity() {\n        var _a;\n        const { result, decodeTree } = this;\n        const valueLength = (decodeTree[result] & BinTrieFlags.VALUE_LENGTH) >> 14;\n        this.emitNamedEntityData(result, valueLength, this.consumed);\n        (_a = this.errors) === null || _a === void 0 ? void 0 : _a.missingSemicolonAfterCharacterReference();\n        return this.consumed;\n    }\n    /**\n     * Emit a named entity.\n     *\n     * @param result The index of the entity in the decode tree.\n     * @param valueLength The number of bytes in the entity.\n     * @param consumed The number of characters consumed.\n     *\n     * @returns The number of characters consumed.\n     */\n    emitNamedEntityData(result, valueLength, consumed) {\n        const { decodeTree } = this;\n        this.emitCodePoint(valueLength === 1\n            ? decodeTree[result] & ~BinTrieFlags.VALUE_LENGTH\n            : decodeTree[result + 1], consumed);\n        if (valueLength === 3) {\n            // For multi-byte values, we need to emit the second byte.\n            this.emitCodePoint(decodeTree[result + 2], consumed);\n        }\n        return consumed;\n    }\n    /**\n     * Signal to the parser that the end of the input was reached.\n     *\n     * Remaining data will be emitted and relevant errors will be produced.\n     *\n     * @returns The number of characters consumed.\n     */\n    end() {\n        var _a;\n        switch (this.state) {\n            case EntityDecoderState.NamedEntity: {\n                // Emit a named entity if we have one.\n                return this.result !== 0 &&\n                    (this.decodeMode !== DecodingMode.Attribute ||\n                        this.result === this.treeIndex)\n                    ? this.emitNotTerminatedNamedEntity()\n                    : 0;\n            }\n            // Otherwise, emit a numeric entity if we have one.\n            case EntityDecoderState.NumericDecimal: {\n                return this.emitNumericEntity(0, 2);\n            }\n            case EntityDecoderState.NumericHex: {\n                return this.emitNumericEntity(0, 3);\n            }\n            case EntityDecoderState.NumericStart: {\n                (_a = this.errors) === null || _a === void 0 ? void 0 : _a.absenceOfDigitsInNumericCharacterReference(this.consumed);\n                return 0;\n            }\n            case EntityDecoderState.EntityStart: {\n                // Return 0 if we have no entity.\n                return 0;\n            }\n        }\n    }\n}\n/**\n * Creates a function that decodes entities in a string.\n *\n * @param decodeTree The decode tree.\n * @returns A function that decodes entities in a string.\n */\nfunction getDecoder(decodeTree) {\n    let ret = \"\";\n    const decoder = new EntityDecoder(decodeTree, (str) => (ret += fromCodePoint(str)));\n    return function decodeWithTrie(str, decodeMode) {\n        let lastIndex = 0;\n        let offset = 0;\n        while ((offset = str.indexOf(\"&\", offset)) >= 0) {\n            ret += str.slice(lastIndex, offset);\n            decoder.startEntity(decodeMode);\n            const len = decoder.write(str, \n            // Skip the \"&\"\n            offset + 1);\n            if (len < 0) {\n                lastIndex = offset + decoder.end();\n                break;\n            }\n            lastIndex = offset + len;\n            // If `len` is 0, skip the current `&` and continue.\n            offset = len === 0 ? lastIndex + 1 : lastIndex;\n        }\n        const result = ret + str.slice(lastIndex);\n        // Make sure we don't keep a reference to the final string.\n        ret = \"\";\n        return result;\n    };\n}\n/**\n * Determines the branch of the current node that is taken given the current\n * character. This function is used to traverse the trie.\n *\n * @param decodeTree The trie.\n * @param current The current node.\n * @param nodeIdx The index right after the current node and its value.\n * @param char The current character.\n * @returns The index of the next node, or -1 if no branch is taken.\n */\nexport function determineBranch(decodeTree, current, nodeIdx, char) {\n    const branchCount = (current & BinTrieFlags.BRANCH_LENGTH) >> 7;\n    const jumpOffset = current & BinTrieFlags.JUMP_TABLE;\n    // Case 1: Single branch encoded in jump offset\n    if (branchCount === 0) {\n        return jumpOffset !== 0 && char === jumpOffset ? nodeIdx : -1;\n    }\n    // Case 2: Multiple branches encoded in jump table\n    if (jumpOffset) {\n        const value = char - jumpOffset;\n        return value < 0 || value >= branchCount\n            ? -1\n            : decodeTree[nodeIdx + value] - 1;\n    }\n    // Case 3: Multiple branches encoded in dictionary\n    // Binary search for the character.\n    let lo = nodeIdx;\n    let hi = lo + branchCount - 1;\n    while (lo <= hi) {\n        const mid = (lo + hi) >>> 1;\n        const midVal = decodeTree[mid];\n        if (midVal < char) {\n            lo = mid + 1;\n        }\n        else if (midVal > char) {\n            hi = mid - 1;\n        }\n        else {\n            return decodeTree[mid + branchCount];\n        }\n    }\n    return -1;\n}\nconst htmlDecoder = getDecoder(htmlDecodeTree);\nconst xmlDecoder = getDecoder(xmlDecodeTree);\n/**\n * Decodes an HTML string.\n *\n * @param str The string to decode.\n * @param mode The decoding mode.\n * @returns The decoded string.\n */\nexport function decodeHTML(str, mode = DecodingMode.Legacy) {\n    return htmlDecoder(str, mode);\n}\n/**\n * Decodes an HTML string in an attribute.\n *\n * @param str The string to decode.\n * @returns The decoded string.\n */\nexport function decodeHTMLAttribute(str) {\n    return htmlDecoder(str, DecodingMode.Attribute);\n}\n/**\n * Decodes an HTML string, requiring all entities to be terminated by a semicolon.\n *\n * @param str The string to decode.\n * @returns The decoded string.\n */\nexport function decodeHTMLStrict(str) {\n    return htmlDecoder(str, DecodingMode.Strict);\n}\n/**\n * Decodes an XML string, requiring all entities to be terminated by a semicolon.\n *\n * @param str The string to decode.\n * @returns The decoded string.\n */\nexport function decodeXML(str) {\n    return xmlDecoder(str, DecodingMode.Strict);\n}\n//# sourceMappingURL=decode.js.map","export const xmlReplacer = /[\"&'<>$\\x80-\\uFFFF]/g;\nconst xmlCodeMap = new Map([\n    [34, \"&quot;\"],\n    [38, \"&amp;\"],\n    [39, \"&apos;\"],\n    [60, \"&lt;\"],\n    [62, \"&gt;\"],\n]);\n// For compatibility with node < 4, we wrap `codePointAt`\nexport const getCodePoint = \n// eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\nString.prototype.codePointAt != null\n    ? (str, index) => str.codePointAt(index)\n    : // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n        (c, index) => (c.charCodeAt(index) & 0xfc00) === 0xd800\n            ? (c.charCodeAt(index) - 0xd800) * 0x400 +\n                c.charCodeAt(index + 1) -\n                0xdc00 +\n                0x10000\n            : c.charCodeAt(index);\n/**\n * Encodes all non-ASCII characters, as well as characters not valid in XML\n * documents using XML entities.\n *\n * If a character has no equivalent entity, a\n * numeric hexadecimal reference (eg. `&#xfc;`) will be used.\n */\nexport function encodeXML(str) {\n    let ret = \"\";\n    let lastIdx = 0;\n    let match;\n    while ((match = xmlReplacer.exec(str)) !== null) {\n        const i = match.index;\n        const char = str.charCodeAt(i);\n        const next = xmlCodeMap.get(char);\n        if (next !== undefined) {\n            ret += str.substring(lastIdx, i) + next;\n            lastIdx = i + 1;\n        }\n        else {\n            ret += `${str.substring(lastIdx, i)}&#x${getCodePoint(str, i).toString(16)};`;\n            // Increase by 1 if we have a surrogate pair\n            lastIdx = xmlReplacer.lastIndex += Number((char & 0xfc00) === 0xd800);\n        }\n    }\n    return ret + str.substr(lastIdx);\n}\n/**\n * Encodes all non-ASCII characters, as well as characters not valid in XML\n * documents using numeric hexadecimal reference (eg. `&#xfc;`).\n *\n * Have a look at `escapeUTF8` if you want a more concise output at the expense\n * of reduced transportability.\n *\n * @param data String to escape.\n */\nexport const escape = encodeXML;\n/**\n * Creates a function that escapes all characters matched by the given regular\n * expression using the given map of characters to escape to their entities.\n *\n * @param regex Regular expression to match characters to escape.\n * @param map Map of characters to escape to their entities.\n *\n * @returns Function that escapes all characters matched by the given regular\n * expression using the given map of characters to escape to their entities.\n */\nfunction getEscaper(regex, map) {\n    return function escape(data) {\n        let match;\n        let lastIdx = 0;\n        let result = \"\";\n        while ((match = regex.exec(data))) {\n            if (lastIdx !== match.index) {\n                result += data.substring(lastIdx, match.index);\n            }\n            // We know that this character will be in the map.\n            result += map.get(match[0].charCodeAt(0));\n            // Every match will be of length 1\n            lastIdx = match.index + 1;\n        }\n        return result + data.substring(lastIdx);\n    };\n}\n/**\n * Encodes all characters not valid in XML documents using XML entities.\n *\n * Note that the output will be character-set dependent.\n *\n * @param data String to escape.\n */\nexport const escapeUTF8 = getEscaper(/[&<>'\"]/g, xmlCodeMap);\n/**\n * Encodes all characters that have to be escaped in HTML attributes,\n * following {@link https://html.spec.whatwg.org/multipage/parsing.html#escapingString}.\n *\n * @param data String to escape.\n */\nexport const escapeAttribute = getEscaper(/[\"&\\u00A0]/g, new Map([\n    [34, \"&quot;\"],\n    [38, \"&amp;\"],\n    [160, \"&nbsp;\"],\n]));\n/**\n * Encodes all characters that have to be escaped in HTML text,\n * following {@link https://html.spec.whatwg.org/multipage/parsing.html#escapingString}.\n *\n * @param data String to escape.\n */\nexport const escapeText = getEscaper(/[&<>\\u00A0]/g, new Map([\n    [38, \"&amp;\"],\n    [60, \"&lt;\"],\n    [62, \"&gt;\"],\n    [160, \"&nbsp;\"],\n]));\n//# sourceMappingURL=escape.js.map","export const elementNames = new Map([\n    \"altGlyph\",\n    \"altGlyphDef\",\n    \"altGlyphItem\",\n    \"animateColor\",\n    \"animateMotion\",\n    \"animateTransform\",\n    \"clipPath\",\n    \"feBlend\",\n    \"feColorMatrix\",\n    \"feComponentTransfer\",\n    \"feComposite\",\n    \"feConvolveMatrix\",\n    \"feDiffuseLighting\",\n    \"feDisplacementMap\",\n    \"feDistantLight\",\n    \"feDropShadow\",\n    \"feFlood\",\n    \"feFuncA\",\n    \"feFuncB\",\n    \"feFuncG\",\n    \"feFuncR\",\n    \"feGaussianBlur\",\n    \"feImage\",\n    \"feMerge\",\n    \"feMergeNode\",\n    \"feMorphology\",\n    \"feOffset\",\n    \"fePointLight\",\n    \"feSpecularLighting\",\n    \"feSpotLight\",\n    \"feTile\",\n    \"feTurbulence\",\n    \"foreignObject\",\n    \"glyphRef\",\n    \"linearGradient\",\n    \"radialGradient\",\n    \"textPath\",\n].map((val) => [val.toLowerCase(), val]));\nexport const attributeNames = new Map([\n    \"definitionURL\",\n    \"attributeName\",\n    \"attributeType\",\n    \"baseFrequency\",\n    \"baseProfile\",\n    \"calcMode\",\n    \"clipPathUnits\",\n    \"diffuseConstant\",\n    \"edgeMode\",\n    \"filterUnits\",\n    \"glyphRef\",\n    \"gradientTransform\",\n    \"gradientUnits\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keyPoints\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"lengthAdjust\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerUnits\",\n    \"markerWidth\",\n    \"maskContentUnits\",\n    \"maskUnits\",\n    \"numOctaves\",\n    \"pathLength\",\n    \"patternContentUnits\",\n    \"patternTransform\",\n    \"patternUnits\",\n    \"pointsAtX\",\n    \"pointsAtY\",\n    \"pointsAtZ\",\n    \"preserveAlpha\",\n    \"preserveAspectRatio\",\n    \"primitiveUnits\",\n    \"refX\",\n    \"refY\",\n    \"repeatCount\",\n    \"repeatDur\",\n    \"requiredExtensions\",\n    \"requiredFeatures\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"spreadMethod\",\n    \"startOffset\",\n    \"stdDeviation\",\n    \"stitchTiles\",\n    \"surfaceScale\",\n    \"systemLanguage\",\n    \"tableValues\",\n    \"targetX\",\n    \"targetY\",\n    \"textLength\",\n    \"viewBox\",\n    \"viewTarget\",\n    \"xChannelSelector\",\n    \"yChannelSelector\",\n    \"zoomAndPan\",\n].map((val) => [val.toLowerCase(), val]));\n","/*\n * Module dependencies\n */\nimport * as ElementType from \"domelementtype\";\nimport { encodeXML, escapeAttribute, escapeText } from \"entities\";\n/**\n * Mixed-case SVG and MathML tags & attributes\n * recognized by the HTML parser.\n *\n * @see https://html.spec.whatwg.org/multipage/parsing.html#parsing-main-inforeign\n */\nimport { elementNames, attributeNames } from \"./foreignNames.js\";\nconst unencodedElements = new Set([\n    \"style\",\n    \"script\",\n    \"xmp\",\n    \"iframe\",\n    \"noembed\",\n    \"noframes\",\n    \"plaintext\",\n    \"noscript\",\n]);\nfunction replaceQuotes(value) {\n    return value.replace(/\"/g, \"&quot;\");\n}\n/**\n * Format attributes\n */\nfunction formatAttributes(attributes, opts) {\n    var _a;\n    if (!attributes)\n        return;\n    const encode = ((_a = opts.encodeEntities) !== null && _a !== void 0 ? _a : opts.decodeEntities) === false\n        ? replaceQuotes\n        : opts.xmlMode || opts.encodeEntities !== \"utf8\"\n            ? encodeXML\n            : escapeAttribute;\n    return Object.keys(attributes)\n        .map((key) => {\n        var _a, _b;\n        const value = (_a = attributes[key]) !== null && _a !== void 0 ? _a : \"\";\n        if (opts.xmlMode === \"foreign\") {\n            /* Fix up mixed-case attribute names */\n            key = (_b = attributeNames.get(key)) !== null && _b !== void 0 ? _b : key;\n        }\n        if (!opts.emptyAttrs && !opts.xmlMode && value === \"\") {\n            return key;\n        }\n        return `${key}=\"${encode(value)}\"`;\n    })\n        .join(\" \");\n}\n/**\n * Self-enclosing tags\n */\nconst singleTag = new Set([\n    \"area\",\n    \"base\",\n    \"basefont\",\n    \"br\",\n    \"col\",\n    \"command\",\n    \"embed\",\n    \"frame\",\n    \"hr\",\n    \"img\",\n    \"input\",\n    \"isindex\",\n    \"keygen\",\n    \"link\",\n    \"meta\",\n    \"param\",\n    \"source\",\n    \"track\",\n    \"wbr\",\n]);\n/**\n * Renders a DOM node or an array of DOM nodes to a string.\n *\n * Can be thought of as the equivalent of the `outerHTML` of the passed node(s).\n *\n * @param node Node to be rendered.\n * @param options Changes serialization behavior\n */\nexport function render(node, options = {}) {\n    const nodes = \"length\" in node ? node : [node];\n    let output = \"\";\n    for (let i = 0; i < nodes.length; i++) {\n        output += renderNode(nodes[i], options);\n    }\n    return output;\n}\nexport default render;\nfunction renderNode(node, options) {\n    switch (node.type) {\n        case ElementType.Root:\n            return render(node.children, options);\n        // @ts-expect-error We don't use `Doctype` yet\n        case ElementType.Doctype:\n        case ElementType.Directive:\n            return renderDirective(node);\n        case ElementType.Comment:\n            return renderComment(node);\n        case ElementType.CDATA:\n            return renderCdata(node);\n        case ElementType.Script:\n        case ElementType.Style:\n        case ElementType.Tag:\n            return renderTag(node, options);\n        case ElementType.Text:\n            return renderText(node, options);\n    }\n}\nconst foreignModeIntegrationPoints = new Set([\n    \"mi\",\n    \"mo\",\n    \"mn\",\n    \"ms\",\n    \"mtext\",\n    \"annotation-xml\",\n    \"foreignObject\",\n    \"desc\",\n    \"title\",\n]);\nconst foreignElements = new Set([\"svg\", \"math\"]);\nfunction renderTag(elem, opts) {\n    var _a;\n    // Handle SVG / MathML in HTML\n    if (opts.xmlMode === \"foreign\") {\n        /* Fix up mixed-case element names */\n        elem.name = (_a = elementNames.get(elem.name)) !== null && _a !== void 0 ? _a : elem.name;\n        /* Exit foreign mode at integration points */\n        if (elem.parent &&\n            foreignModeIntegrationPoints.has(elem.parent.name)) {\n            opts = { ...opts, xmlMode: false };\n        }\n    }\n    if (!opts.xmlMode && foreignElements.has(elem.name)) {\n        opts = { ...opts, xmlMode: \"foreign\" };\n    }\n    let tag = `<${elem.name}`;\n    const attribs = formatAttributes(elem.attribs, opts);\n    if (attribs) {\n        tag += ` ${attribs}`;\n    }\n    if (elem.children.length === 0 &&\n        (opts.xmlMode\n            ? // In XML mode or foreign mode, and user hasn't explicitly turned off self-closing tags\n                opts.selfClosingTags !== false\n            : // User explicitly asked for self-closing tags, even in HTML mode\n                opts.selfClosingTags && singleTag.has(elem.name))) {\n        if (!opts.xmlMode)\n            tag += \" \";\n        tag += \"/>\";\n    }\n    else {\n        tag += \">\";\n        if (elem.children.length > 0) {\n            tag += render(elem.children, opts);\n        }\n        if (opts.xmlMode || !singleTag.has(elem.name)) {\n            tag += `</${elem.name}>`;\n        }\n    }\n    return tag;\n}\nfunction renderDirective(elem) {\n    return `<${elem.data}>`;\n}\nfunction renderText(elem, opts) {\n    var _a;\n    let data = elem.data || \"\";\n    // If entities weren't decoded, no need to encode them back\n    if (((_a = opts.encodeEntities) !== null && _a !== void 0 ? _a : opts.decodeEntities) !== false &&\n        !(!opts.xmlMode &&\n            elem.parent &&\n            unencodedElements.has(elem.parent.name))) {\n        data =\n            opts.xmlMode || opts.encodeEntities !== \"utf8\"\n                ? encodeXML(data)\n                : escapeText(data);\n    }\n    return data;\n}\nfunction renderCdata(elem) {\n    return `<![CDATA[${elem.children[0].data}]]>`;\n}\nfunction renderComment(elem) {\n    return `<!--${elem.data}-->`;\n}\n","import { isTag, isCDATA, isText, hasChildren, isComment, } from \"domhandler\";\nimport renderHTML from \"dom-serializer\";\nimport { ElementType } from \"domelementtype\";\n/**\n * @category Stringify\n * @deprecated Use the `dom-serializer` module directly.\n * @param node Node to get the outer HTML of.\n * @param options Options for serialization.\n * @returns `node`'s outer HTML.\n */\nexport function getOuterHTML(node, options) {\n    return renderHTML(node, options);\n}\n/**\n * @category Stringify\n * @deprecated Use the `dom-serializer` module directly.\n * @param node Node to get the inner HTML of.\n * @param options Options for serialization.\n * @returns `node`'s inner HTML.\n */\nexport function getInnerHTML(node, options) {\n    return hasChildren(node)\n        ? node.children.map((node) => getOuterHTML(node, options)).join(\"\")\n        : \"\";\n}\n/**\n * Get a node's inner text. Same as `textContent`, but inserts newlines for `<br>` tags. Ignores comments.\n *\n * @category Stringify\n * @deprecated Use `textContent` instead.\n * @param node Node to get the inner text of.\n * @returns `node`'s inner text.\n */\nexport function getText(node) {\n    if (Array.isArray(node))\n        return node.map(getText).join(\"\");\n    if (isTag(node))\n        return node.name === \"br\" ? \"\\n\" : getText(node.children);\n    if (isCDATA(node))\n        return getText(node.children);\n    if (isText(node))\n        return node.data;\n    return \"\";\n}\n/**\n * Get a node's text content. Ignores comments.\n *\n * @category Stringify\n * @param node Node to get the text content of.\n * @returns `node`'s text content.\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/Node/textContent}\n */\nexport function textContent(node) {\n    if (Array.isArray(node))\n        return node.map(textContent).join(\"\");\n    if (hasChildren(node) && !isComment(node)) {\n        return textContent(node.children);\n    }\n    if (isText(node))\n        return node.data;\n    return \"\";\n}\n/**\n * Get a node's inner text, ignoring `<script>` and `<style>` tags. Ignores comments.\n *\n * @category Stringify\n * @param node Node to get the inner text of.\n * @returns `node`'s inner text.\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/Node/innerText}\n */\nexport function innerText(node) {\n    if (Array.isArray(node))\n        return node.map(innerText).join(\"\");\n    if (hasChildren(node) && (node.type === ElementType.Tag || isCDATA(node))) {\n        return innerText(node.children);\n    }\n    if (isText(node))\n        return node.data;\n    return \"\";\n}\n//# sourceMappingURL=stringify.js.map","import { isTag, hasChildren, } from \"domhandler\";\n/**\n * Get a node's children.\n *\n * @category Traversal\n * @param elem Node to get the children of.\n * @returns `elem`'s children, or an empty array.\n */\nexport function getChildren(elem) {\n    return hasChildren(elem) ? elem.children : [];\n}\n/**\n * Get a node's parent.\n *\n * @category Traversal\n * @param elem Node to get the parent of.\n * @returns `elem`'s parent node, or `null` if `elem` is a root node.\n */\nexport function getParent(elem) {\n    return elem.parent || null;\n}\n/**\n * Gets an elements siblings, including the element itself.\n *\n * Attempts to get the children through the element's parent first. If we don't\n * have a parent (the element is a root node), we walk the element's `prev` &\n * `next` to get all remaining nodes.\n *\n * @category Traversal\n * @param elem Element to get the siblings of.\n * @returns `elem`'s siblings, including `elem`.\n */\nexport function getSiblings(elem) {\n    const parent = getParent(elem);\n    if (parent != null)\n        return getChildren(parent);\n    const siblings = [elem];\n    let { prev, next } = elem;\n    while (prev != null) {\n        siblings.unshift(prev);\n        ({ prev } = prev);\n    }\n    while (next != null) {\n        siblings.push(next);\n        ({ next } = next);\n    }\n    return siblings;\n}\n/**\n * Gets an attribute from an element.\n *\n * @category Traversal\n * @param elem Element to check.\n * @param name Attribute name to retrieve.\n * @returns The element's attribute value, or `undefined`.\n */\nexport function getAttributeValue(elem, name) {\n    var _a;\n    return (_a = elem.attribs) === null || _a === void 0 ? void 0 : _a[name];\n}\n/**\n * Checks whether an element has an attribute.\n *\n * @category Traversal\n * @param elem Element to check.\n * @param name Attribute name to look for.\n * @returns Returns whether `elem` has the attribute `name`.\n */\nexport function hasAttrib(elem, name) {\n    return (elem.attribs != null &&\n        Object.prototype.hasOwnProperty.call(elem.attribs, name) &&\n        elem.attribs[name] != null);\n}\n/**\n * Get the tag name of an element.\n *\n * @category Traversal\n * @param elem The element to get the name for.\n * @returns The tag name of `elem`.\n */\nexport function getName(elem) {\n    return elem.name;\n}\n/**\n * Returns the next element sibling of a node.\n *\n * @category Traversal\n * @param elem The element to get the next sibling of.\n * @returns `elem`'s next sibling that is a tag, or `null` if there is no next\n * sibling.\n */\nexport function nextElementSibling(elem) {\n    let { next } = elem;\n    while (next !== null && !isTag(next))\n        ({ next } = next);\n    return next;\n}\n/**\n * Returns the previous element sibling of a node.\n *\n * @category Traversal\n * @param elem The element to get the previous sibling of.\n * @returns `elem`'s previous sibling that is a tag, or `null` if there is no\n * previous sibling.\n */\nexport function prevElementSibling(elem) {\n    let { prev } = elem;\n    while (prev !== null && !isTag(prev))\n        ({ prev } = prev);\n    return prev;\n}\n//# sourceMappingURL=traversal.js.map","/**\n * Remove an element from the dom\n *\n * @category Manipulation\n * @param elem The element to be removed\n */\nexport function removeElement(elem) {\n    if (elem.prev)\n        elem.prev.next = elem.next;\n    if (elem.next)\n        elem.next.prev = elem.prev;\n    if (elem.parent) {\n        const childs = elem.parent.children;\n        const childsIndex = childs.lastIndexOf(elem);\n        if (childsIndex >= 0) {\n            childs.splice(childsIndex, 1);\n        }\n    }\n    elem.next = null;\n    elem.prev = null;\n    elem.parent = null;\n}\n/**\n * Replace an element in the dom\n *\n * @category Manipulation\n * @param elem The element to be replaced\n * @param replacement The element to be added\n */\nexport function replaceElement(elem, replacement) {\n    const prev = (replacement.prev = elem.prev);\n    if (prev) {\n        prev.next = replacement;\n    }\n    const next = (replacement.next = elem.next);\n    if (next) {\n        next.prev = replacement;\n    }\n    const parent = (replacement.parent = elem.parent);\n    if (parent) {\n        const childs = parent.children;\n        childs[childs.lastIndexOf(elem)] = replacement;\n        elem.parent = null;\n    }\n}\n/**\n * Append a child to an element.\n *\n * @category Manipulation\n * @param parent The element to append to.\n * @param child The element to be added as a child.\n */\nexport function appendChild(parent, child) {\n    removeElement(child);\n    child.next = null;\n    child.parent = parent;\n    if (parent.children.push(child) > 1) {\n        const sibling = parent.children[parent.children.length - 2];\n        sibling.next = child;\n        child.prev = sibling;\n    }\n    else {\n        child.prev = null;\n    }\n}\n/**\n * Append an element after another.\n *\n * @category Manipulation\n * @param elem The element to append after.\n * @param next The element be added.\n */\nexport function append(elem, next) {\n    removeElement(next);\n    const { parent } = elem;\n    const currNext = elem.next;\n    next.next = currNext;\n    next.prev = elem;\n    elem.next = next;\n    next.parent = parent;\n    if (currNext) {\n        currNext.prev = next;\n        if (parent) {\n            const childs = parent.children;\n            childs.splice(childs.lastIndexOf(currNext), 0, next);\n        }\n    }\n    else if (parent) {\n        parent.children.push(next);\n    }\n}\n/**\n * Prepend a child to an element.\n *\n * @category Manipulation\n * @param parent The element to prepend before.\n * @param child The element to be added as a child.\n */\nexport function prependChild(parent, child) {\n    removeElement(child);\n    child.parent = parent;\n    child.prev = null;\n    if (parent.children.unshift(child) !== 1) {\n        const sibling = parent.children[1];\n        sibling.prev = child;\n        child.next = sibling;\n    }\n    else {\n        child.next = null;\n    }\n}\n/**\n * Prepend an element before another.\n *\n * @category Manipulation\n * @param elem The element to prepend before.\n * @param prev The element be added.\n */\nexport function prepend(elem, prev) {\n    removeElement(prev);\n    const { parent } = elem;\n    if (parent) {\n        const childs = parent.children;\n        childs.splice(childs.indexOf(elem), 0, prev);\n    }\n    if (elem.prev) {\n        elem.prev.next = prev;\n    }\n    prev.parent = parent;\n    prev.prev = elem.prev;\n    prev.next = elem;\n    elem.prev = prev;\n}\n//# sourceMappingURL=manipulation.js.map","import { isTag, hasChildren } from \"domhandler\";\n/**\n * Search a node and its children for nodes passing a test function. If `node` is not an array, it will be wrapped in one.\n *\n * @category Querying\n * @param test Function to test nodes on.\n * @param node Node to search. Will be included in the result set if it matches.\n * @param recurse Also consider child nodes.\n * @param limit Maximum number of nodes to return.\n * @returns All nodes passing `test`.\n */\nexport function filter(test, node, recurse = true, limit = Infinity) {\n    return find(test, Array.isArray(node) ? node : [node], recurse, limit);\n}\n/**\n * Search an array of nodes and their children for nodes passing a test function.\n *\n * @category Querying\n * @param test Function to test nodes on.\n * @param nodes Array of nodes to search.\n * @param recurse Also consider child nodes.\n * @param limit Maximum number of nodes to return.\n * @returns All nodes passing `test`.\n */\nexport function find(test, nodes, recurse, limit) {\n    const result = [];\n    /** Stack of the arrays we are looking at. */\n    const nodeStack = [Array.isArray(nodes) ? nodes : [nodes]];\n    /** Stack of the indices within the arrays. */\n    const indexStack = [0];\n    for (;;) {\n        // First, check if the current array has any more elements to look at.\n        if (indexStack[0] >= nodeStack[0].length) {\n            // If we have no more arrays to look at, we are done.\n            if (indexStack.length === 1) {\n                return result;\n            }\n            // Otherwise, remove the current array from the stack.\n            nodeStack.shift();\n            indexStack.shift();\n            // Loop back to the start to continue with the next array.\n            continue;\n        }\n        const elem = nodeStack[0][indexStack[0]++];\n        if (test(elem)) {\n            result.push(elem);\n            if (--limit <= 0)\n                return result;\n        }\n        if (recurse && hasChildren(elem) && elem.children.length > 0) {\n            /*\n             * Add the children to the stack. We are depth-first, so this is\n             * the next array we look at.\n             */\n            indexStack.unshift(0);\n            nodeStack.unshift(elem.children);\n        }\n    }\n}\n/**\n * Finds the first element inside of an array that matches a test function. This is an alias for `Array.prototype.find`.\n *\n * @category Querying\n * @param test Function to test nodes on.\n * @param nodes Array of nodes to search.\n * @returns The first node in the array that passes `test`.\n * @deprecated Use `Array.prototype.find` directly.\n */\nexport function findOneChild(test, nodes) {\n    return nodes.find(test);\n}\n/**\n * Finds one element in a tree that passes a test.\n *\n * @category Querying\n * @param test Function to test nodes on.\n * @param nodes Node or array of nodes to search.\n * @param recurse Also consider child nodes.\n * @returns The first node that passes `test`.\n */\nexport function findOne(test, nodes, recurse = true) {\n    const searchedNodes = Array.isArray(nodes) ? nodes : [nodes];\n    for (let i = 0; i < searchedNodes.length; i++) {\n        const node = searchedNodes[i];\n        if (isTag(node) && test(node)) {\n            return node;\n        }\n        if (recurse && hasChildren(node) && node.children.length > 0) {\n            const found = findOne(test, node.children, true);\n            if (found)\n                return found;\n        }\n    }\n    return null;\n}\n/**\n * Checks if a tree of nodes contains at least one node passing a test.\n *\n * @category Querying\n * @param test Function to test nodes on.\n * @param nodes Array of nodes to search.\n * @returns Whether a tree of nodes contains at least one node passing the test.\n */\nexport function existsOne(test, nodes) {\n    return (Array.isArray(nodes) ? nodes : [nodes]).some((node) => (isTag(node) && test(node)) ||\n        (hasChildren(node) && existsOne(test, node.children)));\n}\n/**\n * Search an array of nodes and their children for elements passing a test function.\n *\n * Same as `find`, but limited to elements and with less options, leading to reduced complexity.\n *\n * @category Querying\n * @param test Function to test nodes on.\n * @param nodes Array of nodes to search.\n * @returns All nodes passing `test`.\n */\nexport function findAll(test, nodes) {\n    const result = [];\n    const nodeStack = [Array.isArray(nodes) ? nodes : [nodes]];\n    const indexStack = [0];\n    for (;;) {\n        if (indexStack[0] >= nodeStack[0].length) {\n            if (nodeStack.length === 1) {\n                return result;\n            }\n            // Otherwise, remove the current array from the stack.\n            nodeStack.shift();\n            indexStack.shift();\n            // Loop back to the start to continue with the next array.\n            continue;\n        }\n        const elem = nodeStack[0][indexStack[0]++];\n        if (isTag(elem) && test(elem))\n            result.push(elem);\n        if (hasChildren(elem) && elem.children.length > 0) {\n            indexStack.unshift(0);\n            nodeStack.unshift(elem.children);\n        }\n    }\n}\n//# sourceMappingURL=querying.js.map","import { isTag, isText } from \"domhandler\";\nimport { filter, findOne } from \"./querying.js\";\n/**\n * A map of functions to check nodes against.\n */\nconst Checks = {\n    tag_name(name) {\n        if (typeof name === \"function\") {\n            return (elem) => isTag(elem) && name(elem.name);\n        }\n        else if (name === \"*\") {\n            return isTag;\n        }\n        return (elem) => isTag(elem) && elem.name === name;\n    },\n    tag_type(type) {\n        if (typeof type === \"function\") {\n            return (elem) => type(elem.type);\n        }\n        return (elem) => elem.type === type;\n    },\n    tag_contains(data) {\n        if (typeof data === \"function\") {\n            return (elem) => isText(elem) && data(elem.data);\n        }\n        return (elem) => isText(elem) && elem.data === data;\n    },\n};\n/**\n * Returns a function to check whether a node has an attribute with a particular\n * value.\n *\n * @param attrib Attribute to check.\n * @param value Attribute value to look for.\n * @returns A function to check whether the a node has an attribute with a\n *   particular value.\n */\nfunction getAttribCheck(attrib, value) {\n    if (typeof value === \"function\") {\n        return (elem) => isTag(elem) && value(elem.attribs[attrib]);\n    }\n    return (elem) => isTag(elem) && elem.attribs[attrib] === value;\n}\n/**\n * Returns a function that returns `true` if either of the input functions\n * returns `true` for a node.\n *\n * @param a First function to combine.\n * @param b Second function to combine.\n * @returns A function taking a node and returning `true` if either of the input\n *   functions returns `true` for the node.\n */\nfunction combineFuncs(a, b) {\n    return (elem) => a(elem) || b(elem);\n}\n/**\n * Returns a function that executes all checks in `options` and returns `true`\n * if any of them match a node.\n *\n * @param options An object describing nodes to look for.\n * @returns A function that executes all checks in `options` and returns `true`\n *   if any of them match a node.\n */\nfunction compileTest(options) {\n    const funcs = Object.keys(options).map((key) => {\n        const value = options[key];\n        return Object.prototype.hasOwnProperty.call(Checks, key)\n            ? Checks[key](value)\n            : getAttribCheck(key, value);\n    });\n    return funcs.length === 0 ? null : funcs.reduce(combineFuncs);\n}\n/**\n * Checks whether a node matches the description in `options`.\n *\n * @category Legacy Query Functions\n * @param options An object describing nodes to look for.\n * @param node The element to test.\n * @returns Whether the element matches the description in `options`.\n */\nexport function testElement(options, node) {\n    const test = compileTest(options);\n    return test ? test(node) : true;\n}\n/**\n * Returns all nodes that match `options`.\n *\n * @category Legacy Query Functions\n * @param options An object describing nodes to look for.\n * @param nodes Nodes to search through.\n * @param recurse Also consider child nodes.\n * @param limit Maximum number of nodes to return.\n * @returns All nodes that match `options`.\n */\nexport function getElements(options, nodes, recurse, limit = Infinity) {\n    const test = compileTest(options);\n    return test ? filter(test, nodes, recurse, limit) : [];\n}\n/**\n * Returns the node with the supplied ID.\n *\n * @category Legacy Query Functions\n * @param id The unique ID attribute value to look for.\n * @param nodes Nodes to search through.\n * @param recurse Also consider child nodes.\n * @returns The node with the supplied ID.\n */\nexport function getElementById(id, nodes, recurse = true) {\n    if (!Array.isArray(nodes))\n        nodes = [nodes];\n    return findOne(getAttribCheck(\"id\", id), nodes, recurse);\n}\n/**\n * Returns all nodes with the supplied `tagName`.\n *\n * @category Legacy Query Functions\n * @param tagName Tag name to search for.\n * @param nodes Nodes to search through.\n * @param recurse Also consider child nodes.\n * @param limit Maximum number of nodes to return.\n * @returns All nodes with the supplied `tagName`.\n */\nexport function getElementsByTagName(tagName, nodes, recurse = true, limit = Infinity) {\n    return filter(Checks[\"tag_name\"](tagName), nodes, recurse, limit);\n}\n/**\n * Returns all nodes with the supplied `className`.\n *\n * @category Legacy Query Functions\n * @param className Class name to search for.\n * @param nodes Nodes to search through.\n * @param recurse Also consider child nodes.\n * @param limit Maximum number of nodes to return.\n * @returns All nodes with the supplied `className`.\n */\nexport function getElementsByClassName(className, nodes, recurse = true, limit = Infinity) {\n    return filter(getAttribCheck(\"class\", className), nodes, recurse, limit);\n}\n/**\n * Returns all nodes with the supplied `type`.\n *\n * @category Legacy Query Functions\n * @param type Element type to look for.\n * @param nodes Nodes to search through.\n * @param recurse Also consider child nodes.\n * @param limit Maximum number of nodes to return.\n * @returns All nodes with the supplied `type`.\n */\nexport function getElementsByTagType(type, nodes, recurse = true, limit = Infinity) {\n    return filter(Checks[\"tag_type\"](type), nodes, recurse, limit);\n}\n//# sourceMappingURL=legacy.js.map","import { hasChildren } from \"domhandler\";\n/**\n * Given an array of nodes, remove any member that is contained by another\n * member.\n *\n * @category Helpers\n * @param nodes Nodes to filter.\n * @returns Remaining nodes that aren't contained by other nodes.\n */\nexport function removeSubsets(nodes) {\n    let idx = nodes.length;\n    /*\n     * Check if each node (or one of its ancestors) is already contained in the\n     * array.\n     */\n    while (--idx >= 0) {\n        const node = nodes[idx];\n        /*\n         * Remove the node if it is not unique.\n         * We are going through the array from the end, so we only\n         * have to check nodes that preceed the node under consideration in the array.\n         */\n        if (idx > 0 && nodes.lastIndexOf(node, idx - 1) >= 0) {\n            nodes.splice(idx, 1);\n            continue;\n        }\n        for (let ancestor = node.parent; ancestor; ancestor = ancestor.parent) {\n            if (nodes.includes(ancestor)) {\n                nodes.splice(idx, 1);\n                break;\n            }\n        }\n    }\n    return nodes;\n}\n/**\n * @category Helpers\n * @see {@link http://dom.spec.whatwg.org/#dom-node-comparedocumentposition}\n */\nexport var DocumentPosition;\n(function (DocumentPosition) {\n    DocumentPosition[DocumentPosition[\"DISCONNECTED\"] = 1] = \"DISCONNECTED\";\n    DocumentPosition[DocumentPosition[\"PRECEDING\"] = 2] = \"PRECEDING\";\n    DocumentPosition[DocumentPosition[\"FOLLOWING\"] = 4] = \"FOLLOWING\";\n    DocumentPosition[DocumentPosition[\"CONTAINS\"] = 8] = \"CONTAINS\";\n    DocumentPosition[DocumentPosition[\"CONTAINED_BY\"] = 16] = \"CONTAINED_BY\";\n})(DocumentPosition || (DocumentPosition = {}));\n/**\n * Compare the position of one node against another node in any other document,\n * returning a bitmask with the values from {@link DocumentPosition}.\n *\n * Document order:\n * > There is an ordering, document order, defined on all the nodes in the\n * > document corresponding to the order in which the first character of the\n * > XML representation of each node occurs in the XML representation of the\n * > document after expansion of general entities. Thus, the document element\n * > node will be the first node. Element nodes occur before their children.\n * > Thus, document order orders element nodes in order of the occurrence of\n * > their start-tag in the XML (after expansion of entities). The attribute\n * > nodes of an element occur after the element and before its children. The\n * > relative order of attribute nodes is implementation-dependent.\n *\n * Source:\n * http://www.w3.org/TR/DOM-Level-3-Core/glossary.html#dt-document-order\n *\n * @category Helpers\n * @param nodeA The first node to use in the comparison\n * @param nodeB The second node to use in the comparison\n * @returns A bitmask describing the input nodes' relative position.\n *\n * See http://dom.spec.whatwg.org/#dom-node-comparedocumentposition for\n * a description of these values.\n */\nexport function compareDocumentPosition(nodeA, nodeB) {\n    const aParents = [];\n    const bParents = [];\n    if (nodeA === nodeB) {\n        return 0;\n    }\n    let current = hasChildren(nodeA) ? nodeA : nodeA.parent;\n    while (current) {\n        aParents.unshift(current);\n        current = current.parent;\n    }\n    current = hasChildren(nodeB) ? nodeB : nodeB.parent;\n    while (current) {\n        bParents.unshift(current);\n        current = current.parent;\n    }\n    const maxIdx = Math.min(aParents.length, bParents.length);\n    let idx = 0;\n    while (idx < maxIdx && aParents[idx] === bParents[idx]) {\n        idx++;\n    }\n    if (idx === 0) {\n        return DocumentPosition.DISCONNECTED;\n    }\n    const sharedParent = aParents[idx - 1];\n    const siblings = sharedParent.children;\n    const aSibling = aParents[idx];\n    const bSibling = bParents[idx];\n    if (siblings.indexOf(aSibling) > siblings.indexOf(bSibling)) {\n        if (sharedParent === nodeB) {\n            return DocumentPosition.FOLLOWING | DocumentPosition.CONTAINED_BY;\n        }\n        return DocumentPosition.FOLLOWING;\n    }\n    if (sharedParent === nodeA) {\n        return DocumentPosition.PRECEDING | DocumentPosition.CONTAINS;\n    }\n    return DocumentPosition.PRECEDING;\n}\n/**\n * Sort an array of nodes based on their relative position in the document,\n * removing any duplicate nodes. If the array contains nodes that do not belong\n * to the same document, sort order is unspecified.\n *\n * @category Helpers\n * @param nodes Array of DOM nodes.\n * @returns Collection of unique nodes, sorted in document order.\n */\nexport function uniqueSort(nodes) {\n    nodes = nodes.filter((node, i, arr) => !arr.includes(node, i + 1));\n    nodes.sort((a, b) => {\n        const relative = compareDocumentPosition(a, b);\n        if (relative & DocumentPosition.PRECEDING) {\n            return -1;\n        }\n        else if (relative & DocumentPosition.FOLLOWING) {\n            return 1;\n        }\n        return 0;\n    });\n    return nodes;\n}\n//# sourceMappingURL=helpers.js.map","import { textContent } from \"./stringify.js\";\nimport { getElementsByTagName } from \"./legacy.js\";\n/**\n * Get the feed object from the root of a DOM tree.\n *\n * @category Feeds\n * @param doc - The DOM to to extract the feed from.\n * @returns The feed.\n */\nexport function getFeed(doc) {\n    const feedRoot = getOneElement(isValidFeed, doc);\n    return !feedRoot\n        ? null\n        : feedRoot.name === \"feed\"\n            ? getAtomFeed(feedRoot)\n            : getRssFeed(feedRoot);\n}\n/**\n * Parse an Atom feed.\n *\n * @param feedRoot The root of the feed.\n * @returns The parsed feed.\n */\nfunction getAtomFeed(feedRoot) {\n    var _a;\n    const childs = feedRoot.children;\n    const feed = {\n        type: \"atom\",\n        items: getElementsByTagName(\"entry\", childs).map((item) => {\n            var _a;\n            const { children } = item;\n            const entry = { media: getMediaElements(children) };\n            addConditionally(entry, \"id\", \"id\", children);\n            addConditionally(entry, \"title\", \"title\", children);\n            const href = (_a = getOneElement(\"link\", children)) === null || _a === void 0 ? void 0 : _a.attribs[\"href\"];\n            if (href) {\n                entry.link = href;\n            }\n            const description = fetch(\"summary\", children) || fetch(\"content\", children);\n            if (description) {\n                entry.description = description;\n            }\n            const pubDate = fetch(\"updated\", children);\n            if (pubDate) {\n                entry.pubDate = new Date(pubDate);\n            }\n            return entry;\n        }),\n    };\n    addConditionally(feed, \"id\", \"id\", childs);\n    addConditionally(feed, \"title\", \"title\", childs);\n    const href = (_a = getOneElement(\"link\", childs)) === null || _a === void 0 ? void 0 : _a.attribs[\"href\"];\n    if (href) {\n        feed.link = href;\n    }\n    addConditionally(feed, \"description\", \"subtitle\", childs);\n    const updated = fetch(\"updated\", childs);\n    if (updated) {\n        feed.updated = new Date(updated);\n    }\n    addConditionally(feed, \"author\", \"email\", childs, true);\n    return feed;\n}\n/**\n * Parse a RSS feed.\n *\n * @param feedRoot The root of the feed.\n * @returns The parsed feed.\n */\nfunction getRssFeed(feedRoot) {\n    var _a, _b;\n    const childs = (_b = (_a = getOneElement(\"channel\", feedRoot.children)) === null || _a === void 0 ? void 0 : _a.children) !== null && _b !== void 0 ? _b : [];\n    const feed = {\n        type: feedRoot.name.substr(0, 3),\n        id: \"\",\n        items: getElementsByTagName(\"item\", feedRoot.children).map((item) => {\n            const { children } = item;\n            const entry = { media: getMediaElements(children) };\n            addConditionally(entry, \"id\", \"guid\", children);\n            addConditionally(entry, \"title\", \"title\", children);\n            addConditionally(entry, \"link\", \"link\", children);\n            addConditionally(entry, \"description\", \"description\", children);\n            const pubDate = fetch(\"pubDate\", children) || fetch(\"dc:date\", children);\n            if (pubDate)\n                entry.pubDate = new Date(pubDate);\n            return entry;\n        }),\n    };\n    addConditionally(feed, \"title\", \"title\", childs);\n    addConditionally(feed, \"link\", \"link\", childs);\n    addConditionally(feed, \"description\", \"description\", childs);\n    const updated = fetch(\"lastBuildDate\", childs);\n    if (updated) {\n        feed.updated = new Date(updated);\n    }\n    addConditionally(feed, \"author\", \"managingEditor\", childs, true);\n    return feed;\n}\nconst MEDIA_KEYS_STRING = [\"url\", \"type\", \"lang\"];\nconst MEDIA_KEYS_INT = [\n    \"fileSize\",\n    \"bitrate\",\n    \"framerate\",\n    \"samplingrate\",\n    \"channels\",\n    \"duration\",\n    \"height\",\n    \"width\",\n];\n/**\n * Get all media elements of a feed item.\n *\n * @param where Nodes to search in.\n * @returns Media elements.\n */\nfunction getMediaElements(where) {\n    return getElementsByTagName(\"media:content\", where).map((elem) => {\n        const { attribs } = elem;\n        const media = {\n            medium: attribs[\"medium\"],\n            isDefault: !!attribs[\"isDefault\"],\n        };\n        for (const attrib of MEDIA_KEYS_STRING) {\n            if (attribs[attrib]) {\n                media[attrib] = attribs[attrib];\n            }\n        }\n        for (const attrib of MEDIA_KEYS_INT) {\n            if (attribs[attrib]) {\n                media[attrib] = parseInt(attribs[attrib], 10);\n            }\n        }\n        if (attribs[\"expression\"]) {\n            media.expression = attribs[\"expression\"];\n        }\n        return media;\n    });\n}\n/**\n * Get one element by tag name.\n *\n * @param tagName Tag name to look for\n * @param node Node to search in\n * @returns The element or null\n */\nfunction getOneElement(tagName, node) {\n    return getElementsByTagName(tagName, node, true, 1)[0];\n}\n/**\n * Get the text content of an element with a certain tag name.\n *\n * @param tagName Tag name to look for.\n * @param where Node to search in.\n * @param recurse Whether to recurse into child nodes.\n * @returns The text content of the element.\n */\nfunction fetch(tagName, where, recurse = false) {\n    return textContent(getElementsByTagName(tagName, where, recurse, 1)).trim();\n}\n/**\n * Adds a property to an object if it has a value.\n *\n * @param obj Object to be extended\n * @param prop Property name\n * @param tagName Tag name that contains the conditionally added property\n * @param where Element to search for the property\n * @param recurse Whether to recurse into child nodes.\n */\nfunction addConditionally(obj, prop, tagName, where, recurse = false) {\n    const val = fetch(tagName, where, recurse);\n    if (val)\n        obj[prop] = val;\n}\n/**\n * Checks if an element is a feed root node.\n *\n * @param value The name of the element to check.\n * @returns Whether an element is a feed root node.\n */\nfunction isValidFeed(value) {\n    return value === \"rss\" || value === \"feed\" || value === \"rdf:RDF\";\n}\n//# sourceMappingURL=feeds.js.map","const defaultOpts = {\n    _useHtmlParser2: false,\n};\n/**\n * Flatten the options for Cheerio.\n *\n * This will set `_useHtmlParser2` to true if `xml` is set to true.\n *\n * @param options - The options to flatten.\n * @param baseOptions - The base options to use.\n * @returns The flattened options.\n */\nexport function flattenOptions(options, baseOptions) {\n    if (!options) {\n        return baseOptions !== null && baseOptions !== void 0 ? baseOptions : defaultOpts;\n    }\n    const opts = {\n        _useHtmlParser2: !!options.xmlMode,\n        ...baseOptions,\n        ...options,\n    };\n    if (options.xml) {\n        opts._useHtmlParser2 = true;\n        opts.xmlMode = true;\n        if (options.xml !== true) {\n            Object.assign(opts, options.xml);\n        }\n    }\n    else if (options.xmlMode) {\n        opts._useHtmlParser2 = true;\n    }\n    return opts;\n}\n//# sourceMappingURL=options.js.map","import { textContent } from 'domutils';\nimport { flattenOptions as flattenOptions, } from './options.js';\n/**\n * Helper function to render a DOM.\n *\n * @param that - Cheerio instance to render.\n * @param dom - The DOM to render. Defaults to `that`'s root.\n * @param options - Options for rendering.\n * @returns The rendered document.\n */\nfunction render(that, dom, options) {\n    if (!that)\n        return '';\n    return that(dom !== null && dom !== void 0 ? dom : that._root.children, null, undefined, options).toString();\n}\n/**\n * Checks if a passed object is an options object.\n *\n * @param dom - Object to check if it is an options object.\n * @param options - Options object.\n * @returns Whether the object is an options object.\n */\nfunction isOptions(dom, options) {\n    return (!options &&\n        typeof dom === 'object' &&\n        dom != null &&\n        !('length' in dom) &&\n        !('type' in dom));\n}\nexport function html(dom, options) {\n    /*\n     * Be flexible about parameters, sometimes we call html(),\n     * with options as only parameter\n     * check dom argument for dom element specific properties\n     * assume there is no 'length' or 'type' properties in the options object\n     */\n    const toRender = isOptions(dom) ? ((options = dom), undefined) : dom;\n    /*\n     * Sometimes `$.html()` is used without preloading html,\n     * so fallback non-existing options to the default ones.\n     */\n    const opts = {\n        ...this === null || this === void 0 ? void 0 : this._options,\n        ...flattenOptions(options),\n    };\n    return render(this, toRender, opts);\n}\n/**\n * Render the document as XML.\n *\n * @category Static\n * @param dom - Element to render.\n * @returns THe rendered document.\n */\nexport function xml(dom) {\n    const options = { ...this._options, xmlMode: true };\n    return render(this, dom, options);\n}\n/**\n * Render the document as text.\n *\n * This returns the `textContent` of the passed elements. The result will\n * include the contents of `<script>` and `<style>` elements. To avoid this, use\n * `.prop('innerText')` instead.\n *\n * @category Static\n * @param elements - Elements to render.\n * @returns The rendered document.\n */\nexport function text(elements) {\n    const elems = elements !== null && elements !== void 0 ? elements : (this ? this.root() : []);\n    let ret = '';\n    for (let i = 0; i < elems.length; i++) {\n        ret += textContent(elems[i]);\n    }\n    return ret;\n}\nexport function parseHTML(data, context, keepScripts = typeof context === 'boolean' ? context : false) {\n    if (!data || typeof data !== 'string') {\n        return null;\n    }\n    if (typeof context === 'boolean') {\n        keepScripts = context;\n    }\n    const parsed = this.load(data, this._options, false);\n    if (!keepScripts) {\n        parsed('script').remove();\n    }\n    /*\n     * The `children` array is used by Cheerio internally to group elements that\n     * share the same parents. When nodes created through `parseHTML` are\n     * inserted into previously-existing DOM structures, they will be removed\n     * from the `children` array. The results of `parseHTML` should remain\n     * constant across these operations, so a shallow copy should be returned.\n     */\n    return [...parsed.root()[0].children];\n}\n/**\n * Sometimes you need to work with the top-level root element. To query it, you\n * can use `$.root()`.\n *\n * @category Static\n * @example\n *\n * ```js\n * $.root().append('<ul id=\"vegetables\"></ul>').html();\n * //=> <ul id=\"fruits\">...</ul><ul id=\"vegetables\"></ul>\n * ```\n *\n * @returns Cheerio instance wrapping the root node.\n * @alias Cheerio.root\n */\nexport function root() {\n    return this(this._root);\n}\n/**\n * Checks to see if the `contained` DOM element is a descendant of the\n * `container` DOM element.\n *\n * @category Static\n * @param container - Potential parent node.\n * @param contained - Potential child node.\n * @returns Indicates if the nodes contain one another.\n * @alias Cheerio.contains\n * @see {@link https://api.jquery.com/jQuery.contains/}\n */\nexport function contains(container, contained) {\n    // According to the jQuery API, an element does not \"contain\" itself\n    if (contained === container) {\n        return false;\n    }\n    /*\n     * Step up the descendants, stopping when the root element is reached\n     * (signaled by `.parent` returning a reference to the same object)\n     */\n    let next = contained;\n    while (next && next !== next.parent) {\n        next = next.parent;\n        if (next === container) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * Extract multiple values from a document, and store them in an object.\n *\n * @category Static\n * @param map - An object containing key-value pairs. The keys are the names of\n *   the properties to be created on the object, and the values are the\n *   selectors to be used to extract the values.\n * @returns An object containing the extracted values.\n */\nexport function extract(map) {\n    return this.root().extract(map);\n}\n/**\n * $.merge().\n *\n * @category Static\n * @param arr1 - First array.\n * @param arr2 - Second array.\n * @returns `arr1`, with elements of `arr2` inserted.\n * @alias Cheerio.merge\n * @see {@link https://api.jquery.com/jQuery.merge/}\n */\nexport function merge(arr1, arr2) {\n    if (!isArrayLike(arr1) || !isArrayLike(arr2)) {\n        return;\n    }\n    let newLength = arr1.length;\n    const len = +arr2.length;\n    for (let i = 0; i < len; i++) {\n        arr1[newLength++] = arr2[i];\n    }\n    arr1.length = newLength;\n    return arr1;\n}\n/**\n * Checks if an object is array-like.\n *\n * @category Static\n * @param item - Item to check.\n * @returns Indicates if the item is array-like.\n */\nfunction isArrayLike(item) {\n    if (Array.isArray(item)) {\n        return true;\n    }\n    if (typeof item !== 'object' ||\n        item === null ||\n        !('length' in item) ||\n        typeof item.length !== 'number' ||\n        item.length < 0) {\n        return false;\n    }\n    for (let i = 0; i < item.length; i++) {\n        if (!(i in item)) {\n            return false;\n        }\n    }\n    return true;\n}\n//# sourceMappingURL=static.js.map","/**\n * Checks if an object is a Cheerio instance.\n *\n * @category Utils\n * @param maybeCheerio - The object to check.\n * @returns Whether the object is a Cheerio instance.\n */\nexport function isCheerio(maybeCheerio) {\n    return maybeCheerio.cheerio != null;\n}\n/**\n * Convert a string to camel case notation.\n *\n * @private\n * @category Utils\n * @param str - The string to be converted.\n * @returns String in camel case notation.\n */\nexport function camelCase(str) {\n    return str.replace(/[._-](\\w|$)/g, (_, x) => x.toUpperCase());\n}\n/**\n * Convert a string from camel case to \"CSS case\", where word boundaries are\n * described by hyphens (\"-\") and all characters are lower-case.\n *\n * @private\n * @category Utils\n * @param str - The string to be converted.\n * @returns String in \"CSS case\".\n */\nexport function cssCase(str) {\n    return str.replace(/[A-Z]/g, '-$&').toLowerCase();\n}\n/**\n * Iterate over each DOM element without creating intermediary Cheerio\n * instances.\n *\n * This is indented for use internally to avoid otherwise unnecessary memory\n * pressure introduced by _make.\n *\n * @category Utils\n * @param array - The array to iterate over.\n * @param fn - Function to call.\n * @returns The original instance.\n */\nexport function domEach(array, fn) {\n    const len = array.length;\n    for (let i = 0; i < len; i++)\n        fn(array[i], i);\n    return array;\n}\nvar CharacterCodes;\n(function (CharacterCodes) {\n    CharacterCodes[CharacterCodes[\"LowerA\"] = 97] = \"LowerA\";\n    CharacterCodes[CharacterCodes[\"LowerZ\"] = 122] = \"LowerZ\";\n    CharacterCodes[CharacterCodes[\"UpperA\"] = 65] = \"UpperA\";\n    CharacterCodes[CharacterCodes[\"UpperZ\"] = 90] = \"UpperZ\";\n    CharacterCodes[CharacterCodes[\"Exclamation\"] = 33] = \"Exclamation\";\n})(CharacterCodes || (CharacterCodes = {}));\n/**\n * Check if string is HTML.\n *\n * Tests for a `<` within a string, immediate followed by a letter and\n * eventually followed by a `>`.\n *\n * @private\n * @category Utils\n * @param str - The string to check.\n * @returns Indicates if `str` is HTML.\n */\nexport function isHtml(str) {\n    const tagStart = str.indexOf('<');\n    if (tagStart < 0 || tagStart > str.length - 3)\n        return false;\n    const tagChar = str.charCodeAt(tagStart + 1);\n    return (((tagChar >= CharacterCodes.LowerA && tagChar <= CharacterCodes.LowerZ) ||\n        (tagChar >= CharacterCodes.UpperA && tagChar <= CharacterCodes.UpperZ) ||\n        tagChar === CharacterCodes.Exclamation) &&\n        str.includes('>', tagStart + 2));\n}\n//# sourceMappingURL=utils.js.map","/**\n * Methods for getting and modifying attributes.\n *\n * @module cheerio/attributes\n */\nimport { text } from '../static.js';\nimport { domEach, camelCase, cssCase } from '../utils.js';\nimport { isTag } from 'domhandler';\nimport { innerText, textContent } from 'domutils';\nconst hasOwn = Object.prototype.hasOwnProperty;\nconst rspace = /\\s+/;\nconst dataAttrPrefix = 'data-';\n// Attributes that are booleans\nconst rboolean = /^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i;\n// Matches strings that look like JSON objects or arrays\nconst rbrace = /^{[^]*}$|^\\[[^]*]$/;\nfunction getAttr(elem, name, xmlMode) {\n    var _a;\n    if (!elem || !isTag(elem))\n        return undefined;\n    (_a = elem.attribs) !== null && _a !== void 0 ? _a : (elem.attribs = {});\n    // Return the entire attribs object if no attribute specified\n    if (!name) {\n        return elem.attribs;\n    }\n    if (hasOwn.call(elem.attribs, name)) {\n        // Get the (decoded) attribute\n        return !xmlMode && rboolean.test(name) ? name : elem.attribs[name];\n    }\n    // Mimic the DOM and return text content as value for `option's`\n    if (elem.name === 'option' && name === 'value') {\n        return text(elem.children);\n    }\n    // Mimic DOM with default value for radios/checkboxes\n    if (elem.name === 'input' &&\n        (elem.attribs['type'] === 'radio' || elem.attribs['type'] === 'checkbox') &&\n        name === 'value') {\n        return 'on';\n    }\n    return undefined;\n}\n/**\n * Sets the value of an attribute. The attribute will be deleted if the value is\n * `null`.\n *\n * @private\n * @param el - The element to set the attribute on.\n * @param name - The attribute's name.\n * @param value - The attribute's value.\n */\nfunction setAttr(el, name, value) {\n    if (value === null) {\n        removeAttribute(el, name);\n    }\n    else {\n        el.attribs[name] = `${value}`;\n    }\n}\nexport function attr(name, value) {\n    // Set the value (with attr map support)\n    if (typeof name === 'object' || value !== undefined) {\n        if (typeof value === 'function') {\n            if (typeof name !== 'string') {\n                {\n                    throw new Error('Bad combination of arguments.');\n                }\n            }\n            return domEach(this, (el, i) => {\n                if (isTag(el))\n                    setAttr(el, name, value.call(el, i, el.attribs[name]));\n            });\n        }\n        return domEach(this, (el) => {\n            if (!isTag(el))\n                return;\n            if (typeof name === 'object') {\n                for (const objName of Object.keys(name)) {\n                    const objValue = name[objName];\n                    setAttr(el, objName, objValue);\n                }\n            }\n            else {\n                setAttr(el, name, value);\n            }\n        });\n    }\n    return arguments.length > 1\n        ? this\n        : getAttr(this[0], name, this.options.xmlMode);\n}\n/**\n * Gets a node's prop.\n *\n * @private\n * @category Attributes\n * @param el - Element to get the prop of.\n * @param name - Name of the prop.\n * @param xmlMode - Disable handling of special HTML attributes.\n * @returns The prop's value.\n */\nfunction getProp(el, name, xmlMode) {\n    return name in el\n        ? // @ts-expect-error TS doesn't like us accessing the value directly here.\n            el[name]\n        : !xmlMode && rboolean.test(name)\n            ? getAttr(el, name, false) !== undefined\n            : getAttr(el, name, xmlMode);\n}\n/**\n * Sets the value of a prop.\n *\n * @private\n * @param el - The element to set the prop on.\n * @param name - The prop's name.\n * @param value - The prop's value.\n * @param xmlMode - Disable handling of special HTML attributes.\n */\nfunction setProp(el, name, value, xmlMode) {\n    if (name in el) {\n        // @ts-expect-error Overriding value\n        el[name] = value;\n    }\n    else {\n        setAttr(el, name, !xmlMode && rboolean.test(name) ? (value ? '' : null) : `${value}`);\n    }\n}\nexport function prop(name, value) {\n    var _a;\n    if (typeof name === 'string' && value === undefined) {\n        const el = this[0];\n        if (!el || !isTag(el))\n            return undefined;\n        switch (name) {\n            case 'style': {\n                const property = this.css();\n                const keys = Object.keys(property);\n                for (let i = 0; i < keys.length; i++) {\n                    property[i] = keys[i];\n                }\n                property.length = keys.length;\n                return property;\n            }\n            case 'tagName':\n            case 'nodeName': {\n                return el.name.toUpperCase();\n            }\n            case 'href':\n            case 'src': {\n                const prop = (_a = el.attribs) === null || _a === void 0 ? void 0 : _a[name];\n                if (typeof URL !== 'undefined' &&\n                    ((name === 'href' && (el.tagName === 'a' || el.tagName === 'link')) ||\n                        (name === 'src' &&\n                            (el.tagName === 'img' ||\n                                el.tagName === 'iframe' ||\n                                el.tagName === 'audio' ||\n                                el.tagName === 'video' ||\n                                el.tagName === 'source'))) &&\n                    prop !== undefined &&\n                    this.options.baseURI) {\n                    return new URL(prop, this.options.baseURI).href;\n                }\n                return prop;\n            }\n            case 'innerText': {\n                return innerText(el);\n            }\n            case 'textContent': {\n                return textContent(el);\n            }\n            case 'outerHTML': {\n                return this.clone().wrap('<container />').parent().html();\n            }\n            case 'innerHTML': {\n                return this.html();\n            }\n            default: {\n                return getProp(el, name, this.options.xmlMode);\n            }\n        }\n    }\n    if (typeof name === 'object' || value !== undefined) {\n        if (typeof value === 'function') {\n            if (typeof name === 'object') {\n                throw new TypeError('Bad combination of arguments.');\n            }\n            return domEach(this, (el, i) => {\n                if (isTag(el)) {\n                    setProp(el, name, value.call(el, i, getProp(el, name, this.options.xmlMode)), this.options.xmlMode);\n                }\n            });\n        }\n        return domEach(this, (el) => {\n            if (!isTag(el))\n                return;\n            if (typeof name === 'object') {\n                for (const key of Object.keys(name)) {\n                    const val = name[key];\n                    setProp(el, key, val, this.options.xmlMode);\n                }\n            }\n            else {\n                setProp(el, name, value, this.options.xmlMode);\n            }\n        });\n    }\n    return undefined;\n}\n/**\n * Sets the value of a data attribute.\n *\n * @private\n * @param elem - The element to set the data attribute on.\n * @param name - The data attribute's name.\n * @param value - The data attribute's value.\n */\nfunction setData(elem, name, value) {\n    var _a;\n    (_a = elem.data) !== null && _a !== void 0 ? _a : (elem.data = {});\n    if (typeof name === 'object')\n        Object.assign(elem.data, name);\n    else if (typeof name === 'string' && value !== undefined) {\n        elem.data[name] = value;\n    }\n}\n/**\n * Read _all_ HTML5 `data-*` attributes from the equivalent HTML5 `data-*`\n * attribute, and cache the value in the node's internal data store.\n *\n * @private\n * @category Attributes\n * @param el - Element to get the data attribute of.\n * @returns A map with all of the data attributes.\n */\nfunction readAllData(el) {\n    for (const domName of Object.keys(el.attribs)) {\n        if (!domName.startsWith(dataAttrPrefix)) {\n            continue;\n        }\n        const jsName = camelCase(domName.slice(dataAttrPrefix.length));\n        if (!hasOwn.call(el.data, jsName)) {\n            el.data[jsName] = parseDataValue(el.attribs[domName]);\n        }\n    }\n    return el.data;\n}\n/**\n * Read the specified attribute from the equivalent HTML5 `data-*` attribute,\n * and (if present) cache the value in the node's internal data store.\n *\n * @private\n * @category Attributes\n * @param el - Element to get the data attribute of.\n * @param name - Name of the data attribute.\n * @returns The data attribute's value.\n */\nfunction readData(el, name) {\n    const domName = dataAttrPrefix + cssCase(name);\n    const data = el.data;\n    if (hasOwn.call(data, name)) {\n        return data[name];\n    }\n    if (hasOwn.call(el.attribs, domName)) {\n        return (data[name] = parseDataValue(el.attribs[domName]));\n    }\n    return undefined;\n}\n/**\n * Coerce string data-* attributes to their corresponding JavaScript primitives.\n *\n * @private\n * @category Attributes\n * @param value - The value to parse.\n * @returns The parsed value.\n */\nfunction parseDataValue(value) {\n    if (value === 'null')\n        return null;\n    if (value === 'true')\n        return true;\n    if (value === 'false')\n        return false;\n    const num = Number(value);\n    if (value === String(num))\n        return num;\n    if (rbrace.test(value)) {\n        try {\n            return JSON.parse(value);\n        }\n        catch {\n            /* Ignore */\n        }\n    }\n    return value;\n}\nexport function data(name, value) {\n    var _a;\n    const elem = this[0];\n    if (!elem || !isTag(elem))\n        return;\n    const dataEl = elem;\n    (_a = dataEl.data) !== null && _a !== void 0 ? _a : (dataEl.data = {});\n    // Return the entire data object if no data specified\n    if (name == null) {\n        return readAllData(dataEl);\n    }\n    // Set the value (with attr map support)\n    if (typeof name === 'object' || value !== undefined) {\n        domEach(this, (el) => {\n            if (isTag(el)) {\n                if (typeof name === 'object')\n                    setData(el, name);\n                else\n                    setData(el, name, value);\n            }\n        });\n        return this;\n    }\n    return readData(dataEl, name);\n}\nexport function val(value) {\n    const querying = arguments.length === 0;\n    const element = this[0];\n    if (!element || !isTag(element))\n        return querying ? undefined : this;\n    switch (element.name) {\n        case 'textarea': {\n            return this.text(value);\n        }\n        case 'select': {\n            const option = this.find('option:selected');\n            if (!querying) {\n                if (this.attr('multiple') == null && typeof value === 'object') {\n                    return this;\n                }\n                this.find('option').removeAttr('selected');\n                const values = typeof value === 'object' ? value : [value];\n                for (const val of values) {\n                    this.find(`option[value=\"${val}\"]`).attr('selected', '');\n                }\n                return this;\n            }\n            return this.attr('multiple')\n                ? option.toArray().map((el) => text(el.children))\n                : option.attr('value');\n        }\n        case 'input':\n        case 'option': {\n            return querying\n                ? this.attr('value')\n                : this.attr('value', value);\n        }\n    }\n    return undefined;\n}\n/**\n * Remove an attribute.\n *\n * @private\n * @param elem - Node to remove attribute from.\n * @param name - Name of the attribute to remove.\n */\nfunction removeAttribute(elem, name) {\n    if (!elem.attribs || !hasOwn.call(elem.attribs, name))\n        return;\n    delete elem.attribs[name];\n}\n/**\n * Splits a space-separated list of names to individual names.\n *\n * @category Attributes\n * @param names - Names to split.\n * @returns - Split names.\n */\nfunction splitNames(names) {\n    return names ? names.trim().split(rspace) : [];\n}\n/**\n * Method for removing attributes by `name`.\n *\n * @category Attributes\n * @example\n *\n * ```js\n * $('.pear').removeAttr('class').html();\n * //=> <li>Pear</li>\n *\n * $('.apple').attr('id', 'favorite');\n * $('.apple').removeAttr('id class').html();\n * //=> <li>Apple</li>\n * ```\n *\n * @param name - Name of the attribute.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/removeAttr/}\n */\nexport function removeAttr(name) {\n    const attrNames = splitNames(name);\n    for (const attrName of attrNames) {\n        domEach(this, (elem) => {\n            if (isTag(elem))\n                removeAttribute(elem, attrName);\n        });\n    }\n    return this;\n}\n/**\n * Check to see if _any_ of the matched elements have the given `className`.\n *\n * @category Attributes\n * @example\n *\n * ```js\n * $('.pear').hasClass('pear');\n * //=> true\n *\n * $('apple').hasClass('fruit');\n * //=> false\n *\n * $('li').hasClass('pear');\n * //=> true\n * ```\n *\n * @param className - Name of the class.\n * @returns Indicates if an element has the given `className`.\n * @see {@link https://api.jquery.com/hasClass/}\n */\nexport function hasClass(className) {\n    return this.toArray().some((elem) => {\n        const clazz = isTag(elem) && elem.attribs['class'];\n        let idx = -1;\n        if (clazz && className.length > 0) {\n            while ((idx = clazz.indexOf(className, idx + 1)) > -1) {\n                const end = idx + className.length;\n                if ((idx === 0 || rspace.test(clazz[idx - 1])) &&\n                    (end === clazz.length || rspace.test(clazz[end]))) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    });\n}\n/**\n * Adds class(es) to all of the matched elements. Also accepts a `function`.\n *\n * @category Attributes\n * @example\n *\n * ```js\n * $('.pear').addClass('fruit').html();\n * //=> <li class=\"pear fruit\">Pear</li>\n *\n * $('.apple').addClass('fruit red').html();\n * //=> <li class=\"apple fruit red\">Apple</li>\n * ```\n *\n * @param value - Name of new class.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/addClass/}\n */\nexport function addClass(value) {\n    // Support functions\n    if (typeof value === 'function') {\n        return domEach(this, (el, i) => {\n            if (isTag(el)) {\n                const className = el.attribs['class'] || '';\n                addClass.call([el], value.call(el, i, className));\n            }\n        });\n    }\n    // Return if no value or not a string or function\n    if (!value || typeof value !== 'string')\n        return this;\n    const classNames = value.split(rspace);\n    const numElements = this.length;\n    for (let i = 0; i < numElements; i++) {\n        const el = this[i];\n        // If selected element isn't a tag, move on\n        if (!isTag(el))\n            continue;\n        // If we don't already have classes — always set xmlMode to false here, as it doesn't matter for classes\n        const className = getAttr(el, 'class', false);\n        if (className) {\n            let setClass = ` ${className} `;\n            // Check if class already exists\n            for (const cn of classNames) {\n                const appendClass = `${cn} `;\n                if (!setClass.includes(` ${appendClass}`))\n                    setClass += appendClass;\n            }\n            setAttr(el, 'class', setClass.trim());\n        }\n        else {\n            setAttr(el, 'class', classNames.join(' ').trim());\n        }\n    }\n    return this;\n}\n/**\n * Removes one or more space-separated classes from the selected elements. If no\n * `className` is defined, all classes will be removed. Also accepts a\n * `function`.\n *\n * @category Attributes\n * @example\n *\n * ```js\n * $('.pear').removeClass('pear').html();\n * //=> <li class=\"\">Pear</li>\n *\n * $('.apple').addClass('red').removeClass().html();\n * //=> <li class=\"\">Apple</li>\n * ```\n *\n * @param name - Name of the class. If not specified, removes all elements.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/removeClass/}\n */\nexport function removeClass(name) {\n    // Handle if value is a function\n    if (typeof name === 'function') {\n        return domEach(this, (el, i) => {\n            if (isTag(el)) {\n                removeClass.call([el], name.call(el, i, el.attribs['class'] || ''));\n            }\n        });\n    }\n    const classes = splitNames(name);\n    const numClasses = classes.length;\n    const removeAll = arguments.length === 0;\n    return domEach(this, (el) => {\n        if (!isTag(el))\n            return;\n        if (removeAll) {\n            // Short circuit the remove all case as this is the nice one\n            el.attribs['class'] = '';\n        }\n        else {\n            const elClasses = splitNames(el.attribs['class']);\n            let changed = false;\n            for (let j = 0; j < numClasses; j++) {\n                const index = elClasses.indexOf(classes[j]);\n                if (index >= 0) {\n                    elClasses.splice(index, 1);\n                    changed = true;\n                    /*\n                     * We have to do another pass to ensure that there are not duplicate\n                     * classes listed\n                     */\n                    j--;\n                }\n            }\n            if (changed) {\n                el.attribs['class'] = elClasses.join(' ');\n            }\n        }\n    });\n}\n/**\n * Add or remove class(es) from the matched elements, depending on either the\n * class's presence or the value of the switch argument. Also accepts a\n * `function`.\n *\n * @category Attributes\n * @example\n *\n * ```js\n * $('.apple.green').toggleClass('fruit green red').html();\n * //=> <li class=\"apple fruit red\">Apple</li>\n *\n * $('.apple.green').toggleClass('fruit green red', true).html();\n * //=> <li class=\"apple green fruit red\">Apple</li>\n * ```\n *\n * @param value - Name of the class. Can also be a function.\n * @param stateVal - If specified the state of the class.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/toggleClass/}\n */\nexport function toggleClass(value, stateVal) {\n    // Support functions\n    if (typeof value === 'function') {\n        return domEach(this, (el, i) => {\n            if (isTag(el)) {\n                toggleClass.call([el], value.call(el, i, el.attribs['class'] || '', stateVal), stateVal);\n            }\n        });\n    }\n    // Return if no value or not a string or function\n    if (!value || typeof value !== 'string')\n        return this;\n    const classNames = value.split(rspace);\n    const numClasses = classNames.length;\n    const state = typeof stateVal === 'boolean' ? (stateVal ? 1 : -1) : 0;\n    const numElements = this.length;\n    for (let i = 0; i < numElements; i++) {\n        const el = this[i];\n        // If selected element isn't a tag, move on\n        if (!isTag(el))\n            continue;\n        const elementClasses = splitNames(el.attribs['class']);\n        // Check if class already exists\n        for (let j = 0; j < numClasses; j++) {\n            // Check if the class name is currently defined\n            const index = elementClasses.indexOf(classNames[j]);\n            // Add if stateValue === true or we are toggling and there is no value\n            if (state >= 0 && index < 0) {\n                elementClasses.push(classNames[j]);\n            }\n            else if (state <= 0 && index >= 0) {\n                // Otherwise remove but only if the item exists\n                elementClasses.splice(index, 1);\n            }\n        }\n        el.attribs['class'] = elementClasses.join(' ');\n    }\n    return this;\n}\n//# sourceMappingURL=attributes.js.map","export var SelectorType;\n(function (SelectorType) {\n    SelectorType[\"Attribute\"] = \"attribute\";\n    SelectorType[\"Pseudo\"] = \"pseudo\";\n    SelectorType[\"PseudoElement\"] = \"pseudo-element\";\n    SelectorType[\"Tag\"] = \"tag\";\n    SelectorType[\"Universal\"] = \"universal\";\n    // Traversals\n    SelectorType[\"Adjacent\"] = \"adjacent\";\n    SelectorType[\"Child\"] = \"child\";\n    SelectorType[\"Descendant\"] = \"descendant\";\n    SelectorType[\"Parent\"] = \"parent\";\n    SelectorType[\"Sibling\"] = \"sibling\";\n    SelectorType[\"ColumnCombinator\"] = \"column-combinator\";\n})(SelectorType || (SelectorType = {}));\n/**\n * Modes for ignore case.\n *\n * This could be updated to an enum, and the object is\n * the current stand-in that will allow code to be updated\n * without big changes.\n */\nexport const IgnoreCaseMode = {\n    Unknown: null,\n    QuirksMode: \"quirks\",\n    IgnoreCase: true,\n    CaseSensitive: false,\n};\nexport var AttributeAction;\n(function (AttributeAction) {\n    AttributeAction[\"Any\"] = \"any\";\n    AttributeAction[\"Element\"] = \"element\";\n    AttributeAction[\"End\"] = \"end\";\n    AttributeAction[\"Equals\"] = \"equals\";\n    AttributeAction[\"Exists\"] = \"exists\";\n    AttributeAction[\"Hyphen\"] = \"hyphen\";\n    AttributeAction[\"Not\"] = \"not\";\n    AttributeAction[\"Start\"] = \"start\";\n})(AttributeAction || (AttributeAction = {}));\n","import { SelectorType, AttributeAction, } from \"./types\";\nconst reName = /^[^\\\\#]?(?:\\\\(?:[\\da-f]{1,6}\\s?|.)|[\\w\\-\\u00b0-\\uFFFF])+/;\nconst reEscape = /\\\\([\\da-f]{1,6}\\s?|(\\s)|.)/gi;\nconst actionTypes = new Map([\n    [126 /* Tilde */, AttributeAction.Element],\n    [94 /* Circumflex */, AttributeAction.Start],\n    [36 /* Dollar */, AttributeAction.End],\n    [42 /* Asterisk */, AttributeAction.Any],\n    [33 /* ExclamationMark */, AttributeAction.Not],\n    [124 /* Pipe */, AttributeAction.Hyphen],\n]);\n// Pseudos, whose data property is parsed as well.\nconst unpackPseudos = new Set([\n    \"has\",\n    \"not\",\n    \"matches\",\n    \"is\",\n    \"where\",\n    \"host\",\n    \"host-context\",\n]);\n/**\n * Checks whether a specific selector is a traversal.\n * This is useful eg. in swapping the order of elements that\n * are not traversals.\n *\n * @param selector Selector to check.\n */\nexport function isTraversal(selector) {\n    switch (selector.type) {\n        case SelectorType.Adjacent:\n        case SelectorType.Child:\n        case SelectorType.Descendant:\n        case SelectorType.Parent:\n        case SelectorType.Sibling:\n        case SelectorType.ColumnCombinator:\n            return true;\n        default:\n            return false;\n    }\n}\nconst stripQuotesFromPseudos = new Set([\"contains\", \"icontains\"]);\n// Unescape function taken from https://github.com/jquery/sizzle/blob/master/src/sizzle.js#L152\nfunction funescape(_, escaped, escapedWhitespace) {\n    const high = parseInt(escaped, 16) - 0x10000;\n    // NaN means non-codepoint\n    return high !== high || escapedWhitespace\n        ? escaped\n        : high < 0\n            ? // BMP codepoint\n                String.fromCharCode(high + 0x10000)\n            : // Supplemental Plane codepoint (surrogate pair)\n                String.fromCharCode((high >> 10) | 0xd800, (high & 0x3ff) | 0xdc00);\n}\nfunction unescapeCSS(str) {\n    return str.replace(reEscape, funescape);\n}\nfunction isQuote(c) {\n    return c === 39 /* SingleQuote */ || c === 34 /* DoubleQuote */;\n}\nfunction isWhitespace(c) {\n    return (c === 32 /* Space */ ||\n        c === 9 /* Tab */ ||\n        c === 10 /* NewLine */ ||\n        c === 12 /* FormFeed */ ||\n        c === 13 /* CarriageReturn */);\n}\n/**\n * Parses `selector`, optionally with the passed `options`.\n *\n * @param selector Selector to parse.\n * @param options Options for parsing.\n * @returns Returns a two-dimensional array.\n * The first dimension represents selectors separated by commas (eg. `sub1, sub2`),\n * the second contains the relevant tokens for that selector.\n */\nexport function parse(selector) {\n    const subselects = [];\n    const endIndex = parseSelector(subselects, `${selector}`, 0);\n    if (endIndex < selector.length) {\n        throw new Error(`Unmatched selector: ${selector.slice(endIndex)}`);\n    }\n    return subselects;\n}\nfunction parseSelector(subselects, selector, selectorIndex) {\n    let tokens = [];\n    function getName(offset) {\n        const match = selector.slice(selectorIndex + offset).match(reName);\n        if (!match) {\n            throw new Error(`Expected name, found ${selector.slice(selectorIndex)}`);\n        }\n        const [name] = match;\n        selectorIndex += offset + name.length;\n        return unescapeCSS(name);\n    }\n    function stripWhitespace(offset) {\n        selectorIndex += offset;\n        while (selectorIndex < selector.length &&\n            isWhitespace(selector.charCodeAt(selectorIndex))) {\n            selectorIndex++;\n        }\n    }\n    function readValueWithParenthesis() {\n        selectorIndex += 1;\n        const start = selectorIndex;\n        let counter = 1;\n        for (; counter > 0 && selectorIndex < selector.length; selectorIndex++) {\n            if (selector.charCodeAt(selectorIndex) ===\n                40 /* LeftParenthesis */ &&\n                !isEscaped(selectorIndex)) {\n                counter++;\n            }\n            else if (selector.charCodeAt(selectorIndex) ===\n                41 /* RightParenthesis */ &&\n                !isEscaped(selectorIndex)) {\n                counter--;\n            }\n        }\n        if (counter) {\n            throw new Error(\"Parenthesis not matched\");\n        }\n        return unescapeCSS(selector.slice(start, selectorIndex - 1));\n    }\n    function isEscaped(pos) {\n        let slashCount = 0;\n        while (selector.charCodeAt(--pos) === 92 /* BackSlash */)\n            slashCount++;\n        return (slashCount & 1) === 1;\n    }\n    function ensureNotTraversal() {\n        if (tokens.length > 0 && isTraversal(tokens[tokens.length - 1])) {\n            throw new Error(\"Did not expect successive traversals.\");\n        }\n    }\n    function addTraversal(type) {\n        if (tokens.length > 0 &&\n            tokens[tokens.length - 1].type === SelectorType.Descendant) {\n            tokens[tokens.length - 1].type = type;\n            return;\n        }\n        ensureNotTraversal();\n        tokens.push({ type });\n    }\n    function addSpecialAttribute(name, action) {\n        tokens.push({\n            type: SelectorType.Attribute,\n            name,\n            action,\n            value: getName(1),\n            namespace: null,\n            ignoreCase: \"quirks\",\n        });\n    }\n    /**\n     * We have finished parsing the current part of the selector.\n     *\n     * Remove descendant tokens at the end if they exist,\n     * and return the last index, so that parsing can be\n     * picked up from here.\n     */\n    function finalizeSubselector() {\n        if (tokens.length &&\n            tokens[tokens.length - 1].type === SelectorType.Descendant) {\n            tokens.pop();\n        }\n        if (tokens.length === 0) {\n            throw new Error(\"Empty sub-selector\");\n        }\n        subselects.push(tokens);\n    }\n    stripWhitespace(0);\n    if (selector.length === selectorIndex) {\n        return selectorIndex;\n    }\n    loop: while (selectorIndex < selector.length) {\n        const firstChar = selector.charCodeAt(selectorIndex);\n        switch (firstChar) {\n            // Whitespace\n            case 32 /* Space */:\n            case 9 /* Tab */:\n            case 10 /* NewLine */:\n            case 12 /* FormFeed */:\n            case 13 /* CarriageReturn */: {\n                if (tokens.length === 0 ||\n                    tokens[0].type !== SelectorType.Descendant) {\n                    ensureNotTraversal();\n                    tokens.push({ type: SelectorType.Descendant });\n                }\n                stripWhitespace(1);\n                break;\n            }\n            // Traversals\n            case 62 /* GreaterThan */: {\n                addTraversal(SelectorType.Child);\n                stripWhitespace(1);\n                break;\n            }\n            case 60 /* LessThan */: {\n                addTraversal(SelectorType.Parent);\n                stripWhitespace(1);\n                break;\n            }\n            case 126 /* Tilde */: {\n                addTraversal(SelectorType.Sibling);\n                stripWhitespace(1);\n                break;\n            }\n            case 43 /* Plus */: {\n                addTraversal(SelectorType.Adjacent);\n                stripWhitespace(1);\n                break;\n            }\n            // Special attribute selectors: .class, #id\n            case 46 /* Period */: {\n                addSpecialAttribute(\"class\", AttributeAction.Element);\n                break;\n            }\n            case 35 /* Hash */: {\n                addSpecialAttribute(\"id\", AttributeAction.Equals);\n                break;\n            }\n            case 91 /* LeftSquareBracket */: {\n                stripWhitespace(1);\n                // Determine attribute name and namespace\n                let name;\n                let namespace = null;\n                if (selector.charCodeAt(selectorIndex) === 124 /* Pipe */) {\n                    // Equivalent to no namespace\n                    name = getName(1);\n                }\n                else if (selector.startsWith(\"*|\", selectorIndex)) {\n                    namespace = \"*\";\n                    name = getName(2);\n                }\n                else {\n                    name = getName(0);\n                    if (selector.charCodeAt(selectorIndex) === 124 /* Pipe */ &&\n                        selector.charCodeAt(selectorIndex + 1) !==\n                            61 /* Equal */) {\n                        namespace = name;\n                        name = getName(1);\n                    }\n                }\n                stripWhitespace(0);\n                // Determine comparison operation\n                let action = AttributeAction.Exists;\n                const possibleAction = actionTypes.get(selector.charCodeAt(selectorIndex));\n                if (possibleAction) {\n                    action = possibleAction;\n                    if (selector.charCodeAt(selectorIndex + 1) !==\n                        61 /* Equal */) {\n                        throw new Error(\"Expected `=`\");\n                    }\n                    stripWhitespace(2);\n                }\n                else if (selector.charCodeAt(selectorIndex) === 61 /* Equal */) {\n                    action = AttributeAction.Equals;\n                    stripWhitespace(1);\n                }\n                // Determine value\n                let value = \"\";\n                let ignoreCase = null;\n                if (action !== \"exists\") {\n                    if (isQuote(selector.charCodeAt(selectorIndex))) {\n                        const quote = selector.charCodeAt(selectorIndex);\n                        let sectionEnd = selectorIndex + 1;\n                        while (sectionEnd < selector.length &&\n                            (selector.charCodeAt(sectionEnd) !== quote ||\n                                isEscaped(sectionEnd))) {\n                            sectionEnd += 1;\n                        }\n                        if (selector.charCodeAt(sectionEnd) !== quote) {\n                            throw new Error(\"Attribute value didn't end\");\n                        }\n                        value = unescapeCSS(selector.slice(selectorIndex + 1, sectionEnd));\n                        selectorIndex = sectionEnd + 1;\n                    }\n                    else {\n                        const valueStart = selectorIndex;\n                        while (selectorIndex < selector.length &&\n                            ((!isWhitespace(selector.charCodeAt(selectorIndex)) &&\n                                selector.charCodeAt(selectorIndex) !==\n                                    93 /* RightSquareBracket */) ||\n                                isEscaped(selectorIndex))) {\n                            selectorIndex += 1;\n                        }\n                        value = unescapeCSS(selector.slice(valueStart, selectorIndex));\n                    }\n                    stripWhitespace(0);\n                    // See if we have a force ignore flag\n                    const forceIgnore = selector.charCodeAt(selectorIndex) | 0x20;\n                    // If the forceIgnore flag is set (either `i` or `s`), use that value\n                    if (forceIgnore === 115 /* LowerS */) {\n                        ignoreCase = false;\n                        stripWhitespace(1);\n                    }\n                    else if (forceIgnore === 105 /* LowerI */) {\n                        ignoreCase = true;\n                        stripWhitespace(1);\n                    }\n                }\n                if (selector.charCodeAt(selectorIndex) !==\n                    93 /* RightSquareBracket */) {\n                    throw new Error(\"Attribute selector didn't terminate\");\n                }\n                selectorIndex += 1;\n                const attributeSelector = {\n                    type: SelectorType.Attribute,\n                    name,\n                    action,\n                    value,\n                    namespace,\n                    ignoreCase,\n                };\n                tokens.push(attributeSelector);\n                break;\n            }\n            case 58 /* Colon */: {\n                if (selector.charCodeAt(selectorIndex + 1) === 58 /* Colon */) {\n                    tokens.push({\n                        type: SelectorType.PseudoElement,\n                        name: getName(2).toLowerCase(),\n                        data: selector.charCodeAt(selectorIndex) ===\n                            40 /* LeftParenthesis */\n                            ? readValueWithParenthesis()\n                            : null,\n                    });\n                    continue;\n                }\n                const name = getName(1).toLowerCase();\n                let data = null;\n                if (selector.charCodeAt(selectorIndex) ===\n                    40 /* LeftParenthesis */) {\n                    if (unpackPseudos.has(name)) {\n                        if (isQuote(selector.charCodeAt(selectorIndex + 1))) {\n                            throw new Error(`Pseudo-selector ${name} cannot be quoted`);\n                        }\n                        data = [];\n                        selectorIndex = parseSelector(data, selector, selectorIndex + 1);\n                        if (selector.charCodeAt(selectorIndex) !==\n                            41 /* RightParenthesis */) {\n                            throw new Error(`Missing closing parenthesis in :${name} (${selector})`);\n                        }\n                        selectorIndex += 1;\n                    }\n                    else {\n                        data = readValueWithParenthesis();\n                        if (stripQuotesFromPseudos.has(name)) {\n                            const quot = data.charCodeAt(0);\n                            if (quot === data.charCodeAt(data.length - 1) &&\n                                isQuote(quot)) {\n                                data = data.slice(1, -1);\n                            }\n                        }\n                        data = unescapeCSS(data);\n                    }\n                }\n                tokens.push({ type: SelectorType.Pseudo, name, data });\n                break;\n            }\n            case 44 /* Comma */: {\n                finalizeSubselector();\n                tokens = [];\n                stripWhitespace(1);\n                break;\n            }\n            default: {\n                if (selector.startsWith(\"/*\", selectorIndex)) {\n                    const endIndex = selector.indexOf(\"*/\", selectorIndex + 2);\n                    if (endIndex < 0) {\n                        throw new Error(\"Comment was not terminated\");\n                    }\n                    selectorIndex = endIndex + 2;\n                    // Remove leading whitespace\n                    if (tokens.length === 0) {\n                        stripWhitespace(0);\n                    }\n                    break;\n                }\n                let namespace = null;\n                let name;\n                if (firstChar === 42 /* Asterisk */) {\n                    selectorIndex += 1;\n                    name = \"*\";\n                }\n                else if (firstChar === 124 /* Pipe */) {\n                    name = \"\";\n                    if (selector.charCodeAt(selectorIndex + 1) === 124 /* Pipe */) {\n                        addTraversal(SelectorType.ColumnCombinator);\n                        stripWhitespace(2);\n                        break;\n                    }\n                }\n                else if (reName.test(selector.slice(selectorIndex))) {\n                    name = getName(0);\n                }\n                else {\n                    break loop;\n                }\n                if (selector.charCodeAt(selectorIndex) === 124 /* Pipe */ &&\n                    selector.charCodeAt(selectorIndex + 1) !== 124 /* Pipe */) {\n                    namespace = name;\n                    if (selector.charCodeAt(selectorIndex + 1) ===\n                        42 /* Asterisk */) {\n                        name = \"*\";\n                        selectorIndex += 2;\n                    }\n                    else {\n                        name = getName(1);\n                    }\n                }\n                tokens.push(name === \"*\"\n                    ? { type: SelectorType.Universal, namespace }\n                    : { type: SelectorType.Tag, name, namespace });\n            }\n        }\n    }\n    finalizeSubselector();\n    return selectorIndex;\n}\n","module.exports = {\n\ttrueFunc: function trueFunc(){\n\t\treturn true;\n\t},\n\tfalseFunc: function falseFunc(){\n\t\treturn false;\n\t}\n};","import { AttributeAction, SelectorType } from \"css-what\";\nconst procedure = new Map([\n    [SelectorType.Universal, 50],\n    [SelectorType.Tag, 30],\n    [SelectorType.Attribute, 1],\n    [SelectorType.Pseudo, 0],\n]);\nexport function isTraversal(token) {\n    return !procedure.has(token.type);\n}\nconst attributes = new Map([\n    [AttributeAction.Exists, 10],\n    [AttributeAction.Equals, 8],\n    [AttributeAction.Not, 7],\n    [AttributeAction.Start, 6],\n    [AttributeAction.End, 6],\n    [AttributeAction.Any, 5],\n]);\n/**\n * Sort the parts of the passed selector,\n * as there is potential for optimization\n * (some types of selectors are faster than others)\n *\n * @param arr Selector to sort\n */\nexport default function sortByProcedure(arr) {\n    const procs = arr.map(getProcedure);\n    for (let i = 1; i < arr.length; i++) {\n        const procNew = procs[i];\n        if (procNew < 0)\n            continue;\n        for (let j = i - 1; j >= 0 && procNew < procs[j]; j--) {\n            const token = arr[j + 1];\n            arr[j + 1] = arr[j];\n            arr[j] = token;\n            procs[j + 1] = procs[j];\n            procs[j] = procNew;\n        }\n    }\n}\nfunction getProcedure(token) {\n    var _a, _b;\n    let proc = (_a = procedure.get(token.type)) !== null && _a !== void 0 ? _a : -1;\n    if (token.type === SelectorType.Attribute) {\n        proc = (_b = attributes.get(token.action)) !== null && _b !== void 0 ? _b : 4;\n        if (token.action === AttributeAction.Equals && token.name === \"id\") {\n            // Prefer ID selectors (eg. #ID)\n            proc = 9;\n        }\n        if (token.ignoreCase) {\n            /*\n             * IgnoreCase adds some overhead, prefer \"normal\" token\n             * this is a binary operation, to ensure it's still an int\n             */\n            proc >>= 1;\n        }\n    }\n    else if (token.type === SelectorType.Pseudo) {\n        if (!token.data) {\n            proc = 3;\n        }\n        else if (token.name === \"has\" || token.name === \"contains\") {\n            proc = 0; // Expensive in any case\n        }\n        else if (Array.isArray(token.data)) {\n            // Eg. :matches, :not\n            proc = Math.min(...token.data.map((d) => Math.min(...d.map(getProcedure))));\n            // If we have traversals, try to avoid executing this selector\n            if (proc < 0) {\n                proc = 0;\n            }\n        }\n        else {\n            proc = 2;\n        }\n    }\n    return proc;\n}\n//# sourceMappingURL=sort.js.map","import boolbase from \"boolbase\";\n/**\n * All reserved characters in a regex, used for escaping.\n *\n * Taken from XRegExp, (c) 2007-2020 Steven Levithan under the MIT license\n * https://github.com/slevithan/xregexp/blob/95eeebeb8fac8754d54eafe2b4743661ac1cf028/src/xregexp.js#L794\n */\nconst reChars = /[-[\\]{}()*+?.,\\\\^$|#\\s]/g;\nfunction escapeRegex(value) {\n    return value.replace(reChars, \"\\\\$&\");\n}\n/**\n * Attributes that are case-insensitive in HTML.\n *\n * @private\n * @see https://html.spec.whatwg.org/multipage/semantics-other.html#case-sensitivity-of-selectors\n */\nconst caseInsensitiveAttributes = new Set([\n    \"accept\",\n    \"accept-charset\",\n    \"align\",\n    \"alink\",\n    \"axis\",\n    \"bgcolor\",\n    \"charset\",\n    \"checked\",\n    \"clear\",\n    \"codetype\",\n    \"color\",\n    \"compact\",\n    \"declare\",\n    \"defer\",\n    \"dir\",\n    \"direction\",\n    \"disabled\",\n    \"enctype\",\n    \"face\",\n    \"frame\",\n    \"hreflang\",\n    \"http-equiv\",\n    \"lang\",\n    \"language\",\n    \"link\",\n    \"media\",\n    \"method\",\n    \"multiple\",\n    \"nohref\",\n    \"noresize\",\n    \"noshade\",\n    \"nowrap\",\n    \"readonly\",\n    \"rel\",\n    \"rev\",\n    \"rules\",\n    \"scope\",\n    \"scrolling\",\n    \"selected\",\n    \"shape\",\n    \"target\",\n    \"text\",\n    \"type\",\n    \"valign\",\n    \"valuetype\",\n    \"vlink\",\n]);\nfunction shouldIgnoreCase(selector, options) {\n    return typeof selector.ignoreCase === \"boolean\"\n        ? selector.ignoreCase\n        : selector.ignoreCase === \"quirks\"\n            ? !!options.quirksMode\n            : !options.xmlMode && caseInsensitiveAttributes.has(selector.name);\n}\n/**\n * Attribute selectors\n */\nexport const attributeRules = {\n    equals(next, data, options) {\n        const { adapter } = options;\n        const { name } = data;\n        let { value } = data;\n        if (shouldIgnoreCase(data, options)) {\n            value = value.toLowerCase();\n            return (elem) => {\n                const attr = adapter.getAttributeValue(elem, name);\n                return (attr != null &&\n                    attr.length === value.length &&\n                    attr.toLowerCase() === value &&\n                    next(elem));\n            };\n        }\n        return (elem) => adapter.getAttributeValue(elem, name) === value && next(elem);\n    },\n    hyphen(next, data, options) {\n        const { adapter } = options;\n        const { name } = data;\n        let { value } = data;\n        const len = value.length;\n        if (shouldIgnoreCase(data, options)) {\n            value = value.toLowerCase();\n            return function hyphenIC(elem) {\n                const attr = adapter.getAttributeValue(elem, name);\n                return (attr != null &&\n                    (attr.length === len || attr.charAt(len) === \"-\") &&\n                    attr.substr(0, len).toLowerCase() === value &&\n                    next(elem));\n            };\n        }\n        return function hyphen(elem) {\n            const attr = adapter.getAttributeValue(elem, name);\n            return (attr != null &&\n                (attr.length === len || attr.charAt(len) === \"-\") &&\n                attr.substr(0, len) === value &&\n                next(elem));\n        };\n    },\n    element(next, data, options) {\n        const { adapter } = options;\n        const { name, value } = data;\n        if (/\\s/.test(value)) {\n            return boolbase.falseFunc;\n        }\n        const regex = new RegExp(`(?:^|\\\\s)${escapeRegex(value)}(?:$|\\\\s)`, shouldIgnoreCase(data, options) ? \"i\" : \"\");\n        return function element(elem) {\n            const attr = adapter.getAttributeValue(elem, name);\n            return (attr != null &&\n                attr.length >= value.length &&\n                regex.test(attr) &&\n                next(elem));\n        };\n    },\n    exists(next, { name }, { adapter }) {\n        return (elem) => adapter.hasAttrib(elem, name) && next(elem);\n    },\n    start(next, data, options) {\n        const { adapter } = options;\n        const { name } = data;\n        let { value } = data;\n        const len = value.length;\n        if (len === 0) {\n            return boolbase.falseFunc;\n        }\n        if (shouldIgnoreCase(data, options)) {\n            value = value.toLowerCase();\n            return (elem) => {\n                const attr = adapter.getAttributeValue(elem, name);\n                return (attr != null &&\n                    attr.length >= len &&\n                    attr.substr(0, len).toLowerCase() === value &&\n                    next(elem));\n            };\n        }\n        return (elem) => {\n            var _a;\n            return !!((_a = adapter.getAttributeValue(elem, name)) === null || _a === void 0 ? void 0 : _a.startsWith(value)) &&\n                next(elem);\n        };\n    },\n    end(next, data, options) {\n        const { adapter } = options;\n        const { name } = data;\n        let { value } = data;\n        const len = -value.length;\n        if (len === 0) {\n            return boolbase.falseFunc;\n        }\n        if (shouldIgnoreCase(data, options)) {\n            value = value.toLowerCase();\n            return (elem) => {\n                var _a;\n                return ((_a = adapter\n                    .getAttributeValue(elem, name)) === null || _a === void 0 ? void 0 : _a.substr(len).toLowerCase()) === value && next(elem);\n            };\n        }\n        return (elem) => {\n            var _a;\n            return !!((_a = adapter.getAttributeValue(elem, name)) === null || _a === void 0 ? void 0 : _a.endsWith(value)) &&\n                next(elem);\n        };\n    },\n    any(next, data, options) {\n        const { adapter } = options;\n        const { name, value } = data;\n        if (value === \"\") {\n            return boolbase.falseFunc;\n        }\n        if (shouldIgnoreCase(data, options)) {\n            const regex = new RegExp(escapeRegex(value), \"i\");\n            return function anyIC(elem) {\n                const attr = adapter.getAttributeValue(elem, name);\n                return (attr != null &&\n                    attr.length >= value.length &&\n                    regex.test(attr) &&\n                    next(elem));\n            };\n        }\n        return (elem) => {\n            var _a;\n            return !!((_a = adapter.getAttributeValue(elem, name)) === null || _a === void 0 ? void 0 : _a.includes(value)) &&\n                next(elem);\n        };\n    },\n    not(next, data, options) {\n        const { adapter } = options;\n        const { name } = data;\n        let { value } = data;\n        if (value === \"\") {\n            return (elem) => !!adapter.getAttributeValue(elem, name) && next(elem);\n        }\n        else if (shouldIgnoreCase(data, options)) {\n            value = value.toLowerCase();\n            return (elem) => {\n                const attr = adapter.getAttributeValue(elem, name);\n                return ((attr == null ||\n                    attr.length !== value.length ||\n                    attr.toLowerCase() !== value) &&\n                    next(elem));\n            };\n        }\n        return (elem) => adapter.getAttributeValue(elem, name) !== value && next(elem);\n    },\n};\n//# sourceMappingURL=attributes.js.map","// Following http://www.w3.org/TR/css3-selectors/#nth-child-pseudo\n// Whitespace as per https://www.w3.org/TR/selectors-3/#lex is \" \\t\\r\\n\\f\"\nconst whitespace = new Set([9, 10, 12, 13, 32]);\nconst ZERO = \"0\".charCodeAt(0);\nconst NINE = \"9\".charCodeAt(0);\n/**\n * Parses an expression.\n *\n * @throws An `Error` if parsing fails.\n * @returns An array containing the integer step size and the integer offset of the nth rule.\n * @example nthCheck.parse(\"2n+3\"); // returns [2, 3]\n */\nexport function parse(formula) {\n    formula = formula.trim().toLowerCase();\n    if (formula === \"even\") {\n        return [2, 0];\n    }\n    else if (formula === \"odd\") {\n        return [2, 1];\n    }\n    // Parse [ ['-'|'+']? INTEGER? {N} [ S* ['-'|'+'] S* INTEGER ]?\n    let idx = 0;\n    let a = 0;\n    let sign = readSign();\n    let number = readNumber();\n    if (idx < formula.length && formula.charAt(idx) === \"n\") {\n        idx++;\n        a = sign * (number !== null && number !== void 0 ? number : 1);\n        skipWhitespace();\n        if (idx < formula.length) {\n            sign = readSign();\n            skipWhitespace();\n            number = readNumber();\n        }\n        else {\n            sign = number = 0;\n        }\n    }\n    // Throw if there is anything else\n    if (number === null || idx < formula.length) {\n        throw new Error(`n-th rule couldn't be parsed ('${formula}')`);\n    }\n    return [a, sign * number];\n    function readSign() {\n        if (formula.charAt(idx) === \"-\") {\n            idx++;\n            return -1;\n        }\n        if (formula.charAt(idx) === \"+\") {\n            idx++;\n        }\n        return 1;\n    }\n    function readNumber() {\n        const start = idx;\n        let value = 0;\n        while (idx < formula.length &&\n            formula.charCodeAt(idx) >= ZERO &&\n            formula.charCodeAt(idx) <= NINE) {\n            value = value * 10 + (formula.charCodeAt(idx) - ZERO);\n            idx++;\n        }\n        // Return `null` if we didn't read anything.\n        return idx === start ? null : value;\n    }\n    function skipWhitespace() {\n        while (idx < formula.length &&\n            whitespace.has(formula.charCodeAt(idx))) {\n            idx++;\n        }\n    }\n}\n//# sourceMappingURL=parse.js.map","import boolbase from \"boolbase\";\n/**\n * Returns a function that checks if an elements index matches the given rule\n * highly optimized to return the fastest solution.\n *\n * @param parsed A tuple [a, b], as returned by `parse`.\n * @returns A highly optimized function that returns whether an index matches the nth-check.\n * @example\n *\n * ```js\n * const check = nthCheck.compile([2, 3]);\n *\n * check(0); // `false`\n * check(1); // `false`\n * check(2); // `true`\n * check(3); // `false`\n * check(4); // `true`\n * check(5); // `false`\n * check(6); // `true`\n * ```\n */\nexport function compile(parsed) {\n    const a = parsed[0];\n    // Subtract 1 from `b`, to convert from one- to zero-indexed.\n    const b = parsed[1] - 1;\n    /*\n     * When `b <= 0`, `a * n` won't be lead to any matches for `a < 0`.\n     * Besides, the specification states that no elements are\n     * matched when `a` and `b` are 0.\n     *\n     * `b < 0` here as we subtracted 1 from `b` above.\n     */\n    if (b < 0 && a <= 0)\n        return boolbase.falseFunc;\n    // When `a` is in the range -1..1, it matches any element (so only `b` is checked).\n    if (a === -1)\n        return (index) => index <= b;\n    if (a === 0)\n        return (index) => index === b;\n    // When `b <= 0` and `a === 1`, they match any element.\n    if (a === 1)\n        return b < 0 ? boolbase.trueFunc : (index) => index >= b;\n    /*\n     * Otherwise, modulo can be used to check if there is a match.\n     *\n     * Modulo doesn't care about the sign, so let's use `a`s absolute value.\n     */\n    const absA = Math.abs(a);\n    // Get `b mod a`, + a if this is negative.\n    const bMod = ((b % absA) + absA) % absA;\n    return a > 1\n        ? (index) => index >= b && index % absA === bMod\n        : (index) => index <= b && index % absA === bMod;\n}\n/**\n * Returns a function that produces a monotonously increasing sequence of indices.\n *\n * If the sequence has an end, the returned function will return `null` after\n * the last index in the sequence.\n *\n * @param parsed A tuple [a, b], as returned by `parse`.\n * @returns A function that produces a sequence of indices.\n * @example <caption>Always increasing (2n+3)</caption>\n *\n * ```js\n * const gen = nthCheck.generate([2, 3])\n *\n * gen() // `1`\n * gen() // `3`\n * gen() // `5`\n * gen() // `8`\n * gen() // `11`\n * ```\n *\n * @example <caption>With end value (-2n+10)</caption>\n *\n * ```js\n *\n * const gen = nthCheck.generate([-2, 5]);\n *\n * gen() // 0\n * gen() // 2\n * gen() // 4\n * gen() // null\n * ```\n */\nexport function generate(parsed) {\n    const a = parsed[0];\n    // Subtract 1 from `b`, to convert from one- to zero-indexed.\n    let b = parsed[1] - 1;\n    let n = 0;\n    // Make sure to always return an increasing sequence\n    if (a < 0) {\n        const aPos = -a;\n        // Get `b mod a`\n        const minValue = ((b % aPos) + aPos) % aPos;\n        return () => {\n            const val = minValue + aPos * n++;\n            return val > b ? null : val;\n        };\n    }\n    if (a === 0)\n        return b < 0\n            ? // There are no result — always return `null`\n                () => null\n            : // Return `b` exactly once\n                () => (n++ === 0 ? b : null);\n    if (b < 0) {\n        b += a * Math.ceil(-b / a);\n    }\n    return () => a * n++ + b;\n}\n//# sourceMappingURL=compile.js.map","import { parse } from \"./parse.js\";\nimport { compile, generate } from \"./compile.js\";\nexport { parse, compile, generate };\n/**\n * Parses and compiles a formula to a highly optimized function.\n * Combination of {@link parse} and {@link compile}.\n *\n * If the formula doesn't match any elements,\n * it returns [`boolbase`](https://github.com/fb55/boolbase)'s `falseFunc`.\n * Otherwise, a function accepting an _index_ is returned, which returns\n * whether or not the passed _index_ matches the formula.\n *\n * Note: The nth-rule starts counting at `1`, the returned function at `0`.\n *\n * @param formula The formula to compile.\n * @example\n * const check = nthCheck(\"2n+3\");\n *\n * check(0); // `false`\n * check(1); // `false`\n * check(2); // `true`\n * check(3); // `false`\n * check(4); // `true`\n * check(5); // `false`\n * check(6); // `true`\n */\nexport default function nthCheck(formula) {\n    return compile(parse(formula));\n}\n/**\n * Parses and compiles a formula to a generator that produces a sequence of indices.\n * Combination of {@link parse} and {@link generate}.\n *\n * @param formula The formula to compile.\n * @returns A function that produces a sequence of indices.\n * @example <caption>Always increasing</caption>\n *\n * ```js\n * const gen = nthCheck.sequence('2n+3')\n *\n * gen() // `1`\n * gen() // `3`\n * gen() // `5`\n * gen() // `8`\n * gen() // `11`\n * ```\n *\n * @example <caption>With end value</caption>\n *\n * ```js\n *\n * const gen = nthCheck.sequence('-2n+5');\n *\n * gen() // 0\n * gen() // 2\n * gen() // 4\n * gen() // null\n * ```\n */\nexport function sequence(formula) {\n    return generate(parse(formula));\n}\n//# sourceMappingURL=index.js.map","import getNCheck from \"nth-check\";\nimport boolbase from \"boolbase\";\nfunction getChildFunc(next, adapter) {\n    return (elem) => {\n        const parent = adapter.getParent(elem);\n        return parent != null && adapter.isTag(parent) && next(elem);\n    };\n}\nexport const filters = {\n    contains(next, text, { adapter }) {\n        return function contains(elem) {\n            return next(elem) && adapter.getText(elem).includes(text);\n        };\n    },\n    icontains(next, text, { adapter }) {\n        const itext = text.toLowerCase();\n        return function icontains(elem) {\n            return (next(elem) &&\n                adapter.getText(elem).toLowerCase().includes(itext));\n        };\n    },\n    // Location specific methods\n    \"nth-child\"(next, rule, { adapter, equals }) {\n        const func = getNCheck(rule);\n        if (func === boolbase.falseFunc)\n            return boolbase.falseFunc;\n        if (func === boolbase.trueFunc)\n            return getChildFunc(next, adapter);\n        return function nthChild(elem) {\n            const siblings = adapter.getSiblings(elem);\n            let pos = 0;\n            for (let i = 0; i < siblings.length; i++) {\n                if (equals(elem, siblings[i]))\n                    break;\n                if (adapter.isTag(siblings[i])) {\n                    pos++;\n                }\n            }\n            return func(pos) && next(elem);\n        };\n    },\n    \"nth-last-child\"(next, rule, { adapter, equals }) {\n        const func = getNCheck(rule);\n        if (func === boolbase.falseFunc)\n            return boolbase.falseFunc;\n        if (func === boolbase.trueFunc)\n            return getChildFunc(next, adapter);\n        return function nthLastChild(elem) {\n            const siblings = adapter.getSiblings(elem);\n            let pos = 0;\n            for (let i = siblings.length - 1; i >= 0; i--) {\n                if (equals(elem, siblings[i]))\n                    break;\n                if (adapter.isTag(siblings[i])) {\n                    pos++;\n                }\n            }\n            return func(pos) && next(elem);\n        };\n    },\n    \"nth-of-type\"(next, rule, { adapter, equals }) {\n        const func = getNCheck(rule);\n        if (func === boolbase.falseFunc)\n            return boolbase.falseFunc;\n        if (func === boolbase.trueFunc)\n            return getChildFunc(next, adapter);\n        return function nthOfType(elem) {\n            const siblings = adapter.getSiblings(elem);\n            let pos = 0;\n            for (let i = 0; i < siblings.length; i++) {\n                const currentSibling = siblings[i];\n                if (equals(elem, currentSibling))\n                    break;\n                if (adapter.isTag(currentSibling) &&\n                    adapter.getName(currentSibling) === adapter.getName(elem)) {\n                    pos++;\n                }\n            }\n            return func(pos) && next(elem);\n        };\n    },\n    \"nth-last-of-type\"(next, rule, { adapter, equals }) {\n        const func = getNCheck(rule);\n        if (func === boolbase.falseFunc)\n            return boolbase.falseFunc;\n        if (func === boolbase.trueFunc)\n            return getChildFunc(next, adapter);\n        return function nthLastOfType(elem) {\n            const siblings = adapter.getSiblings(elem);\n            let pos = 0;\n            for (let i = siblings.length - 1; i >= 0; i--) {\n                const currentSibling = siblings[i];\n                if (equals(elem, currentSibling))\n                    break;\n                if (adapter.isTag(currentSibling) &&\n                    adapter.getName(currentSibling) === adapter.getName(elem)) {\n                    pos++;\n                }\n            }\n            return func(pos) && next(elem);\n        };\n    },\n    // TODO determine the actual root element\n    root(next, _rule, { adapter }) {\n        return (elem) => {\n            const parent = adapter.getParent(elem);\n            return (parent == null || !adapter.isTag(parent)) && next(elem);\n        };\n    },\n    scope(next, rule, options, context) {\n        const { equals } = options;\n        if (!context || context.length === 0) {\n            // Equivalent to :root\n            return filters[\"root\"](next, rule, options);\n        }\n        if (context.length === 1) {\n            // NOTE: can't be unpacked, as :has uses this for side-effects\n            return (elem) => equals(context[0], elem) && next(elem);\n        }\n        return (elem) => context.includes(elem) && next(elem);\n    },\n    hover: dynamicStatePseudo(\"isHovered\"),\n    visited: dynamicStatePseudo(\"isVisited\"),\n    active: dynamicStatePseudo(\"isActive\"),\n};\n/**\n * Dynamic state pseudos. These depend on optional Adapter methods.\n *\n * @param name The name of the adapter method to call.\n * @returns Pseudo for the `filters` object.\n */\nfunction dynamicStatePseudo(name) {\n    return function dynamicPseudo(next, _rule, { adapter }) {\n        const func = adapter[name];\n        if (typeof func !== \"function\") {\n            return boolbase.falseFunc;\n        }\n        return function active(elem) {\n            return func(elem) && next(elem);\n        };\n    };\n}\n//# sourceMappingURL=filters.js.map","// While filters are precompiled, pseudos get called when they are needed\nexport const pseudos = {\n    empty(elem, { adapter }) {\n        return !adapter.getChildren(elem).some((elem) => \n        // FIXME: `getText` call is potentially expensive.\n        adapter.isTag(elem) || adapter.getText(elem) !== \"\");\n    },\n    \"first-child\"(elem, { adapter, equals }) {\n        if (adapter.prevElementSibling) {\n            return adapter.prevElementSibling(elem) == null;\n        }\n        const firstChild = adapter\n            .getSiblings(elem)\n            .find((elem) => adapter.isTag(elem));\n        return firstChild != null && equals(elem, firstChild);\n    },\n    \"last-child\"(elem, { adapter, equals }) {\n        const siblings = adapter.getSiblings(elem);\n        for (let i = siblings.length - 1; i >= 0; i--) {\n            if (equals(elem, siblings[i]))\n                return true;\n            if (adapter.isTag(siblings[i]))\n                break;\n        }\n        return false;\n    },\n    \"first-of-type\"(elem, { adapter, equals }) {\n        const siblings = adapter.getSiblings(elem);\n        const elemName = adapter.getName(elem);\n        for (let i = 0; i < siblings.length; i++) {\n            const currentSibling = siblings[i];\n            if (equals(elem, currentSibling))\n                return true;\n            if (adapter.isTag(currentSibling) &&\n                adapter.getName(currentSibling) === elemName) {\n                break;\n            }\n        }\n        return false;\n    },\n    \"last-of-type\"(elem, { adapter, equals }) {\n        const siblings = adapter.getSiblings(elem);\n        const elemName = adapter.getName(elem);\n        for (let i = siblings.length - 1; i >= 0; i--) {\n            const currentSibling = siblings[i];\n            if (equals(elem, currentSibling))\n                return true;\n            if (adapter.isTag(currentSibling) &&\n                adapter.getName(currentSibling) === elemName) {\n                break;\n            }\n        }\n        return false;\n    },\n    \"only-of-type\"(elem, { adapter, equals }) {\n        const elemName = adapter.getName(elem);\n        return adapter\n            .getSiblings(elem)\n            .every((sibling) => equals(elem, sibling) ||\n            !adapter.isTag(sibling) ||\n            adapter.getName(sibling) !== elemName);\n    },\n    \"only-child\"(elem, { adapter, equals }) {\n        return adapter\n            .getSiblings(elem)\n            .every((sibling) => equals(elem, sibling) || !adapter.isTag(sibling));\n    },\n};\nexport function verifyPseudoArgs(func, name, subselect, argIndex) {\n    if (subselect === null) {\n        if (func.length > argIndex) {\n            throw new Error(`Pseudo-class :${name} requires an argument`);\n        }\n    }\n    else if (func.length === argIndex) {\n        throw new Error(`Pseudo-class :${name} doesn't have any arguments`);\n    }\n}\n//# sourceMappingURL=pseudos.js.map","/**\n * Aliases are pseudos that are expressed as selectors.\n */\nexport const aliases = {\n    // Links\n    \"any-link\": \":is(a, area, link)[href]\",\n    link: \":any-link:not(:visited)\",\n    // Forms\n    // https://html.spec.whatwg.org/multipage/scripting.html#disabled-elements\n    disabled: `:is(\n        :is(button, input, select, textarea, optgroup, option)[disabled],\n        optgroup[disabled] > option,\n        fieldset[disabled]:not(fieldset[disabled] legend:first-of-type *)\n    )`,\n    enabled: \":not(:disabled)\",\n    checked: \":is(:is(input[type=radio], input[type=checkbox])[checked], option:selected)\",\n    required: \":is(input, select, textarea)[required]\",\n    optional: \":is(input, select, textarea):not([required])\",\n    // JQuery extensions\n    // https://html.spec.whatwg.org/multipage/form-elements.html#concept-option-selectedness\n    selected: \"option:is([selected], select:not([multiple]):not(:has(> option[selected])) > :first-of-type)\",\n    checkbox: \"[type=checkbox]\",\n    file: \"[type=file]\",\n    password: \"[type=password]\",\n    radio: \"[type=radio]\",\n    reset: \"[type=reset]\",\n    image: \"[type=image]\",\n    submit: \"[type=submit]\",\n    parent: \":not(:empty)\",\n    header: \":is(h1, h2, h3, h4, h5, h6)\",\n    button: \":is(button, input[type=button])\",\n    input: \":is(input, textarea, select, button)\",\n    text: \"input:is(:not([type!='']), [type=text])\",\n};\n//# sourceMappingURL=aliases.js.map","import boolbase from \"boolbase\";\nimport { isTraversal } from \"../sort.js\";\n/** Used as a placeholder for :has. Will be replaced with the actual element. */\nexport const PLACEHOLDER_ELEMENT = {};\nexport function ensureIsTag(next, adapter) {\n    if (next === boolbase.falseFunc)\n        return boolbase.falseFunc;\n    return (elem) => adapter.isTag(elem) && next(elem);\n}\nexport function getNextSiblings(elem, adapter) {\n    const siblings = adapter.getSiblings(elem);\n    if (siblings.length <= 1)\n        return [];\n    const elemIndex = siblings.indexOf(elem);\n    if (elemIndex < 0 || elemIndex === siblings.length - 1)\n        return [];\n    return siblings.slice(elemIndex + 1).filter(adapter.isTag);\n}\nfunction copyOptions(options) {\n    // Not copied: context, rootFunc\n    return {\n        xmlMode: !!options.xmlMode,\n        lowerCaseAttributeNames: !!options.lowerCaseAttributeNames,\n        lowerCaseTags: !!options.lowerCaseTags,\n        quirksMode: !!options.quirksMode,\n        cacheResults: !!options.cacheResults,\n        pseudos: options.pseudos,\n        adapter: options.adapter,\n        equals: options.equals,\n    };\n}\nconst is = (next, token, options, context, compileToken) => {\n    const func = compileToken(token, copyOptions(options), context);\n    return func === boolbase.trueFunc\n        ? next\n        : func === boolbase.falseFunc\n            ? boolbase.falseFunc\n            : (elem) => func(elem) && next(elem);\n};\n/*\n * :not, :has, :is, :matches and :where have to compile selectors\n * doing this in src/pseudos.ts would lead to circular dependencies,\n * so we add them here\n */\nexport const subselects = {\n    is,\n    /**\n     * `:matches` and `:where` are aliases for `:is`.\n     */\n    matches: is,\n    where: is,\n    not(next, token, options, context, compileToken) {\n        const func = compileToken(token, copyOptions(options), context);\n        return func === boolbase.falseFunc\n            ? next\n            : func === boolbase.trueFunc\n                ? boolbase.falseFunc\n                : (elem) => !func(elem) && next(elem);\n    },\n    has(next, subselect, options, _context, compileToken) {\n        const { adapter } = options;\n        const opts = copyOptions(options);\n        opts.relativeSelector = true;\n        const context = subselect.some((s) => s.some(isTraversal))\n            ? // Used as a placeholder. Will be replaced with the actual element.\n                [PLACEHOLDER_ELEMENT]\n            : undefined;\n        const compiled = compileToken(subselect, opts, context);\n        if (compiled === boolbase.falseFunc)\n            return boolbase.falseFunc;\n        const hasElement = ensureIsTag(compiled, adapter);\n        // If `compiled` is `trueFunc`, we can skip this.\n        if (context && compiled !== boolbase.trueFunc) {\n            /*\n             * `shouldTestNextSiblings` will only be true if the query starts with\n             * a traversal (sibling or adjacent). That means we will always have a context.\n             */\n            const { shouldTestNextSiblings = false } = compiled;\n            return (elem) => {\n                if (!next(elem))\n                    return false;\n                context[0] = elem;\n                const childs = adapter.getChildren(elem);\n                const nextElements = shouldTestNextSiblings\n                    ? [...childs, ...getNextSiblings(elem, adapter)]\n                    : childs;\n                return adapter.existsOne(hasElement, nextElements);\n            };\n        }\n        return (elem) => next(elem) &&\n            adapter.existsOne(hasElement, adapter.getChildren(elem));\n    },\n};\n//# sourceMappingURL=subselects.js.map","import { parse } from \"css-what\";\nimport { filters } from \"./filters.js\";\nimport { pseudos, verifyPseudoArgs } from \"./pseudos.js\";\nimport { aliases } from \"./aliases.js\";\nimport { subselects } from \"./subselects.js\";\nexport { filters, pseudos, aliases };\nexport function compilePseudoSelector(next, selector, options, context, compileToken) {\n    var _a;\n    const { name, data } = selector;\n    if (Array.isArray(data)) {\n        if (!(name in subselects)) {\n            throw new Error(`Unknown pseudo-class :${name}(${data})`);\n        }\n        return subselects[name](next, data, options, context, compileToken);\n    }\n    const userPseudo = (_a = options.pseudos) === null || _a === void 0 ? void 0 : _a[name];\n    const stringPseudo = typeof userPseudo === \"string\" ? userPseudo : aliases[name];\n    if (typeof stringPseudo === \"string\") {\n        if (data != null) {\n            throw new Error(`Pseudo ${name} doesn't have any arguments`);\n        }\n        // The alias has to be parsed here, to make sure options are respected.\n        const alias = parse(stringPseudo);\n        return subselects[\"is\"](next, alias, options, context, compileToken);\n    }\n    if (typeof userPseudo === \"function\") {\n        verifyPseudoArgs(userPseudo, name, data, 1);\n        return (elem) => userPseudo(elem, data) && next(elem);\n    }\n    if (name in filters) {\n        return filters[name](next, data, options, context);\n    }\n    if (name in pseudos) {\n        const pseudo = pseudos[name];\n        verifyPseudoArgs(pseudo, name, data, 2);\n        return (elem) => pseudo(elem, options, data) && next(elem);\n    }\n    throw new Error(`Unknown pseudo-class :${name}`);\n}\n//# sourceMappingURL=index.js.map","import { attributeRules } from \"./attributes.js\";\nimport { compilePseudoSelector } from \"./pseudo-selectors/index.js\";\nimport { SelectorType } from \"css-what\";\nfunction getElementParent(node, adapter) {\n    const parent = adapter.getParent(node);\n    if (parent && adapter.isTag(parent)) {\n        return parent;\n    }\n    return null;\n}\n/*\n * All available rules\n */\nexport function compileGeneralSelector(next, selector, options, context, compileToken) {\n    const { adapter, equals } = options;\n    switch (selector.type) {\n        case SelectorType.PseudoElement: {\n            throw new Error(\"Pseudo-elements are not supported by css-select\");\n        }\n        case SelectorType.ColumnCombinator: {\n            throw new Error(\"Column combinators are not yet supported by css-select\");\n        }\n        case SelectorType.Attribute: {\n            if (selector.namespace != null) {\n                throw new Error(\"Namespaced attributes are not yet supported by css-select\");\n            }\n            if (!options.xmlMode || options.lowerCaseAttributeNames) {\n                selector.name = selector.name.toLowerCase();\n            }\n            return attributeRules[selector.action](next, selector, options);\n        }\n        case SelectorType.Pseudo: {\n            return compilePseudoSelector(next, selector, options, context, compileToken);\n        }\n        // Tags\n        case SelectorType.Tag: {\n            if (selector.namespace != null) {\n                throw new Error(\"Namespaced tag names are not yet supported by css-select\");\n            }\n            let { name } = selector;\n            if (!options.xmlMode || options.lowerCaseTags) {\n                name = name.toLowerCase();\n            }\n            return function tag(elem) {\n                return adapter.getName(elem) === name && next(elem);\n            };\n        }\n        // Traversal\n        case SelectorType.Descendant: {\n            if (options.cacheResults === false ||\n                typeof WeakSet === \"undefined\") {\n                return function descendant(elem) {\n                    let current = elem;\n                    while ((current = getElementParent(current, adapter))) {\n                        if (next(current)) {\n                            return true;\n                        }\n                    }\n                    return false;\n                };\n            }\n            // @ts-expect-error `ElementNode` is not extending object\n            const isFalseCache = new WeakSet();\n            return function cachedDescendant(elem) {\n                let current = elem;\n                while ((current = getElementParent(current, adapter))) {\n                    if (!isFalseCache.has(current)) {\n                        if (adapter.isTag(current) && next(current)) {\n                            return true;\n                        }\n                        isFalseCache.add(current);\n                    }\n                }\n                return false;\n            };\n        }\n        case \"_flexibleDescendant\": {\n            // Include element itself, only used while querying an array\n            return function flexibleDescendant(elem) {\n                let current = elem;\n                do {\n                    if (next(current))\n                        return true;\n                } while ((current = getElementParent(current, adapter)));\n                return false;\n            };\n        }\n        case SelectorType.Parent: {\n            return function parent(elem) {\n                return adapter\n                    .getChildren(elem)\n                    .some((elem) => adapter.isTag(elem) && next(elem));\n            };\n        }\n        case SelectorType.Child: {\n            return function child(elem) {\n                const parent = adapter.getParent(elem);\n                return parent != null && adapter.isTag(parent) && next(parent);\n            };\n        }\n        case SelectorType.Sibling: {\n            return function sibling(elem) {\n                const siblings = adapter.getSiblings(elem);\n                for (let i = 0; i < siblings.length; i++) {\n                    const currentSibling = siblings[i];\n                    if (equals(elem, currentSibling))\n                        break;\n                    if (adapter.isTag(currentSibling) && next(currentSibling)) {\n                        return true;\n                    }\n                }\n                return false;\n            };\n        }\n        case SelectorType.Adjacent: {\n            if (adapter.prevElementSibling) {\n                return function adjacent(elem) {\n                    const previous = adapter.prevElementSibling(elem);\n                    return previous != null && next(previous);\n                };\n            }\n            return function adjacent(elem) {\n                const siblings = adapter.getSiblings(elem);\n                let lastElement;\n                for (let i = 0; i < siblings.length; i++) {\n                    const currentSibling = siblings[i];\n                    if (equals(elem, currentSibling))\n                        break;\n                    if (adapter.isTag(currentSibling)) {\n                        lastElement = currentSibling;\n                    }\n                }\n                return !!lastElement && next(lastElement);\n            };\n        }\n        case SelectorType.Universal: {\n            if (selector.namespace != null && selector.namespace !== \"*\") {\n                throw new Error(\"Namespaced universal selectors are not yet supported by css-select\");\n            }\n            return next;\n        }\n    }\n}\n//# sourceMappingURL=general.js.map","import { parse, SelectorType } from \"css-what\";\nimport boolbase from \"boolbase\";\nimport sortRules, { isTraversal } from \"./sort.js\";\nimport { compileGeneralSelector } from \"./general.js\";\nimport { ensureIsTag, PLACEHOLDER_ELEMENT, } from \"./pseudo-selectors/subselects.js\";\n/**\n * Compiles a selector to an executable function.\n *\n * @param selector Selector to compile.\n * @param options Compilation options.\n * @param context Optional context for the selector.\n */\nexport function compile(selector, options, context) {\n    const next = compileUnsafe(selector, options, context);\n    return ensureIsTag(next, options.adapter);\n}\nexport function compileUnsafe(selector, options, context) {\n    const token = typeof selector === \"string\" ? parse(selector) : selector;\n    return compileToken(token, options, context);\n}\nfunction includesScopePseudo(t) {\n    return (t.type === SelectorType.Pseudo &&\n        (t.name === \"scope\" ||\n            (Array.isArray(t.data) &&\n                t.data.some((data) => data.some(includesScopePseudo)))));\n}\nconst DESCENDANT_TOKEN = { type: SelectorType.Descendant };\nconst FLEXIBLE_DESCENDANT_TOKEN = {\n    type: \"_flexibleDescendant\",\n};\nconst SCOPE_TOKEN = {\n    type: SelectorType.Pseudo,\n    name: \"scope\",\n    data: null,\n};\n/*\n * CSS 4 Spec (Draft): 3.4.1. Absolutizing a Relative Selector\n * http://www.w3.org/TR/selectors4/#absolutizing\n */\nfunction absolutize(token, { adapter }, context) {\n    // TODO Use better check if the context is a document\n    const hasContext = !!(context === null || context === void 0 ? void 0 : context.every((e) => {\n        const parent = adapter.isTag(e) && adapter.getParent(e);\n        return e === PLACEHOLDER_ELEMENT || (parent && adapter.isTag(parent));\n    }));\n    for (const t of token) {\n        if (t.length > 0 &&\n            isTraversal(t[0]) &&\n            t[0].type !== SelectorType.Descendant) {\n            // Don't continue in else branch\n        }\n        else if (hasContext && !t.some(includesScopePseudo)) {\n            t.unshift(DESCENDANT_TOKEN);\n        }\n        else {\n            continue;\n        }\n        t.unshift(SCOPE_TOKEN);\n    }\n}\nexport function compileToken(token, options, context) {\n    var _a;\n    token.forEach(sortRules);\n    context = (_a = options.context) !== null && _a !== void 0 ? _a : context;\n    const isArrayContext = Array.isArray(context);\n    const finalContext = context && (Array.isArray(context) ? context : [context]);\n    // Check if the selector is relative\n    if (options.relativeSelector !== false) {\n        absolutize(token, options, finalContext);\n    }\n    else if (token.some((t) => t.length > 0 && isTraversal(t[0]))) {\n        throw new Error(\"Relative selectors are not allowed when the `relativeSelector` option is disabled\");\n    }\n    let shouldTestNextSiblings = false;\n    const query = token\n        .map((rules) => {\n        if (rules.length >= 2) {\n            const [first, second] = rules;\n            if (first.type !== SelectorType.Pseudo ||\n                first.name !== \"scope\") {\n                // Ignore\n            }\n            else if (isArrayContext &&\n                second.type === SelectorType.Descendant) {\n                rules[1] = FLEXIBLE_DESCENDANT_TOKEN;\n            }\n            else if (second.type === SelectorType.Adjacent ||\n                second.type === SelectorType.Sibling) {\n                shouldTestNextSiblings = true;\n            }\n        }\n        return compileRules(rules, options, finalContext);\n    })\n        .reduce(reduceRules, boolbase.falseFunc);\n    query.shouldTestNextSiblings = shouldTestNextSiblings;\n    return query;\n}\nfunction compileRules(rules, options, context) {\n    var _a;\n    return rules.reduce((previous, rule) => previous === boolbase.falseFunc\n        ? boolbase.falseFunc\n        : compileGeneralSelector(previous, rule, options, context, compileToken), (_a = options.rootFunc) !== null && _a !== void 0 ? _a : boolbase.trueFunc);\n}\nfunction reduceRules(a, b) {\n    if (b === boolbase.falseFunc || a === boolbase.trueFunc) {\n        return a;\n    }\n    if (a === boolbase.falseFunc || b === boolbase.trueFunc) {\n        return b;\n    }\n    return function combine(elem) {\n        return a(elem) || b(elem);\n    };\n}\n//# sourceMappingURL=compile.js.map","import * as DomUtils from \"domutils\";\nimport boolbase from \"boolbase\";\nimport { compile as compileRaw, compileUnsafe, compileToken, } from \"./compile.js\";\nimport { getNextSiblings } from \"./pseudo-selectors/subselects.js\";\nconst defaultEquals = (a, b) => a === b;\nconst defaultOptions = {\n    adapter: DomUtils,\n    equals: defaultEquals,\n};\nfunction convertOptionFormats(options) {\n    var _a, _b, _c, _d;\n    /*\n     * We force one format of options to the other one.\n     */\n    // @ts-expect-error Default options may have incompatible `Node` / `ElementNode`.\n    const opts = options !== null && options !== void 0 ? options : defaultOptions;\n    // @ts-expect-error Same as above.\n    (_a = opts.adapter) !== null && _a !== void 0 ? _a : (opts.adapter = DomUtils);\n    // @ts-expect-error `equals` does not exist on `Options`\n    (_b = opts.equals) !== null && _b !== void 0 ? _b : (opts.equals = (_d = (_c = opts.adapter) === null || _c === void 0 ? void 0 : _c.equals) !== null && _d !== void 0 ? _d : defaultEquals);\n    return opts;\n}\nfunction wrapCompile(func) {\n    return function addAdapter(selector, options, context) {\n        const opts = convertOptionFormats(options);\n        return func(selector, opts, context);\n    };\n}\n/**\n * Compiles the query, returns a function.\n */\nexport const compile = wrapCompile(compileRaw);\nexport const _compileUnsafe = wrapCompile(compileUnsafe);\nexport const _compileToken = wrapCompile(compileToken);\nfunction getSelectorFunc(searchFunc) {\n    return function select(query, elements, options) {\n        const opts = convertOptionFormats(options);\n        if (typeof query !== \"function\") {\n            query = compileUnsafe(query, opts, elements);\n        }\n        const filteredElements = prepareContext(elements, opts.adapter, query.shouldTestNextSiblings);\n        return searchFunc(query, filteredElements, opts);\n    };\n}\nexport function prepareContext(elems, adapter, shouldTestNextSiblings = false) {\n    /*\n     * Add siblings if the query requires them.\n     * See https://github.com/fb55/css-select/pull/43#issuecomment-225414692\n     */\n    if (shouldTestNextSiblings) {\n        elems = appendNextSiblings(elems, adapter);\n    }\n    return Array.isArray(elems)\n        ? adapter.removeSubsets(elems)\n        : adapter.getChildren(elems);\n}\nfunction appendNextSiblings(elem, adapter) {\n    // Order matters because jQuery seems to check the children before the siblings\n    const elems = Array.isArray(elem) ? elem.slice(0) : [elem];\n    const elemsLength = elems.length;\n    for (let i = 0; i < elemsLength; i++) {\n        const nextSiblings = getNextSiblings(elems[i], adapter);\n        elems.push(...nextSiblings);\n    }\n    return elems;\n}\n/**\n * @template Node The generic Node type for the DOM adapter being used.\n * @template ElementNode The Node type for elements for the DOM adapter being used.\n * @param elems Elements to query. If it is an element, its children will be queried..\n * @param query can be either a CSS selector string or a compiled query function.\n * @param [options] options for querying the document.\n * @see compile for supported selector queries.\n * @returns All matching elements.\n *\n */\nexport const selectAll = getSelectorFunc((query, elems, options) => query === boolbase.falseFunc || !elems || elems.length === 0\n    ? []\n    : options.adapter.findAll(query, elems));\n/**\n * @template Node The generic Node type for the DOM adapter being used.\n * @template ElementNode The Node type for elements for the DOM adapter being used.\n * @param elems Elements to query. If it is an element, its children will be queried..\n * @param query can be either a CSS selector string or a compiled query function.\n * @param [options] options for querying the document.\n * @see compile for supported selector queries.\n * @returns the first match, or null if there was no match.\n */\nexport const selectOne = getSelectorFunc((query, elems, options) => query === boolbase.falseFunc || !elems || elems.length === 0\n    ? null\n    : options.adapter.findOne(query, elems));\n/**\n * Tests whether or not an element is matched by query.\n *\n * @template Node The generic Node type for the DOM adapter being used.\n * @template ElementNode The Node type for elements for the DOM adapter being used.\n * @param elem The element to test if it matches the query.\n * @param query can be either a CSS selector string or a compiled query function.\n * @param [options] options for querying the document.\n * @see compile for supported selector queries.\n * @returns\n */\nexport function is(elem, query, options) {\n    const opts = convertOptionFormats(options);\n    return (typeof query === \"function\" ? query : compileRaw(query, opts))(elem);\n}\n/**\n * Alias for selectAll(query, elems, options).\n * @see [compile] for supported selector queries.\n */\nexport default selectAll;\n// Export filters, pseudos and aliases to allow users to supply their own.\n/** @deprecated Use the `pseudos` option instead. */\nexport { filters, pseudos, aliases } from \"./pseudo-selectors/index.js\";\n//# sourceMappingURL=index.js.map","export const filterNames = new Set([\n    \"first\",\n    \"last\",\n    \"eq\",\n    \"gt\",\n    \"nth\",\n    \"lt\",\n    \"even\",\n    \"odd\",\n]);\nexport function isFilter(s) {\n    if (s.type !== \"pseudo\")\n        return false;\n    if (filterNames.has(s.name))\n        return true;\n    if (s.name === \"not\" && Array.isArray(s.data)) {\n        // Only consider `:not` with embedded filters\n        return s.data.some((s) => s.some(isFilter));\n    }\n    return false;\n}\nexport function getLimit(filter, data, partLimit) {\n    const num = data != null ? parseInt(data, 10) : NaN;\n    switch (filter) {\n        case \"first\":\n            return 1;\n        case \"nth\":\n        case \"eq\":\n            return isFinite(num) ? (num >= 0 ? num + 1 : Infinity) : 0;\n        case \"lt\":\n            return isFinite(num)\n                ? num >= 0\n                    ? Math.min(num, partLimit)\n                    : Infinity\n                : 0;\n        case \"gt\":\n            return isFinite(num) ? Infinity : 0;\n        case \"odd\":\n            return 2 * partLimit;\n        case \"even\":\n            return 2 * partLimit - 1;\n        case \"last\":\n        case \"not\":\n            return Infinity;\n    }\n}\n//# sourceMappingURL=positionals.js.map","import { isFilter } from \"./positionals.js\";\nexport function getDocumentRoot(node) {\n    while (node.parent)\n        node = node.parent;\n    return node;\n}\nexport function groupSelectors(selectors) {\n    const filteredSelectors = [];\n    const plainSelectors = [];\n    for (const selector of selectors) {\n        if (selector.some(isFilter)) {\n            filteredSelectors.push(selector);\n        }\n        else {\n            plainSelectors.push(selector);\n        }\n    }\n    return [plainSelectors, filteredSelectors];\n}\n//# sourceMappingURL=helpers.js.map","import { parse, SelectorType, isTraversal } from \"css-what\";\nimport { _compileToken as compileToken, prepareContext, } from \"css-select\";\nimport * as DomUtils from \"domutils\";\nimport * as boolbase from \"boolbase\";\nimport { getDocumentRoot, groupSelectors } from \"./helpers.js\";\nimport { isFilter, getLimit, } from \"./positionals.js\";\n// Re-export pseudo extension points\nexport { filters, pseudos, aliases } from \"css-select\";\nconst UNIVERSAL_SELECTOR = {\n    type: SelectorType.Universal,\n    namespace: null,\n};\nconst SCOPE_PSEUDO = {\n    type: SelectorType.Pseudo,\n    name: \"scope\",\n    data: null,\n};\nexport function is(element, selector, options = {}) {\n    return some([element], selector, options);\n}\nexport function some(elements, selector, options = {}) {\n    if (typeof selector === \"function\")\n        return elements.some(selector);\n    const [plain, filtered] = groupSelectors(parse(selector));\n    return ((plain.length > 0 && elements.some(compileToken(plain, options))) ||\n        filtered.some((sel) => filterBySelector(sel, elements, options).length > 0));\n}\nfunction filterByPosition(filter, elems, data, options) {\n    const num = typeof data === \"string\" ? parseInt(data, 10) : NaN;\n    switch (filter) {\n        case \"first\":\n        case \"lt\":\n            // Already done in `getLimit`\n            return elems;\n        case \"last\":\n            return elems.length > 0 ? [elems[elems.length - 1]] : elems;\n        case \"nth\":\n        case \"eq\":\n            return isFinite(num) && Math.abs(num) < elems.length\n                ? [num < 0 ? elems[elems.length + num] : elems[num]]\n                : [];\n        case \"gt\":\n            return isFinite(num) ? elems.slice(num + 1) : [];\n        case \"even\":\n            return elems.filter((_, i) => i % 2 === 0);\n        case \"odd\":\n            return elems.filter((_, i) => i % 2 === 1);\n        case \"not\": {\n            const filtered = new Set(filterParsed(data, elems, options));\n            return elems.filter((e) => !filtered.has(e));\n        }\n    }\n}\nexport function filter(selector, elements, options = {}) {\n    return filterParsed(parse(selector), elements, options);\n}\n/**\n * Filter a set of elements by a selector.\n *\n * Will return elements in the original order.\n *\n * @param selector Selector to filter by.\n * @param elements Elements to filter.\n * @param options Options for selector.\n */\nfunction filterParsed(selector, elements, options) {\n    if (elements.length === 0)\n        return [];\n    const [plainSelectors, filteredSelectors] = groupSelectors(selector);\n    let found;\n    if (plainSelectors.length) {\n        const filtered = filterElements(elements, plainSelectors, options);\n        // If there are no filters, just return\n        if (filteredSelectors.length === 0) {\n            return filtered;\n        }\n        // Otherwise, we have to do some filtering\n        if (filtered.length) {\n            found = new Set(filtered);\n        }\n    }\n    for (let i = 0; i < filteredSelectors.length && (found === null || found === void 0 ? void 0 : found.size) !== elements.length; i++) {\n        const filteredSelector = filteredSelectors[i];\n        const missing = found\n            ? elements.filter((e) => DomUtils.isTag(e) && !found.has(e))\n            : elements;\n        if (missing.length === 0)\n            break;\n        const filtered = filterBySelector(filteredSelector, elements, options);\n        if (filtered.length) {\n            if (!found) {\n                /*\n                 * If we haven't found anything before the last selector,\n                 * just return what we found now.\n                 */\n                if (i === filteredSelectors.length - 1) {\n                    return filtered;\n                }\n                found = new Set(filtered);\n            }\n            else {\n                filtered.forEach((el) => found.add(el));\n            }\n        }\n    }\n    return typeof found !== \"undefined\"\n        ? (found.size === elements.length\n            ? elements\n            : // Filter elements to preserve order\n                elements.filter((el) => found.has(el)))\n        : [];\n}\nfunction filterBySelector(selector, elements, options) {\n    var _a;\n    if (selector.some(isTraversal)) {\n        /*\n         * Get root node, run selector with the scope\n         * set to all of our nodes.\n         */\n        const root = (_a = options.root) !== null && _a !== void 0 ? _a : getDocumentRoot(elements[0]);\n        const opts = { ...options, context: elements, relativeSelector: false };\n        selector.push(SCOPE_PSEUDO);\n        return findFilterElements(root, selector, opts, true, elements.length);\n    }\n    // Performance optimization: If we don't have to traverse, just filter set.\n    return findFilterElements(elements, selector, options, false, elements.length);\n}\nexport function select(selector, root, options = {}, limit = Infinity) {\n    if (typeof selector === \"function\") {\n        return find(root, selector);\n    }\n    const [plain, filtered] = groupSelectors(parse(selector));\n    const results = filtered.map((sel) => findFilterElements(root, sel, options, true, limit));\n    // Plain selectors can be queried in a single go\n    if (plain.length) {\n        results.push(findElements(root, plain, options, limit));\n    }\n    if (results.length === 0) {\n        return [];\n    }\n    // If there was only a single selector, just return the result\n    if (results.length === 1) {\n        return results[0];\n    }\n    // Sort results, filtering for duplicates\n    return DomUtils.uniqueSort(results.reduce((a, b) => [...a, ...b]));\n}\n/**\n *\n * @param root Element(s) to search from.\n * @param selector Selector to look for.\n * @param options Options for querying.\n * @param queryForSelector Query multiple levels deep for the initial selector, even if it doesn't contain a traversal.\n */\nfunction findFilterElements(root, selector, options, queryForSelector, totalLimit) {\n    const filterIndex = selector.findIndex(isFilter);\n    const sub = selector.slice(0, filterIndex);\n    const filter = selector[filterIndex];\n    // If we are at the end of the selector, we can limit the number of elements to retrieve.\n    const partLimit = selector.length - 1 === filterIndex ? totalLimit : Infinity;\n    /*\n     * Set the number of elements to retrieve.\n     * Eg. for :first, we only have to get a single element.\n     */\n    const limit = getLimit(filter.name, filter.data, partLimit);\n    if (limit === 0)\n        return [];\n    /*\n     * Skip `findElements` call if our selector starts with a positional\n     * pseudo.\n     */\n    const elemsNoLimit = sub.length === 0 && !Array.isArray(root)\n        ? DomUtils.getChildren(root).filter(DomUtils.isTag)\n        : sub.length === 0\n            ? (Array.isArray(root) ? root : [root]).filter(DomUtils.isTag)\n            : queryForSelector || sub.some(isTraversal)\n                ? findElements(root, [sub], options, limit)\n                : filterElements(root, [sub], options);\n    const elems = elemsNoLimit.slice(0, limit);\n    let result = filterByPosition(filter.name, elems, filter.data, options);\n    if (result.length === 0 || selector.length === filterIndex + 1) {\n        return result;\n    }\n    const remainingSelector = selector.slice(filterIndex + 1);\n    const remainingHasTraversal = remainingSelector.some(isTraversal);\n    if (remainingHasTraversal) {\n        if (isTraversal(remainingSelector[0])) {\n            const { type } = remainingSelector[0];\n            if (type === SelectorType.Sibling ||\n                type === SelectorType.Adjacent) {\n                // If we have a sibling traversal, we need to also look at the siblings.\n                result = prepareContext(result, DomUtils, true);\n            }\n            // Avoid a traversal-first selector error.\n            remainingSelector.unshift(UNIVERSAL_SELECTOR);\n        }\n        options = {\n            ...options,\n            // Avoid absolutizing the selector\n            relativeSelector: false,\n            /*\n             * Add a custom root func, to make sure traversals don't match elements\n             * that aren't a part of the considered tree.\n             */\n            rootFunc: (el) => result.includes(el),\n        };\n    }\n    else if (options.rootFunc && options.rootFunc !== boolbase.trueFunc) {\n        options = { ...options, rootFunc: boolbase.trueFunc };\n    }\n    /*\n     * If we have another filter, recursively call `findFilterElements`,\n     * with the `recursive` flag disabled. We only have to look for more\n     * elements when we see a traversal.\n     *\n     * Otherwise,\n     */\n    return remainingSelector.some(isFilter)\n        ? findFilterElements(result, remainingSelector, options, false, totalLimit)\n        : remainingHasTraversal\n            ? // Query existing elements to resolve traversal.\n                findElements(result, [remainingSelector], options, totalLimit)\n            : // If we don't have any more traversals, simply filter elements.\n                filterElements(result, [remainingSelector], options);\n}\nfunction findElements(root, sel, options, limit) {\n    const query = compileToken(sel, options, root);\n    return find(root, query, limit);\n}\nfunction find(root, query, limit = Infinity) {\n    const elems = prepareContext(root, DomUtils, query.shouldTestNextSiblings);\n    return DomUtils.find((node) => DomUtils.isTag(node) && query(node), elems, true, limit);\n}\nfunction filterElements(elements, sel, options) {\n    const els = (Array.isArray(elements) ? elements : [elements]).filter(DomUtils.isTag);\n    if (els.length === 0)\n        return els;\n    const query = compileToken(sel, options);\n    return query === boolbase.trueFunc ? els : els.filter(query);\n}\n//# sourceMappingURL=index.js.map","/**\n * Methods for traversing the DOM structure.\n *\n * @module cheerio/traversing\n */\nimport { isTag, hasChildren, isDocument, } from 'domhandler';\nimport * as select from 'cheerio-select';\nimport { domEach, isCheerio } from '../utils.js';\nimport { contains } from '../static.js';\nimport { getChildren, getSiblings, nextElementSibling, prevElementSibling, uniqueSort, } from 'domutils';\nconst reSiblingSelector = /^\\s*[+~]/;\n/**\n * Get the descendants of each element in the current set of matched elements,\n * filtered by a selector, jQuery object, or element.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('#fruits').find('li').length;\n * //=> 3\n * $('#fruits').find($('.apple')).length;\n * //=> 1\n * ```\n *\n * @param selectorOrHaystack - Element to look for.\n * @returns The found elements.\n * @see {@link https://api.jquery.com/find/}\n */\nexport function find(selectorOrHaystack) {\n    if (!selectorOrHaystack) {\n        return this._make([]);\n    }\n    if (typeof selectorOrHaystack !== 'string') {\n        const haystack = isCheerio(selectorOrHaystack)\n            ? selectorOrHaystack.toArray()\n            : [selectorOrHaystack];\n        const context = this.toArray();\n        return this._make(haystack.filter((elem) => context.some((node) => contains(node, elem))));\n    }\n    return this._findBySelector(selectorOrHaystack, Number.POSITIVE_INFINITY);\n}\n/**\n * Find elements by a specific selector.\n *\n * @private\n * @category Traversing\n * @param selector - Selector to filter by.\n * @param limit - Maximum number of elements to match.\n * @returns The found elements.\n */\nexport function _findBySelector(selector, limit) {\n    var _a;\n    const context = this.toArray();\n    const elems = reSiblingSelector.test(selector)\n        ? context\n        : this.children().toArray();\n    const options = {\n        context,\n        root: (_a = this._root) === null || _a === void 0 ? void 0 : _a[0],\n        // Pass options that are recognized by `cheerio-select`\n        xmlMode: this.options.xmlMode,\n        lowerCaseTags: this.options.lowerCaseTags,\n        lowerCaseAttributeNames: this.options.lowerCaseAttributeNames,\n        pseudos: this.options.pseudos,\n        quirksMode: this.options.quirksMode,\n    };\n    return this._make(select.select(selector, elems, options, limit));\n}\n/**\n * Creates a matcher, using a particular mapping function. Matchers provide a\n * function that finds elements using a generating function, supporting\n * filtering.\n *\n * @private\n * @param matchMap - Mapping function.\n * @returns - Function for wrapping generating functions.\n */\nfunction _getMatcher(matchMap) {\n    return function (fn, ...postFns) {\n        return function (selector) {\n            var _a;\n            let matched = matchMap(fn, this);\n            if (selector) {\n                matched = filterArray(matched, selector, this.options.xmlMode, (_a = this._root) === null || _a === void 0 ? void 0 : _a[0]);\n            }\n            return this._make(\n            // Post processing is only necessary if there is more than one element.\n            this.length > 1 && matched.length > 1\n                ? postFns.reduce((elems, fn) => fn(elems), matched)\n                : matched);\n        };\n    };\n}\n/** Matcher that adds multiple elements for each entry in the input. */\nconst _matcher = _getMatcher((fn, elems) => {\n    let ret = [];\n    for (let i = 0; i < elems.length; i++) {\n        const value = fn(elems[i]);\n        if (value.length > 0)\n            ret = ret.concat(value);\n    }\n    return ret;\n});\n/** Matcher that adds at most one element for each entry in the input. */\nconst _singleMatcher = _getMatcher((fn, elems) => {\n    const ret = [];\n    for (let i = 0; i < elems.length; i++) {\n        const value = fn(elems[i]);\n        if (value !== null) {\n            ret.push(value);\n        }\n    }\n    return ret;\n});\n/**\n * Matcher that supports traversing until a condition is met.\n *\n * @param nextElem - Function that returns the next element.\n * @param postFns - Post processing functions.\n * @returns A function usable for `*Until` methods.\n */\nfunction _matchUntil(nextElem, ...postFns) {\n    // We use a variable here that is used from within the matcher.\n    let matches = null;\n    const innerMatcher = _getMatcher((nextElem, elems) => {\n        const matched = [];\n        domEach(elems, (elem) => {\n            for (let next; (next = nextElem(elem)); elem = next) {\n                // FIXME: `matched` might contain duplicates here and the index is too large.\n                if (matches === null || matches === void 0 ? void 0 : matches(next, matched.length))\n                    break;\n                matched.push(next);\n            }\n        });\n        return matched;\n    })(nextElem, ...postFns);\n    return function (selector, filterSelector) {\n        // Override `matches` variable with the new target.\n        matches =\n            typeof selector === 'string'\n                ? (elem) => select.is(elem, selector, this.options)\n                : selector\n                    ? getFilterFn(selector)\n                    : null;\n        const ret = innerMatcher.call(this, filterSelector);\n        // Set `matches` to `null`, so we don't waste memory.\n        matches = null;\n        return ret;\n    };\n}\nfunction _removeDuplicates(elems) {\n    return elems.length > 1 ? Array.from(new Set(elems)) : elems;\n}\n/**\n * Get the parent of each element in the current set of matched elements,\n * optionally filtered by a selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.pear').parent().attr('id');\n * //=> fruits\n * ```\n *\n * @param selector - If specified filter for parent.\n * @returns The parents.\n * @see {@link https://api.jquery.com/parent/}\n */\nexport const parent = _singleMatcher(({ parent }) => (parent && !isDocument(parent) ? parent : null), _removeDuplicates);\n/**\n * Get a set of parents filtered by `selector` of each element in the current\n * set of match elements.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.orange').parents().length;\n * //=> 2\n * $('.orange').parents('#fruits').length;\n * //=> 1\n * ```\n *\n * @param selector - If specified filter for parents.\n * @returns The parents.\n * @see {@link https://api.jquery.com/parents/}\n */\nexport const parents = _matcher((elem) => {\n    const matched = [];\n    while (elem.parent && !isDocument(elem.parent)) {\n        matched.push(elem.parent);\n        elem = elem.parent;\n    }\n    return matched;\n}, uniqueSort, (elems) => elems.reverse());\n/**\n * Get the ancestors of each element in the current set of matched elements, up\n * to but not including the element matched by the selector, DOM node, or\n * cheerio object.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.orange').parentsUntil('#food').length;\n * //=> 1\n * ```\n *\n * @param selector - Selector for element to stop at.\n * @param filterSelector - Optional filter for parents.\n * @returns The parents.\n * @see {@link https://api.jquery.com/parentsUntil/}\n */\nexport const parentsUntil = _matchUntil(({ parent }) => (parent && !isDocument(parent) ? parent : null), uniqueSort, (elems) => elems.reverse());\n/**\n * For each element in the set, get the first element that matches the selector\n * by testing the element itself and traversing up through its ancestors in the\n * DOM tree.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.orange').closest();\n * //=> []\n *\n * $('.orange').closest('.apple');\n * // => []\n *\n * $('.orange').closest('li');\n * //=> [<li class=\"orange\">Orange</li>]\n *\n * $('.orange').closest('#fruits');\n * //=> [<ul id=\"fruits\"> ... </ul>]\n * ```\n *\n * @param selector - Selector for the element to find.\n * @returns The closest nodes.\n * @see {@link https://api.jquery.com/closest/}\n */\nexport function closest(selector) {\n    var _a;\n    const set = [];\n    if (!selector) {\n        return this._make(set);\n    }\n    const selectOpts = {\n        xmlMode: this.options.xmlMode,\n        root: (_a = this._root) === null || _a === void 0 ? void 0 : _a[0],\n    };\n    const selectFn = typeof selector === 'string'\n        ? (elem) => select.is(elem, selector, selectOpts)\n        : getFilterFn(selector);\n    domEach(this, (elem) => {\n        if (elem && !isDocument(elem) && !isTag(elem)) {\n            elem = elem.parent;\n        }\n        while (elem && isTag(elem)) {\n            if (selectFn(elem, 0)) {\n                // Do not add duplicate elements to the set\n                if (!set.includes(elem)) {\n                    set.push(elem);\n                }\n                break;\n            }\n            elem = elem.parent;\n        }\n    });\n    return this._make(set);\n}\n/**\n * Gets the next sibling of each selected element, optionally filtered by a\n * selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.apple').next().hasClass('orange');\n * //=> true\n * ```\n *\n * @param selector - If specified filter for sibling.\n * @returns The next nodes.\n * @see {@link https://api.jquery.com/next/}\n */\nexport const next = _singleMatcher((elem) => nextElementSibling(elem));\n/**\n * Gets all the following siblings of the each selected element, optionally\n * filtered by a selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.apple').nextAll();\n * //=> [<li class=\"orange\">Orange</li>, <li class=\"pear\">Pear</li>]\n * $('.apple').nextAll('.orange');\n * //=> [<li class=\"orange\">Orange</li>]\n * ```\n *\n * @param selector - If specified filter for siblings.\n * @returns The next nodes.\n * @see {@link https://api.jquery.com/nextAll/}\n */\nexport const nextAll = _matcher((elem) => {\n    const matched = [];\n    while (elem.next) {\n        elem = elem.next;\n        if (isTag(elem))\n            matched.push(elem);\n    }\n    return matched;\n}, _removeDuplicates);\n/**\n * Gets all the following siblings up to but not including the element matched\n * by the selector, optionally filtered by another selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.apple').nextUntil('.pear');\n * //=> [<li class=\"orange\">Orange</li>]\n * ```\n *\n * @param selector - Selector for element to stop at.\n * @param filterSelector - If specified filter for siblings.\n * @returns The next nodes.\n * @see {@link https://api.jquery.com/nextUntil/}\n */\nexport const nextUntil = _matchUntil((el) => nextElementSibling(el), _removeDuplicates);\n/**\n * Gets the previous sibling of each selected element optionally filtered by a\n * selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.orange').prev().hasClass('apple');\n * //=> true\n * ```\n *\n * @param selector - If specified filter for siblings.\n * @returns The previous nodes.\n * @see {@link https://api.jquery.com/prev/}\n */\nexport const prev = _singleMatcher((elem) => prevElementSibling(elem));\n/**\n * Gets all the preceding siblings of each selected element, optionally filtered\n * by a selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.pear').prevAll();\n * //=> [<li class=\"orange\">Orange</li>, <li class=\"apple\">Apple</li>]\n *\n * $('.pear').prevAll('.orange');\n * //=> [<li class=\"orange\">Orange</li>]\n * ```\n *\n * @param selector - If specified filter for siblings.\n * @returns The previous nodes.\n * @see {@link https://api.jquery.com/prevAll/}\n */\nexport const prevAll = _matcher((elem) => {\n    const matched = [];\n    while (elem.prev) {\n        elem = elem.prev;\n        if (isTag(elem))\n            matched.push(elem);\n    }\n    return matched;\n}, _removeDuplicates);\n/**\n * Gets all the preceding siblings up to but not including the element matched\n * by the selector, optionally filtered by another selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.pear').prevUntil('.apple');\n * //=> [<li class=\"orange\">Orange</li>]\n * ```\n *\n * @param selector - Selector for element to stop at.\n * @param filterSelector - If specified filter for siblings.\n * @returns The previous nodes.\n * @see {@link https://api.jquery.com/prevUntil/}\n */\nexport const prevUntil = _matchUntil((el) => prevElementSibling(el), _removeDuplicates);\n/**\n * Get the siblings of each element (excluding the element) in the set of\n * matched elements, optionally filtered by a selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.pear').siblings().length;\n * //=> 2\n *\n * $('.pear').siblings('.orange').length;\n * //=> 1\n * ```\n *\n * @param selector - If specified filter for siblings.\n * @returns The siblings.\n * @see {@link https://api.jquery.com/siblings/}\n */\nexport const siblings = _matcher((elem) => getSiblings(elem).filter((el) => isTag(el) && el !== elem), uniqueSort);\n/**\n * Gets the element children of each element in the set of matched elements.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('#fruits').children().length;\n * //=> 3\n *\n * $('#fruits').children('.pear').text();\n * //=> Pear\n * ```\n *\n * @param selector - If specified filter for children.\n * @returns The children.\n * @see {@link https://api.jquery.com/children/}\n */\nexport const children = _matcher((elem) => getChildren(elem).filter(isTag), _removeDuplicates);\n/**\n * Gets the children of each element in the set of matched elements, including\n * text and comment nodes.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('#fruits').contents().length;\n * //=> 3\n * ```\n *\n * @returns The children.\n * @see {@link https://api.jquery.com/contents/}\n */\nexport function contents() {\n    const elems = this.toArray().reduce((newElems, elem) => hasChildren(elem) ? newElems.concat(elem.children) : newElems, []);\n    return this._make(elems);\n}\n/**\n * Iterates over a cheerio object, executing a function for each matched\n * element. When the callback is fired, the function is fired in the context of\n * the DOM element, so `this` refers to the current element, which is equivalent\n * to the function parameter `element`. To break out of the `each` loop early,\n * return with `false`.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * const fruits = [];\n *\n * $('li').each(function (i, elem) {\n *   fruits[i] = $(this).text();\n * });\n *\n * fruits.join(', ');\n * //=> Apple, Orange, Pear\n * ```\n *\n * @param fn - Function to execute.\n * @returns The instance itself, useful for chaining.\n * @see {@link https://api.jquery.com/each/}\n */\nexport function each(fn) {\n    let i = 0;\n    const len = this.length;\n    while (i < len && fn.call(this[i], i, this[i]) !== false)\n        ++i;\n    return this;\n}\n/**\n * Pass each element in the current matched set through a function, producing a\n * new Cheerio object containing the return values. The function can return an\n * individual data item or an array of data items to be inserted into the\n * resulting set. If an array is returned, the elements inside the array are\n * inserted into the set. If the function returns null or undefined, no element\n * will be inserted.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('li')\n *   .map(function (i, el) {\n *     // this === el\n *     return $(this).text();\n *   })\n *   .toArray()\n *   .join(' ');\n * //=> \"apple orange pear\"\n * ```\n *\n * @param fn - Function to execute.\n * @returns The mapped elements, wrapped in a Cheerio collection.\n * @see {@link https://api.jquery.com/map/}\n */\nexport function map(fn) {\n    let elems = [];\n    for (let i = 0; i < this.length; i++) {\n        const el = this[i];\n        const val = fn.call(el, i, el);\n        if (val != null) {\n            elems = elems.concat(val);\n        }\n    }\n    return this._make(elems);\n}\n/**\n * Creates a function to test if a filter is matched.\n *\n * @param match - A filter.\n * @returns A function that determines if a filter has been matched.\n */\nfunction getFilterFn(match) {\n    if (typeof match === 'function') {\n        return (el, i) => match.call(el, i, el);\n    }\n    if (isCheerio(match)) {\n        return (el) => Array.prototype.includes.call(match, el);\n    }\n    return function (el) {\n        return match === el;\n    };\n}\nexport function filter(match) {\n    var _a;\n    return this._make(filterArray(this.toArray(), match, this.options.xmlMode, (_a = this._root) === null || _a === void 0 ? void 0 : _a[0]));\n}\nexport function filterArray(nodes, match, xmlMode, root) {\n    return typeof match === 'string'\n        ? select.filter(match, nodes, { xmlMode, root })\n        : nodes.filter(getFilterFn(match));\n}\n/**\n * Checks the current list of elements and returns `true` if _any_ of the\n * elements match the selector. If using an element or Cheerio selection,\n * returns `true` if _any_ of the elements match. If using a predicate function,\n * the function is executed in the context of the selected element, so `this`\n * refers to the current element.\n *\n * @category Traversing\n * @param selector - Selector for the selection.\n * @returns Whether or not the selector matches an element of the instance.\n * @see {@link https://api.jquery.com/is/}\n */\nexport function is(selector) {\n    const nodes = this.toArray();\n    return typeof selector === 'string'\n        ? select.some(nodes.filter(isTag), selector, this.options)\n        : selector\n            ? nodes.some(getFilterFn(selector))\n            : false;\n}\n/**\n * Remove elements from the set of matched elements. Given a Cheerio object that\n * represents a set of DOM elements, the `.not()` method constructs a new\n * Cheerio object from a subset of the matching elements. The supplied selector\n * is tested against each element; the elements that don't match the selector\n * will be included in the result.\n *\n * The `.not()` method can take a function as its argument in the same way that\n * `.filter()` does. Elements for which the function returns `true` are excluded\n * from the filtered set; all other elements are included.\n *\n * @category Traversing\n * @example <caption>Selector</caption>\n *\n * ```js\n * $('li').not('.apple').length;\n * //=> 2\n * ```\n *\n * @example <caption>Function</caption>\n *\n * ```js\n * $('li').not(function (i, el) {\n *   // this === el\n *   return $(this).attr('class') === 'orange';\n * }).length; //=> 2\n * ```\n *\n * @param match - Value to look for, following the rules above.\n * @returns The filtered collection.\n * @see {@link https://api.jquery.com/not/}\n */\nexport function not(match) {\n    let nodes = this.toArray();\n    if (typeof match === 'string') {\n        const matches = new Set(select.filter(match, nodes, this.options));\n        nodes = nodes.filter((el) => !matches.has(el));\n    }\n    else {\n        const filterFn = getFilterFn(match);\n        nodes = nodes.filter((el, i) => !filterFn(el, i));\n    }\n    return this._make(nodes);\n}\n/**\n * Filters the set of matched elements to only those which have the given DOM\n * element as a descendant or which have a descendant that matches the given\n * selector. Equivalent to `.filter(':has(selector)')`.\n *\n * @category Traversing\n * @example <caption>Selector</caption>\n *\n * ```js\n * $('ul').has('.pear').attr('id');\n * //=> fruits\n * ```\n *\n * @example <caption>Element</caption>\n *\n * ```js\n * $('ul').has($('.pear')[0]).attr('id');\n * //=> fruits\n * ```\n *\n * @param selectorOrHaystack - Element to look for.\n * @returns The filtered collection.\n * @see {@link https://api.jquery.com/has/}\n */\nexport function has(selectorOrHaystack) {\n    return this.filter(typeof selectorOrHaystack === 'string'\n        ? // Using the `:has` selector here short-circuits searches.\n            `:has(${selectorOrHaystack})`\n        : (_, el) => this._make(el).find(selectorOrHaystack).length > 0);\n}\n/**\n * Will select the first element of a cheerio object.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('#fruits').children().first().text();\n * //=> Apple\n * ```\n *\n * @returns The first element.\n * @see {@link https://api.jquery.com/first/}\n */\nexport function first() {\n    return this.length > 1 ? this._make(this[0]) : this;\n}\n/**\n * Will select the last element of a cheerio object.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('#fruits').children().last().text();\n * //=> Pear\n * ```\n *\n * @returns The last element.\n * @see {@link https://api.jquery.com/last/}\n */\nexport function last() {\n    return this.length > 0 ? this._make(this[this.length - 1]) : this;\n}\n/**\n * Reduce the set of matched elements to the one at the specified index. Use\n * `.eq(-i)` to count backwards from the last selected element.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('li').eq(0).text();\n * //=> Apple\n *\n * $('li').eq(-1).text();\n * //=> Pear\n * ```\n *\n * @param i - Index of the element to select.\n * @returns The element at the `i`th position.\n * @see {@link https://api.jquery.com/eq/}\n */\nexport function eq(i) {\n    var _a;\n    i = +i;\n    // Use the first identity optimization if possible\n    if (i === 0 && this.length <= 1)\n        return this;\n    if (i < 0)\n        i = this.length + i;\n    return this._make((_a = this[i]) !== null && _a !== void 0 ? _a : []);\n}\nexport function get(i) {\n    if (i == null) {\n        return this.toArray();\n    }\n    return this[i < 0 ? this.length + i : i];\n}\n/**\n * Retrieve all the DOM elements contained in the jQuery set as an array.\n *\n * @example\n *\n * ```js\n * $('li').toArray();\n * //=> [ {...}, {...}, {...} ]\n * ```\n *\n * @returns The contained items.\n */\nexport function toArray() {\n    return Array.prototype.slice.call(this);\n}\n/**\n * Search for a given element from among the matched elements.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.pear').index();\n * //=> 2 $('.orange').index('li');\n * //=> 1\n * $('.apple').index($('#fruit, li'));\n * //=> 1\n * ```\n *\n * @param selectorOrNeedle - Element to look for.\n * @returns The index of the element.\n * @see {@link https://api.jquery.com/index/}\n */\nexport function index(selectorOrNeedle) {\n    let $haystack;\n    let needle;\n    if (selectorOrNeedle == null) {\n        $haystack = this.parent().children();\n        needle = this[0];\n    }\n    else if (typeof selectorOrNeedle === 'string') {\n        $haystack = this._make(selectorOrNeedle);\n        needle = this[0];\n    }\n    else {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias, unicorn/no-this-assignment\n        $haystack = this;\n        needle = isCheerio(selectorOrNeedle)\n            ? selectorOrNeedle[0]\n            : selectorOrNeedle;\n    }\n    return Array.prototype.indexOf.call($haystack, needle);\n}\n/**\n * Gets the elements matching the specified range (0-based position).\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('li').slice(1).eq(0).text();\n * //=> 'Orange'\n *\n * $('li').slice(1, 2).length;\n * //=> 1\n * ```\n *\n * @param start - A position at which the elements begin to be selected. If\n *   negative, it indicates an offset from the end of the set.\n * @param end - A position at which the elements stop being selected. If\n *   negative, it indicates an offset from the end of the set. If omitted, the\n *   range continues until the end of the set.\n * @returns The elements matching the specified range.\n * @see {@link https://api.jquery.com/slice/}\n */\nexport function slice(start, end) {\n    return this._make(Array.prototype.slice.call(this, start, end));\n}\n/**\n * End the most recent filtering operation in the current chain and return the\n * set of matched elements to its previous state.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('li').eq(0).end().length;\n * //=> 3\n * ```\n *\n * @returns The previous state of the set of matched elements.\n * @see {@link https://api.jquery.com/end/}\n */\nexport function end() {\n    var _a;\n    return (_a = this.prevObject) !== null && _a !== void 0 ? _a : this._make([]);\n}\n/**\n * Add elements to the set of matched elements.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.apple').add('.orange').length;\n * //=> 2\n * ```\n *\n * @param other - Elements to add.\n * @param context - Optionally the context of the new selection.\n * @returns The combined set.\n * @see {@link https://api.jquery.com/add/}\n */\nexport function add(other, context) {\n    const selection = this._make(other, context);\n    const contents = uniqueSort([...this.get(), ...selection.get()]);\n    return this._make(contents);\n}\n/**\n * Add the previous set of elements on the stack to the current set, optionally\n * filtered by a selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('li').eq(0).addBack('.orange').length;\n * //=> 2\n * ```\n *\n * @param selector - Selector for the elements to add.\n * @returns The combined set.\n * @see {@link https://api.jquery.com/addBack/}\n */\nexport function addBack(selector) {\n    return this.prevObject\n        ? this.add(selector ? this.prevObject.filter(selector) : this.prevObject)\n        : this;\n}\n//# sourceMappingURL=traversing.js.map","import { removeElement } from 'domutils';\nimport { Document, isDocument as checkIsDocument, } from 'domhandler';\n/**\n * Get the parse function with options.\n *\n * @param parser - The parser function.\n * @returns The parse function with options.\n */\nexport function getParse(parser) {\n    /**\n     * Parse a HTML string or a node.\n     *\n     * @param content - The HTML string or node.\n     * @param options - The parser options.\n     * @param isDocument - If `content` is a document.\n     * @param context - The context node in the DOM tree.\n     * @returns The parsed document node.\n     */\n    return function parse(content, options, isDocument, context) {\n        if (typeof Buffer !== 'undefined' && Buffer.isBuffer(content)) {\n            content = content.toString();\n        }\n        if (typeof content === 'string') {\n            return parser(content, options, isDocument, context);\n        }\n        const doc = content;\n        if (!Array.isArray(doc) && checkIsDocument(doc)) {\n            // If `doc` is already a root, just return it\n            return doc;\n        }\n        // Add conent to new root element\n        const root = new Document([]);\n        // Update the DOM using the root\n        update(doc, root);\n        return root;\n    };\n}\n/**\n * Update the dom structure, for one changed layer.\n *\n * @param newChilds - The new children.\n * @param parent - The new parent.\n * @returns The parent node.\n */\nexport function update(newChilds, parent) {\n    // Normalize\n    const arr = Array.isArray(newChilds) ? newChilds : [newChilds];\n    // Update parent\n    if (parent) {\n        parent.children = arr;\n    }\n    else {\n        parent = null;\n    }\n    // Update neighbors\n    for (let i = 0; i < arr.length; i++) {\n        const node = arr[i];\n        // Cleanly remove existing nodes from their previous structures.\n        if (node.parent && node.parent.children !== arr) {\n            removeElement(node);\n        }\n        if (parent) {\n            node.prev = arr[i - 1] || null;\n            node.next = arr[i + 1] || null;\n        }\n        else {\n            node.prev = node.next = null;\n        }\n        node.parent = parent;\n    }\n    return parent;\n}\n//# sourceMappingURL=parse.js.map","/**\n * Methods for modifying the DOM structure.\n *\n * @module cheerio/manipulation\n */\nimport { isTag, Text, hasChildren, cloneNode, Document, } from 'domhandler';\nimport { update as updateDOM } from '../parse.js';\nimport { text as staticText } from '../static.js';\nimport { domEach, isHtml, isCheerio } from '../utils.js';\nimport { removeElement } from 'domutils';\n/**\n * Create an array of nodes, recursing into arrays and parsing strings if\n * necessary.\n *\n * @private\n * @category Manipulation\n * @param elem - Elements to make an array of.\n * @param clone - Optionally clone nodes.\n * @returns The array of nodes.\n */\nexport function _makeDomArray(elem, clone) {\n    if (elem == null) {\n        return [];\n    }\n    if (typeof elem === 'string') {\n        return this._parse(elem, this.options, false, null).children.slice(0);\n    }\n    if ('length' in elem) {\n        if (elem.length === 1) {\n            return this._makeDomArray(elem[0], clone);\n        }\n        const result = [];\n        for (let i = 0; i < elem.length; i++) {\n            const el = elem[i];\n            if (typeof el === 'object') {\n                if (el == null) {\n                    continue;\n                }\n                if (!('length' in el)) {\n                    result.push(clone ? cloneNode(el, true) : el);\n                    continue;\n                }\n            }\n            result.push(...this._makeDomArray(el, clone));\n        }\n        return result;\n    }\n    return [clone ? cloneNode(elem, true) : elem];\n}\nfunction _insert(concatenator) {\n    return function (...elems) {\n        const lastIdx = this.length - 1;\n        return domEach(this, (el, i) => {\n            if (!hasChildren(el))\n                return;\n            const domSrc = typeof elems[0] === 'function'\n                ? elems[0].call(el, i, this._render(el.children))\n                : elems;\n            const dom = this._makeDomArray(domSrc, i < lastIdx);\n            concatenator(dom, el.children, el);\n        });\n    };\n}\n/**\n * Modify an array in-place, removing some number of elements and adding new\n * elements directly following them.\n *\n * @private\n * @category Manipulation\n * @param array - Target array to splice.\n * @param spliceIdx - Index at which to begin changing the array.\n * @param spliceCount - Number of elements to remove from the array.\n * @param newElems - Elements to insert into the array.\n * @param parent - The parent of the node.\n * @returns The spliced array.\n */\nfunction uniqueSplice(array, spliceIdx, spliceCount, newElems, parent) {\n    var _a, _b;\n    const spliceArgs = [\n        spliceIdx,\n        spliceCount,\n        ...newElems,\n    ];\n    const prev = spliceIdx === 0 ? null : array[spliceIdx - 1];\n    const next = spliceIdx + spliceCount >= array.length\n        ? null\n        : array[spliceIdx + spliceCount];\n    /*\n     * Before splicing in new elements, ensure they do not already appear in the\n     * current array.\n     */\n    for (let idx = 0; idx < newElems.length; ++idx) {\n        const node = newElems[idx];\n        const oldParent = node.parent;\n        if (oldParent) {\n            const oldSiblings = oldParent.children;\n            const prevIdx = oldSiblings.indexOf(node);\n            if (prevIdx > -1) {\n                oldParent.children.splice(prevIdx, 1);\n                if (parent === oldParent && spliceIdx > prevIdx) {\n                    spliceArgs[0]--;\n                }\n            }\n        }\n        node.parent = parent;\n        if (node.prev) {\n            node.prev.next = (_a = node.next) !== null && _a !== void 0 ? _a : null;\n        }\n        if (node.next) {\n            node.next.prev = (_b = node.prev) !== null && _b !== void 0 ? _b : null;\n        }\n        node.prev = idx === 0 ? prev : newElems[idx - 1];\n        node.next = idx === newElems.length - 1 ? next : newElems[idx + 1];\n    }\n    if (prev) {\n        prev.next = newElems[0];\n    }\n    if (next) {\n        next.prev = newElems[newElems.length - 1];\n    }\n    return array.splice(...spliceArgs);\n}\n/**\n * Insert every element in the set of matched elements to the end of the target.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('<li class=\"plum\">Plum</li>').appendTo('#fruits');\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"orange\">Orange</li>\n * //      <li class=\"pear\">Pear</li>\n * //      <li class=\"plum\">Plum</li>\n * //    </ul>\n * ```\n *\n * @param target - Element to append elements to.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/appendTo/}\n */\nexport function appendTo(target) {\n    const appendTarget = isCheerio(target) ? target : this._make(target);\n    appendTarget.append(this);\n    return this;\n}\n/**\n * Insert every element in the set of matched elements to the beginning of the\n * target.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('<li class=\"plum\">Plum</li>').prependTo('#fruits');\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"plum\">Plum</li>\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"orange\">Orange</li>\n * //      <li class=\"pear\">Pear</li>\n * //    </ul>\n * ```\n *\n * @param target - Element to prepend elements to.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/prependTo/}\n */\nexport function prependTo(target) {\n    const prependTarget = isCheerio(target) ? target : this._make(target);\n    prependTarget.prepend(this);\n    return this;\n}\n/**\n * Inserts content as the _last_ child of each of the selected elements.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('ul').append('<li class=\"plum\">Plum</li>');\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"orange\">Orange</li>\n * //      <li class=\"pear\">Pear</li>\n * //      <li class=\"plum\">Plum</li>\n * //    </ul>\n * ```\n *\n * @see {@link https://api.jquery.com/append/}\n */\nexport const append = _insert((dom, children, parent) => {\n    uniqueSplice(children, children.length, 0, dom, parent);\n});\n/**\n * Inserts content as the _first_ child of each of the selected elements.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('ul').prepend('<li class=\"plum\">Plum</li>');\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"plum\">Plum</li>\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"orange\">Orange</li>\n * //      <li class=\"pear\">Pear</li>\n * //    </ul>\n * ```\n *\n * @see {@link https://api.jquery.com/prepend/}\n */\nexport const prepend = _insert((dom, children, parent) => {\n    uniqueSplice(children, 0, 0, dom, parent);\n});\nfunction _wrap(insert) {\n    return function (wrapper) {\n        const lastIdx = this.length - 1;\n        const lastParent = this.parents().last();\n        for (let i = 0; i < this.length; i++) {\n            const el = this[i];\n            const wrap = typeof wrapper === 'function'\n                ? wrapper.call(el, i, el)\n                : typeof wrapper === 'string' && !isHtml(wrapper)\n                    ? lastParent.find(wrapper).clone()\n                    : wrapper;\n            const [wrapperDom] = this._makeDomArray(wrap, i < lastIdx);\n            if (!wrapperDom || !hasChildren(wrapperDom))\n                continue;\n            let elInsertLocation = wrapperDom;\n            /*\n             * Find the deepest child. Only consider the first tag child of each node\n             * (ignore text); stop if no children are found.\n             */\n            let j = 0;\n            while (j < elInsertLocation.children.length) {\n                const child = elInsertLocation.children[j];\n                if (isTag(child)) {\n                    elInsertLocation = child;\n                    j = 0;\n                }\n                else {\n                    j++;\n                }\n            }\n            insert(el, elInsertLocation, [wrapperDom]);\n        }\n        return this;\n    };\n}\n/**\n * The .wrap() function can take any string or object that could be passed to\n * the $() factory function to specify a DOM structure. This structure may be\n * nested several levels deep, but should contain only one inmost element. A\n * copy of this structure will be wrapped around each of the elements in the set\n * of matched elements. This method returns the original set of elements for\n * chaining purposes.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * const redFruit = $('<div class=\"red-fruit\"></div>');\n * $('.apple').wrap(redFruit);\n *\n * //=> <ul id=\"fruits\">\n * //     <div class=\"red-fruit\">\n * //      <li class=\"apple\">Apple</li>\n * //     </div>\n * //     <li class=\"orange\">Orange</li>\n * //     <li class=\"plum\">Plum</li>\n * //   </ul>\n *\n * const healthy = $('<div class=\"healthy\"></div>');\n * $('li').wrap(healthy);\n *\n * //=> <ul id=\"fruits\">\n * //     <div class=\"healthy\">\n * //       <li class=\"apple\">Apple</li>\n * //     </div>\n * //     <div class=\"healthy\">\n * //       <li class=\"orange\">Orange</li>\n * //     </div>\n * //     <div class=\"healthy\">\n * //        <li class=\"plum\">Plum</li>\n * //     </div>\n * //   </ul>\n * ```\n *\n * @param wrapper - The DOM structure to wrap around each element in the\n *   selection.\n * @see {@link https://api.jquery.com/wrap/}\n */\nexport const wrap = _wrap((el, elInsertLocation, wrapperDom) => {\n    const { parent } = el;\n    if (!parent)\n        return;\n    const siblings = parent.children;\n    const index = siblings.indexOf(el);\n    updateDOM([el], elInsertLocation);\n    /*\n     * The previous operation removed the current element from the `siblings`\n     * array, so the `dom` array can be inserted without removing any\n     * additional elements.\n     */\n    uniqueSplice(siblings, index, 0, wrapperDom, parent);\n});\n/**\n * The .wrapInner() function can take any string or object that could be passed\n * to the $() factory function to specify a DOM structure. This structure may be\n * nested several levels deep, but should contain only one inmost element. The\n * structure will be wrapped around the content of each of the elements in the\n * set of matched elements.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * const redFruit = $('<div class=\"red-fruit\"></div>');\n * $('.apple').wrapInner(redFruit);\n *\n * //=> <ul id=\"fruits\">\n * //     <li class=\"apple\">\n * //       <div class=\"red-fruit\">Apple</div>\n * //     </li>\n * //     <li class=\"orange\">Orange</li>\n * //     <li class=\"pear\">Pear</li>\n * //   </ul>\n *\n * const healthy = $('<div class=\"healthy\"></div>');\n * $('li').wrapInner(healthy);\n *\n * //=> <ul id=\"fruits\">\n * //     <li class=\"apple\">\n * //       <div class=\"healthy\">Apple</div>\n * //     </li>\n * //     <li class=\"orange\">\n * //       <div class=\"healthy\">Orange</div>\n * //     </li>\n * //     <li class=\"pear\">\n * //       <div class=\"healthy\">Pear</div>\n * //     </li>\n * //   </ul>\n * ```\n *\n * @param wrapper - The DOM structure to wrap around the content of each element\n *   in the selection.\n * @returns The instance itself, for chaining.\n * @see {@link https://api.jquery.com/wrapInner/}\n */\nexport const wrapInner = _wrap((el, elInsertLocation, wrapperDom) => {\n    if (!hasChildren(el))\n        return;\n    updateDOM(el.children, elInsertLocation);\n    updateDOM(wrapperDom, el);\n});\n/**\n * The .unwrap() function, removes the parents of the set of matched elements\n * from the DOM, leaving the matched elements in their place.\n *\n * @category Manipulation\n * @example <caption>without selector</caption>\n *\n * ```js\n * const $ = cheerio.load(\n *   '<div id=test>\\n  <div><p>Hello</p></div>\\n  <div><p>World</p></div>\\n</div>',\n * );\n * $('#test p').unwrap();\n *\n * //=> <div id=test>\n * //     <p>Hello</p>\n * //     <p>World</p>\n * //   </div>\n * ```\n *\n * @example <caption>with selector</caption>\n *\n * ```js\n * const $ = cheerio.load(\n *   '<div id=test>\\n  <p>Hello</p>\\n  <b><p>World</p></b>\\n</div>',\n * );\n * $('#test p').unwrap('b');\n *\n * //=> <div id=test>\n * //     <p>Hello</p>\n * //     <p>World</p>\n * //   </div>\n * ```\n *\n * @param selector - A selector to check the parent element against. If an\n *   element's parent does not match the selector, the element won't be\n *   unwrapped.\n * @returns The instance itself, for chaining.\n * @see {@link https://api.jquery.com/unwrap/}\n */\nexport function unwrap(selector) {\n    this.parent(selector)\n        .not('body')\n        .each((_, el) => {\n        this._make(el).replaceWith(el.children);\n    });\n    return this;\n}\n/**\n * The .wrapAll() function can take any string or object that could be passed to\n * the $() function to specify a DOM structure. This structure may be nested\n * several levels deep, but should contain only one inmost element. The\n * structure will be wrapped around all of the elements in the set of matched\n * elements, as a single group.\n *\n * @category Manipulation\n * @example <caption>With markup passed to `wrapAll`</caption>\n *\n * ```js\n * const $ = cheerio.load(\n *   '<div class=\"container\"><div class=\"inner\">First</div><div class=\"inner\">Second</div></div>',\n * );\n * $('.inner').wrapAll(\"<div class='new'></div>\");\n *\n * //=> <div class=\"container\">\n * //     <div class='new'>\n * //       <div class=\"inner\">First</div>\n * //       <div class=\"inner\">Second</div>\n * //     </div>\n * //   </div>\n * ```\n *\n * @example <caption>With an existing cheerio instance</caption>\n *\n * ```js\n * const $ = cheerio.load(\n *   '<span>Span 1</span><strong>Strong</strong><span>Span 2</span>',\n * );\n * const wrap = $('<div><p><em><b></b></em></p></div>');\n * $('span').wrapAll(wrap);\n *\n * //=> <div>\n * //     <p>\n * //       <em>\n * //         <b>\n * //           <span>Span 1</span>\n * //           <span>Span 2</span>\n * //         </b>\n * //       </em>\n * //     </p>\n * //   </div>\n * //   <strong>Strong</strong>\n * ```\n *\n * @param wrapper - The DOM structure to wrap around all matched elements in the\n *   selection.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/wrapAll/}\n */\nexport function wrapAll(wrapper) {\n    const el = this[0];\n    if (el) {\n        const wrap = this._make(typeof wrapper === 'function' ? wrapper.call(el, 0, el) : wrapper).insertBefore(el);\n        // If html is given as wrapper, wrap may contain text elements\n        let elInsertLocation;\n        for (let i = 0; i < wrap.length; i++) {\n            if (wrap[i].type === 'tag')\n                elInsertLocation = wrap[i];\n        }\n        let j = 0;\n        /*\n         * Find the deepest child. Only consider the first tag child of each node\n         * (ignore text); stop if no children are found.\n         */\n        while (elInsertLocation && j < elInsertLocation.children.length) {\n            const child = elInsertLocation.children[j];\n            if (child.type === 'tag') {\n                elInsertLocation = child;\n                j = 0;\n            }\n            else {\n                j++;\n            }\n        }\n        if (elInsertLocation)\n            this._make(elInsertLocation).append(this);\n    }\n    return this;\n}\n/**\n * Insert content next to each element in the set of matched elements.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('.apple').after('<li class=\"plum\">Plum</li>');\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"plum\">Plum</li>\n * //      <li class=\"orange\">Orange</li>\n * //      <li class=\"pear\">Pear</li>\n * //    </ul>\n * ```\n *\n * @param elems - HTML string, DOM element, array of DOM elements or Cheerio to\n *   insert after each element in the set of matched elements.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/after/}\n */\nexport function after(...elems) {\n    const lastIdx = this.length - 1;\n    return domEach(this, (el, i) => {\n        if (!hasChildren(el) || !el.parent) {\n            return;\n        }\n        const siblings = el.parent.children;\n        const index = siblings.indexOf(el);\n        // If not found, move on\n        /* istanbul ignore next */\n        if (index < 0)\n            return;\n        const domSrc = typeof elems[0] === 'function'\n            ? elems[0].call(el, i, this._render(el.children))\n            : elems;\n        const dom = this._makeDomArray(domSrc, i < lastIdx);\n        // Add element after `this` element\n        uniqueSplice(siblings, index + 1, 0, dom, el.parent);\n    });\n}\n/**\n * Insert every element in the set of matched elements after the target.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('<li class=\"plum\">Plum</li>').insertAfter('.apple');\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"plum\">Plum</li>\n * //      <li class=\"orange\">Orange</li>\n * //      <li class=\"pear\">Pear</li>\n * //    </ul>\n * ```\n *\n * @param target - Element to insert elements after.\n * @returns The set of newly inserted elements.\n * @see {@link https://api.jquery.com/insertAfter/}\n */\nexport function insertAfter(target) {\n    if (typeof target === 'string') {\n        target = this._make(target);\n    }\n    this.remove();\n    const clones = [];\n    for (const el of this._makeDomArray(target)) {\n        const clonedSelf = this.clone().toArray();\n        const { parent } = el;\n        if (!parent) {\n            continue;\n        }\n        const siblings = parent.children;\n        const index = siblings.indexOf(el);\n        // If not found, move on\n        /* istanbul ignore next */\n        if (index < 0)\n            continue;\n        // Add cloned `this` element(s) after target element\n        uniqueSplice(siblings, index + 1, 0, clonedSelf, parent);\n        clones.push(...clonedSelf);\n    }\n    return this._make(clones);\n}\n/**\n * Insert content previous to each element in the set of matched elements.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('.apple').before('<li class=\"plum\">Plum</li>');\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"plum\">Plum</li>\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"orange\">Orange</li>\n * //      <li class=\"pear\">Pear</li>\n * //    </ul>\n * ```\n *\n * @param elems - HTML string, DOM element, array of DOM elements or Cheerio to\n *   insert before each element in the set of matched elements.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/before/}\n */\nexport function before(...elems) {\n    const lastIdx = this.length - 1;\n    return domEach(this, (el, i) => {\n        if (!hasChildren(el) || !el.parent) {\n            return;\n        }\n        const siblings = el.parent.children;\n        const index = siblings.indexOf(el);\n        // If not found, move on\n        /* istanbul ignore next */\n        if (index < 0)\n            return;\n        const domSrc = typeof elems[0] === 'function'\n            ? elems[0].call(el, i, this._render(el.children))\n            : elems;\n        const dom = this._makeDomArray(domSrc, i < lastIdx);\n        // Add element before `el` element\n        uniqueSplice(siblings, index, 0, dom, el.parent);\n    });\n}\n/**\n * Insert every element in the set of matched elements before the target.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('<li class=\"plum\">Plum</li>').insertBefore('.apple');\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"plum\">Plum</li>\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"orange\">Orange</li>\n * //      <li class=\"pear\">Pear</li>\n * //    </ul>\n * ```\n *\n * @param target - Element to insert elements before.\n * @returns The set of newly inserted elements.\n * @see {@link https://api.jquery.com/insertBefore/}\n */\nexport function insertBefore(target) {\n    const targetArr = this._make(target);\n    this.remove();\n    const clones = [];\n    domEach(targetArr, (el) => {\n        const clonedSelf = this.clone().toArray();\n        const { parent } = el;\n        if (!parent) {\n            return;\n        }\n        const siblings = parent.children;\n        const index = siblings.indexOf(el);\n        // If not found, move on\n        /* istanbul ignore next */\n        if (index < 0)\n            return;\n        // Add cloned `this` element(s) after target element\n        uniqueSplice(siblings, index, 0, clonedSelf, parent);\n        clones.push(...clonedSelf);\n    });\n    return this._make(clones);\n}\n/**\n * Removes the set of matched elements from the DOM and all their children.\n * `selector` filters the set of matched elements to be removed.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('.pear').remove();\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"orange\">Orange</li>\n * //    </ul>\n * ```\n *\n * @param selector - Optional selector for elements to remove.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/remove/}\n */\nexport function remove(selector) {\n    // Filter if we have selector\n    const elems = selector ? this.filter(selector) : this;\n    domEach(elems, (el) => {\n        removeElement(el);\n        el.prev = el.next = el.parent = null;\n    });\n    return this;\n}\n/**\n * Replaces matched elements with `content`.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * const plum = $('<li class=\"plum\">Plum</li>');\n * $('.pear').replaceWith(plum);\n * $.html();\n * //=> <ul id=\"fruits\">\n * //     <li class=\"apple\">Apple</li>\n * //     <li class=\"orange\">Orange</li>\n * //     <li class=\"plum\">Plum</li>\n * //   </ul>\n * ```\n *\n * @param content - Replacement for matched elements.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/replaceWith/}\n */\nexport function replaceWith(content) {\n    return domEach(this, (el, i) => {\n        const { parent } = el;\n        if (!parent) {\n            return;\n        }\n        const siblings = parent.children;\n        const cont = typeof content === 'function' ? content.call(el, i, el) : content;\n        const dom = this._makeDomArray(cont);\n        /*\n         * In the case that `dom` contains nodes that already exist in other\n         * structures, ensure those nodes are properly removed.\n         */\n        updateDOM(dom, null);\n        const index = siblings.indexOf(el);\n        // Completely remove old element\n        uniqueSplice(siblings, index, 1, dom, parent);\n        if (!dom.includes(el)) {\n            el.parent = el.prev = el.next = null;\n        }\n    });\n}\n/**\n * Removes all children from each item in the selection. Text nodes and comment\n * nodes are left as is.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('ul').empty();\n * $.html();\n * //=>  <ul id=\"fruits\"></ul>\n * ```\n *\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/empty/}\n */\nexport function empty() {\n    return domEach(this, (el) => {\n        if (!hasChildren(el))\n            return;\n        for (const child of el.children) {\n            child.next = child.prev = child.parent = null;\n        }\n        el.children.length = 0;\n    });\n}\nexport function html(str) {\n    if (str === undefined) {\n        const el = this[0];\n        if (!el || !hasChildren(el))\n            return null;\n        return this._render(el.children);\n    }\n    return domEach(this, (el) => {\n        if (!hasChildren(el))\n            return;\n        for (const child of el.children) {\n            child.next = child.prev = child.parent = null;\n        }\n        const content = isCheerio(str)\n            ? str.toArray()\n            : this._parse(`${str}`, this.options, false, el).children;\n        updateDOM(content, el);\n    });\n}\n/**\n * Turns the collection to a string. Alias for `.html()`.\n *\n * @category Manipulation\n * @returns The rendered document.\n */\nexport function toString() {\n    return this._render(this);\n}\nexport function text(str) {\n    // If `str` is undefined, act as a \"getter\"\n    if (str === undefined) {\n        return staticText(this);\n    }\n    if (typeof str === 'function') {\n        // Function support\n        return domEach(this, (el, i) => this._make(el).text(str.call(el, i, staticText([el]))));\n    }\n    // Append text node to each selected elements\n    return domEach(this, (el) => {\n        if (!hasChildren(el))\n            return;\n        for (const child of el.children) {\n            child.next = child.prev = child.parent = null;\n        }\n        const textNode = new Text(`${str}`);\n        updateDOM(textNode, el);\n    });\n}\n/**\n * Clone the cheerio object.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * const moreFruit = $('#fruits').clone();\n * ```\n *\n * @returns The cloned object.\n * @see {@link https://api.jquery.com/clone/}\n */\nexport function clone() {\n    const clone = Array.prototype.map.call(this.get(), (el) => cloneNode(el, true));\n    // Add a root node around the cloned nodes\n    const root = new Document(clone);\n    for (const node of clone) {\n        node.parent = root;\n    }\n    return this._make(clone);\n}\n//# sourceMappingURL=manipulation.js.map","import { domEach } from '../utils.js';\nimport { isTag } from 'domhandler';\n/**\n * Set multiple CSS properties for every matched element.\n *\n * @category CSS\n * @param prop - The names of the properties.\n * @param val - The new values.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/css/}\n */\nexport function css(prop, val) {\n    if ((prop != null && val != null) ||\n        // When `prop` is a \"plain\" object\n        (typeof prop === 'object' && !Array.isArray(prop))) {\n        return domEach(this, (el, i) => {\n            if (isTag(el)) {\n                // `prop` can't be an array here anymore.\n                setCss(el, prop, val, i);\n            }\n        });\n    }\n    if (this.length === 0) {\n        return undefined;\n    }\n    return getCss(this[0], prop);\n}\n/**\n * Set styles of all elements.\n *\n * @private\n * @param el - Element to set style of.\n * @param prop - Name of property.\n * @param value - Value to set property to.\n * @param idx - Optional index within the selection.\n */\nfunction setCss(el, prop, value, idx) {\n    if (typeof prop === 'string') {\n        const styles = getCss(el);\n        const val = typeof value === 'function' ? value.call(el, idx, styles[prop]) : value;\n        if (val === '') {\n            delete styles[prop];\n        }\n        else if (val != null) {\n            styles[prop] = val;\n        }\n        el.attribs['style'] = stringify(styles);\n    }\n    else if (typeof prop === 'object') {\n        const keys = Object.keys(prop);\n        for (let i = 0; i < keys.length; i++) {\n            const k = keys[i];\n            setCss(el, k, prop[k], i);\n        }\n    }\n}\nfunction getCss(el, prop) {\n    if (!el || !isTag(el))\n        return;\n    const styles = parse(el.attribs['style']);\n    if (typeof prop === 'string') {\n        return styles[prop];\n    }\n    if (Array.isArray(prop)) {\n        const newStyles = {};\n        for (const item of prop) {\n            if (styles[item] != null) {\n                newStyles[item] = styles[item];\n            }\n        }\n        return newStyles;\n    }\n    return styles;\n}\n/**\n * Stringify `obj` to styles.\n *\n * @private\n * @category CSS\n * @param obj - Object to stringify.\n * @returns The serialized styles.\n */\nfunction stringify(obj) {\n    return Object.keys(obj).reduce((str, prop) => `${str}${str ? ' ' : ''}${prop}: ${obj[prop]};`, '');\n}\n/**\n * Parse `styles`.\n *\n * @private\n * @category CSS\n * @param styles - Styles to be parsed.\n * @returns The parsed styles.\n */\nfunction parse(styles) {\n    styles = (styles || '').trim();\n    if (!styles)\n        return {};\n    const obj = {};\n    let key;\n    for (const str of styles.split(';')) {\n        const n = str.indexOf(':');\n        // If there is no :, or if it is the first/last character, add to the previous item's value\n        if (n < 1 || n === str.length - 1) {\n            const trimmed = str.trimEnd();\n            if (trimmed.length > 0 && key !== undefined) {\n                obj[key] += `;${trimmed}`;\n            }\n        }\n        else {\n            key = str.slice(0, n).trim();\n            obj[key] = str.slice(n + 1).trim();\n        }\n    }\n    return obj;\n}\n//# sourceMappingURL=css.js.map","import { isTag } from 'domhandler';\n/*\n * https://github.com/jquery/jquery/blob/2.1.3/src/manipulation/var/rcheckableType.js\n * https://github.com/jquery/jquery/blob/2.1.3/src/serialize.js\n */\nconst submittableSelector = 'input,select,textarea,keygen';\nconst r20 = /%20/g;\nconst rCRLF = /\\r?\\n/g;\n/**\n * Encode a set of form elements as a string for submission.\n *\n * @category Forms\n * @example\n *\n * ```js\n * $('<form><input name=\"foo\" value=\"bar\" /></form>').serialize();\n * //=> 'foo=bar'\n * ```\n *\n * @returns The serialized form.\n * @see {@link https://api.jquery.com/serialize/}\n */\nexport function serialize() {\n    // Convert form elements into name/value objects\n    const arr = this.serializeArray();\n    // Serialize each element into a key/value string\n    const retArr = arr.map((data) => `${encodeURIComponent(data.name)}=${encodeURIComponent(data.value)}`);\n    // Return the resulting serialization\n    return retArr.join('&').replace(r20, '+');\n}\n/**\n * Encode a set of form elements as an array of names and values.\n *\n * @category Forms\n * @example\n *\n * ```js\n * $('<form><input name=\"foo\" value=\"bar\" /></form>').serializeArray();\n * //=> [ { name: 'foo', value: 'bar' } ]\n * ```\n *\n * @returns The serialized form.\n * @see {@link https://api.jquery.com/serializeArray/}\n */\nexport function serializeArray() {\n    // Resolve all form elements from either forms or collections of form elements\n    return this.map((_, elem) => {\n        const $elem = this._make(elem);\n        if (isTag(elem) && elem.name === 'form') {\n            return $elem.find(submittableSelector).toArray();\n        }\n        return $elem.filter(submittableSelector).toArray();\n    })\n        .filter(\n    // Verify elements have a name (`attr.name`) and are not disabled (`:enabled`)\n    '[name!=\"\"]:enabled' +\n        // And cannot be clicked (`[type=submit]`) or are used in `x-www-form-urlencoded` (`[type=file]`)\n        ':not(:submit, :button, :image, :reset, :file)' +\n        // And are either checked/don't have a checkable state\n        ':matches([checked], :not(:checkbox, :radio))')\n        .map((_, elem) => {\n        var _a;\n        const $elem = this._make(elem);\n        const name = $elem.attr('name'); // We have filtered for elements with a name before.\n        // If there is no value set (e.g. `undefined`, `null`), then default value to empty\n        const value = (_a = $elem.val()) !== null && _a !== void 0 ? _a : '';\n        // If we have an array of values (e.g. `<select multiple>`), return an array of key/value pairs\n        if (Array.isArray(value)) {\n            return value.map((val) => \n            /*\n             * We trim replace any line endings (e.g. `\\r` or `\\r\\n` with `\\r\\n`) to guarantee consistency across platforms\n             * These can occur inside of `<textarea>'s`\n             */\n            ({ name, value: val.replace(rCRLF, '\\r\\n') }));\n        }\n        // Otherwise (e.g. `<input type=\"text\">`, return only one key/value pair\n        return { name, value: value.replace(rCRLF, '\\r\\n') };\n    })\n        .toArray();\n}\n//# sourceMappingURL=forms.js.map","function getExtractDescr(descr) {\n    var _a;\n    if (typeof descr === 'string') {\n        return { selector: descr, value: 'textContent' };\n    }\n    return {\n        selector: descr.selector,\n        value: (_a = descr.value) !== null && _a !== void 0 ? _a : 'textContent',\n    };\n}\n/**\n * Extract multiple values from a document, and store them in an object.\n *\n * @param map - An object containing key-value pairs. The keys are the names of\n *   the properties to be created on the object, and the values are the\n *   selectors to be used to extract the values.\n * @returns An object containing the extracted values.\n */\nexport function extract(map) {\n    const ret = {};\n    for (const key in map) {\n        const descr = map[key];\n        const isArray = Array.isArray(descr);\n        const { selector, value } = getExtractDescr(isArray ? descr[0] : descr);\n        const fn = typeof value === 'function'\n            ? value\n            : typeof value === 'string'\n                ? (el) => this._make(el).prop(value)\n                : (el) => this._make(el).extract(value);\n        if (isArray) {\n            ret[key] = this._findBySelector(selector, Number.POSITIVE_INFINITY)\n                .map((_, el) => fn(el, key, ret))\n                .get();\n        }\n        else {\n            const $ = this._findBySelector(selector, 1);\n            ret[key] = $.length > 0 ? fn($[0], key, ret) : undefined;\n        }\n    }\n    return ret;\n}\n//# sourceMappingURL=extract.js.map","import * as Attributes from './api/attributes.js';\nimport * as Traversing from './api/traversing.js';\nimport * as Manipulation from './api/manipulation.js';\nimport * as Css from './api/css.js';\nimport * as Forms from './api/forms.js';\nimport * as Extract from './api/extract.js';\n/**\n * The cheerio class is the central class of the library. It wraps a set of\n * elements and provides an API for traversing, modifying, and interacting with\n * the set.\n *\n * Loading a document will return the Cheerio class bound to the root element of\n * the document. The class will be instantiated when querying the document (when\n * calling `$('selector')`).\n *\n * @example This is the HTML markup we will be using in all of the API examples:\n *\n * ```html\n * <ul id=\"fruits\">\n *   <li class=\"apple\">Apple</li>\n *   <li class=\"orange\">Orange</li>\n *   <li class=\"pear\">Pear</li>\n * </ul>\n * ```\n */\nexport class Cheerio {\n    /**\n     * Instance of cheerio. Methods are specified in the modules. Usage of this\n     * constructor is not recommended. Please use `$.load` instead.\n     *\n     * @private\n     * @param elements - The new selection.\n     * @param root - Sets the root node.\n     * @param options - Options for the instance.\n     */\n    constructor(elements, root, options) {\n        this.length = 0;\n        this.options = options;\n        this._root = root;\n        if (elements) {\n            for (let idx = 0; idx < elements.length; idx++) {\n                this[idx] = elements[idx];\n            }\n            this.length = elements.length;\n        }\n    }\n}\n/** Set a signature of the object. */\nCheerio.prototype.cheerio = '[cheerio object]';\n/*\n * Make cheerio an array-like object\n */\nCheerio.prototype.splice = Array.prototype.splice;\n// Support for (const element of $(...)) iteration:\nCheerio.prototype[Symbol.iterator] = Array.prototype[Symbol.iterator];\n// Plug in the API\nObject.assign(Cheerio.prototype, Attributes, Traversing, Manipulation, Css, Forms, Extract);\n//# sourceMappingURL=cheerio.js.map","import { flattenOptions, } from './options.js';\nimport * as staticMethods from './static.js';\nimport { Cheerio } from './cheerio.js';\nimport { isHtml, isCheerio } from './utils.js';\nexport function getLoad(parse, render) {\n    /**\n     * Create a querying function, bound to a document created from the provided\n     * markup.\n     *\n     * Note that similar to web browser contexts, this operation may introduce\n     * `<html>`, `<head>`, and `<body>` elements; set `isDocument` to `false` to\n     * switch to fragment mode and disable this.\n     *\n     * @param content - Markup to be loaded.\n     * @param options - Options for the created instance.\n     * @param isDocument - Allows parser to be switched to fragment mode.\n     * @returns The loaded document.\n     * @see {@link https://cheerio.js.org#loading} for additional usage information.\n     */\n    return function load(content, options, isDocument = true) {\n        if (content == null) {\n            throw new Error('cheerio.load() expects a string');\n        }\n        const internalOpts = flattenOptions(options);\n        const initialRoot = parse(content, internalOpts, isDocument, null);\n        /**\n         * Create an extended class here, so that extensions only live on one\n         * instance.\n         */\n        class LoadedCheerio extends Cheerio {\n            _make(selector, context) {\n                const cheerio = initialize(selector, context);\n                cheerio.prevObject = this;\n                return cheerio;\n            }\n            _parse(content, options, isDocument, context) {\n                return parse(content, options, isDocument, context);\n            }\n            _render(dom) {\n                return render(dom, this.options);\n            }\n        }\n        function initialize(selector, context, root = initialRoot, opts) {\n            // $($)\n            if (selector && isCheerio(selector))\n                return selector;\n            const options = flattenOptions(opts, internalOpts);\n            const r = typeof root === 'string'\n                ? [parse(root, options, false, null)]\n                : 'length' in root\n                    ? root\n                    : [root];\n            const rootInstance = isCheerio(r)\n                ? r\n                : new LoadedCheerio(r, null, options);\n            // Add a cyclic reference, so that calling methods on `_root` never fails.\n            rootInstance._root = rootInstance;\n            // $(), $(null), $(undefined), $(false)\n            if (!selector) {\n                return new LoadedCheerio(undefined, rootInstance, options);\n            }\n            const elements = typeof selector === 'string' && isHtml(selector)\n                ? // $(<html>)\n                    parse(selector, options, false, null).children\n                : isNode(selector)\n                    ? // $(dom)\n                        [selector]\n                    : Array.isArray(selector)\n                        ? // $([dom])\n                            selector\n                        : undefined;\n            const instance = new LoadedCheerio(elements, rootInstance, options);\n            if (elements) {\n                return instance;\n            }\n            if (typeof selector !== 'string') {\n                throw new TypeError('Unexpected type of selector');\n            }\n            // We know that our selector is a string now.\n            let search = selector;\n            const searchContext = context\n                ? // If we don't have a context, maybe we have a root, from loading\n                    typeof context === 'string'\n                        ? isHtml(context)\n                            ? // $('li', '<ul>...</ul>')\n                                new LoadedCheerio([parse(context, options, false, null)], rootInstance, options)\n                            : // $('li', 'ul')\n                                ((search = `${context} ${search}`), rootInstance)\n                        : isCheerio(context)\n                            ? // $('li', $)\n                                context\n                            : // $('li', node), $('li', [nodes])\n                                new LoadedCheerio(Array.isArray(context) ? context : [context], rootInstance, options)\n                : rootInstance;\n            // If we still don't have a context, return\n            if (!searchContext)\n                return instance;\n            /*\n             * #id, .class, tag\n             */\n            return searchContext.find(search);\n        }\n        // Add in static methods & properties\n        Object.assign(initialize, staticMethods, {\n            load,\n            // `_root` and `_options` are used in static methods.\n            _root: initialRoot,\n            _options: internalOpts,\n            // Add `fn` for plugins\n            fn: LoadedCheerio.prototype,\n            // Add the prototype here to maintain `instanceof` behavior.\n            prototype: LoadedCheerio.prototype,\n        });\n        return initialize;\n    };\n}\nfunction isNode(obj) {\n    return (!!obj.name ||\n        obj.type === 'root' ||\n        obj.type === 'text' ||\n        obj.type === 'comment');\n}\n//# sourceMappingURL=load.js.map","const UNDEFINED_CODE_POINTS = new Set([\n    65534, 65535, 131070, 131071, 196606, 196607, 262142, 262143, 327678, 327679, 393214,\n    393215, 458750, 458751, 524286, 524287, 589822, 589823, 655358, 655359, 720894,\n    720895, 786430, 786431, 851966, 851967, 917502, 917503, 983038, 983039, 1048574,\n    1048575, 1114110, 1114111,\n]);\nexport const REPLACEMENT_CHARACTER = '\\uFFFD';\nexport var CODE_POINTS;\n(function (CODE_POINTS) {\n    CODE_POINTS[CODE_POINTS[\"EOF\"] = -1] = \"EOF\";\n    CODE_POINTS[CODE_POINTS[\"NULL\"] = 0] = \"NULL\";\n    CODE_POINTS[CODE_POINTS[\"TABULATION\"] = 9] = \"TABULATION\";\n    CODE_POINTS[CODE_POINTS[\"CARRIAGE_RETURN\"] = 13] = \"CARRIAGE_RETURN\";\n    CODE_POINTS[CODE_POINTS[\"LINE_FEED\"] = 10] = \"LINE_FEED\";\n    CODE_POINTS[CODE_POINTS[\"FORM_FEED\"] = 12] = \"FORM_FEED\";\n    CODE_POINTS[CODE_POINTS[\"SPACE\"] = 32] = \"SPACE\";\n    CODE_POINTS[CODE_POINTS[\"EXCLAMATION_MARK\"] = 33] = \"EXCLAMATION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"QUOTATION_MARK\"] = 34] = \"QUOTATION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"AMPERSAND\"] = 38] = \"AMPERSAND\";\n    CODE_POINTS[CODE_POINTS[\"APOSTROPHE\"] = 39] = \"APOSTROPHE\";\n    CODE_POINTS[CODE_POINTS[\"HYPHEN_MINUS\"] = 45] = \"HYPHEN_MINUS\";\n    CODE_POINTS[CODE_POINTS[\"SOLIDUS\"] = 47] = \"SOLIDUS\";\n    CODE_POINTS[CODE_POINTS[\"DIGIT_0\"] = 48] = \"DIGIT_0\";\n    CODE_POINTS[CODE_POINTS[\"DIGIT_9\"] = 57] = \"DIGIT_9\";\n    CODE_POINTS[CODE_POINTS[\"SEMICOLON\"] = 59] = \"SEMICOLON\";\n    CODE_POINTS[CODE_POINTS[\"LESS_THAN_SIGN\"] = 60] = \"LESS_THAN_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"EQUALS_SIGN\"] = 61] = \"EQUALS_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"GREATER_THAN_SIGN\"] = 62] = \"GREATER_THAN_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"QUESTION_MARK\"] = 63] = \"QUESTION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_A\"] = 65] = \"LATIN_CAPITAL_A\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_Z\"] = 90] = \"LATIN_CAPITAL_Z\";\n    CODE_POINTS[CODE_POINTS[\"RIGHT_SQUARE_BRACKET\"] = 93] = \"RIGHT_SQUARE_BRACKET\";\n    CODE_POINTS[CODE_POINTS[\"GRAVE_ACCENT\"] = 96] = \"GRAVE_ACCENT\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_A\"] = 97] = \"LATIN_SMALL_A\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_Z\"] = 122] = \"LATIN_SMALL_Z\";\n})(CODE_POINTS || (CODE_POINTS = {}));\nexport const SEQUENCES = {\n    DASH_DASH: '--',\n    CDATA_START: '[CDATA[',\n    DOCTYPE: 'doctype',\n    SCRIPT: 'script',\n    PUBLIC: 'public',\n    SYSTEM: 'system',\n};\n//Surrogates\nexport function isSurrogate(cp) {\n    return cp >= 55296 && cp <= 57343;\n}\nexport function isSurrogatePair(cp) {\n    return cp >= 56320 && cp <= 57343;\n}\nexport function getSurrogatePairCodePoint(cp1, cp2) {\n    return (cp1 - 55296) * 1024 + 9216 + cp2;\n}\n//NOTE: excluding NULL and ASCII whitespace\nexport function isControlCodePoint(cp) {\n    return ((cp !== 0x20 && cp !== 0x0a && cp !== 0x0d && cp !== 0x09 && cp !== 0x0c && cp >= 0x01 && cp <= 0x1f) ||\n        (cp >= 0x7f && cp <= 0x9f));\n}\nexport function isUndefinedCodePoint(cp) {\n    return (cp >= 64976 && cp <= 65007) || UNDEFINED_CODE_POINTS.has(cp);\n}\n","export var ERR;\n(function (ERR) {\n    ERR[\"controlCharacterInInputStream\"] = \"control-character-in-input-stream\";\n    ERR[\"noncharacterInInputStream\"] = \"noncharacter-in-input-stream\";\n    ERR[\"surrogateInInputStream\"] = \"surrogate-in-input-stream\";\n    ERR[\"nonVoidHtmlElementStartTagWithTrailingSolidus\"] = \"non-void-html-element-start-tag-with-trailing-solidus\";\n    ERR[\"endTagWithAttributes\"] = \"end-tag-with-attributes\";\n    ERR[\"endTagWithTrailingSolidus\"] = \"end-tag-with-trailing-solidus\";\n    ERR[\"unexpectedSolidusInTag\"] = \"unexpected-solidus-in-tag\";\n    ERR[\"unexpectedNullCharacter\"] = \"unexpected-null-character\";\n    ERR[\"unexpectedQuestionMarkInsteadOfTagName\"] = \"unexpected-question-mark-instead-of-tag-name\";\n    ERR[\"invalidFirstCharacterOfTagName\"] = \"invalid-first-character-of-tag-name\";\n    ERR[\"unexpectedEqualsSignBeforeAttributeName\"] = \"unexpected-equals-sign-before-attribute-name\";\n    ERR[\"missingEndTagName\"] = \"missing-end-tag-name\";\n    ERR[\"unexpectedCharacterInAttributeName\"] = \"unexpected-character-in-attribute-name\";\n    ERR[\"unknownNamedCharacterReference\"] = \"unknown-named-character-reference\";\n    ERR[\"missingSemicolonAfterCharacterReference\"] = \"missing-semicolon-after-character-reference\";\n    ERR[\"unexpectedCharacterAfterDoctypeSystemIdentifier\"] = \"unexpected-character-after-doctype-system-identifier\";\n    ERR[\"unexpectedCharacterInUnquotedAttributeValue\"] = \"unexpected-character-in-unquoted-attribute-value\";\n    ERR[\"eofBeforeTagName\"] = \"eof-before-tag-name\";\n    ERR[\"eofInTag\"] = \"eof-in-tag\";\n    ERR[\"missingAttributeValue\"] = \"missing-attribute-value\";\n    ERR[\"missingWhitespaceBetweenAttributes\"] = \"missing-whitespace-between-attributes\";\n    ERR[\"missingWhitespaceAfterDoctypePublicKeyword\"] = \"missing-whitespace-after-doctype-public-keyword\";\n    ERR[\"missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers\"] = \"missing-whitespace-between-doctype-public-and-system-identifiers\";\n    ERR[\"missingWhitespaceAfterDoctypeSystemKeyword\"] = \"missing-whitespace-after-doctype-system-keyword\";\n    ERR[\"missingQuoteBeforeDoctypePublicIdentifier\"] = \"missing-quote-before-doctype-public-identifier\";\n    ERR[\"missingQuoteBeforeDoctypeSystemIdentifier\"] = \"missing-quote-before-doctype-system-identifier\";\n    ERR[\"missingDoctypePublicIdentifier\"] = \"missing-doctype-public-identifier\";\n    ERR[\"missingDoctypeSystemIdentifier\"] = \"missing-doctype-system-identifier\";\n    ERR[\"abruptDoctypePublicIdentifier\"] = \"abrupt-doctype-public-identifier\";\n    ERR[\"abruptDoctypeSystemIdentifier\"] = \"abrupt-doctype-system-identifier\";\n    ERR[\"cdataInHtmlContent\"] = \"cdata-in-html-content\";\n    ERR[\"incorrectlyOpenedComment\"] = \"incorrectly-opened-comment\";\n    ERR[\"eofInScriptHtmlCommentLikeText\"] = \"eof-in-script-html-comment-like-text\";\n    ERR[\"eofInDoctype\"] = \"eof-in-doctype\";\n    ERR[\"nestedComment\"] = \"nested-comment\";\n    ERR[\"abruptClosingOfEmptyComment\"] = \"abrupt-closing-of-empty-comment\";\n    ERR[\"eofInComment\"] = \"eof-in-comment\";\n    ERR[\"incorrectlyClosedComment\"] = \"incorrectly-closed-comment\";\n    ERR[\"eofInCdata\"] = \"eof-in-cdata\";\n    ERR[\"absenceOfDigitsInNumericCharacterReference\"] = \"absence-of-digits-in-numeric-character-reference\";\n    ERR[\"nullCharacterReference\"] = \"null-character-reference\";\n    ERR[\"surrogateCharacterReference\"] = \"surrogate-character-reference\";\n    ERR[\"characterReferenceOutsideUnicodeRange\"] = \"character-reference-outside-unicode-range\";\n    ERR[\"controlCharacterReference\"] = \"control-character-reference\";\n    ERR[\"noncharacterCharacterReference\"] = \"noncharacter-character-reference\";\n    ERR[\"missingWhitespaceBeforeDoctypeName\"] = \"missing-whitespace-before-doctype-name\";\n    ERR[\"missingDoctypeName\"] = \"missing-doctype-name\";\n    ERR[\"invalidCharacterSequenceAfterDoctypeName\"] = \"invalid-character-sequence-after-doctype-name\";\n    ERR[\"duplicateAttribute\"] = \"duplicate-attribute\";\n    ERR[\"nonConformingDoctype\"] = \"non-conforming-doctype\";\n    ERR[\"missingDoctype\"] = \"missing-doctype\";\n    ERR[\"misplacedDoctype\"] = \"misplaced-doctype\";\n    ERR[\"endTagWithoutMatchingOpenElement\"] = \"end-tag-without-matching-open-element\";\n    ERR[\"closingOfElementWithOpenChildElements\"] = \"closing-of-element-with-open-child-elements\";\n    ERR[\"disallowedContentInNoscriptInHead\"] = \"disallowed-content-in-noscript-in-head\";\n    ERR[\"openElementsLeftAfterEof\"] = \"open-elements-left-after-eof\";\n    ERR[\"abandonedHeadElementChild\"] = \"abandoned-head-element-child\";\n    ERR[\"misplacedStartTagForHeadElement\"] = \"misplaced-start-tag-for-head-element\";\n    ERR[\"nestedNoscriptInHead\"] = \"nested-noscript-in-head\";\n    ERR[\"eofInElementThatCanContainOnlyText\"] = \"eof-in-element-that-can-contain-only-text\";\n})(ERR || (ERR = {}));\n","import { CODE_POINTS as $, getSurrogatePairCodePoint, isControlCodePoint, isSurrogate, isSurrogatePair, isUndefinedCodePoint, } from '../common/unicode.js';\nimport { ERR } from '../common/error-codes.js';\n//Const\nconst DEFAULT_BUFFER_WATERLINE = 1 << 16;\n//Preprocessor\n//NOTE: HTML input preprocessing\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/parsing.html#preprocessing-the-input-stream)\nexport class Preprocessor {\n    constructor(handler) {\n        this.handler = handler;\n        this.html = '';\n        this.pos = -1;\n        // NOTE: Initial `lastGapPos` is -2, to ensure `col` on initialisation is 0\n        this.lastGapPos = -2;\n        this.gapStack = [];\n        this.skipNextNewLine = false;\n        this.lastChunkWritten = false;\n        this.endOfChunkHit = false;\n        this.bufferWaterline = DEFAULT_BUFFER_WATERLINE;\n        this.isEol = false;\n        this.lineStartPos = 0;\n        this.droppedBufferSize = 0;\n        this.line = 1;\n        //NOTE: avoid reporting errors twice on advance/retreat\n        this.lastErrOffset = -1;\n    }\n    /** The column on the current line. If we just saw a gap (eg. a surrogate pair), return the index before. */\n    get col() {\n        return this.pos - this.lineStartPos + Number(this.lastGapPos !== this.pos);\n    }\n    get offset() {\n        return this.droppedBufferSize + this.pos;\n    }\n    getError(code, cpOffset) {\n        const { line, col, offset } = this;\n        const startCol = col + cpOffset;\n        const startOffset = offset + cpOffset;\n        return {\n            code,\n            startLine: line,\n            endLine: line,\n            startCol,\n            endCol: startCol,\n            startOffset,\n            endOffset: startOffset,\n        };\n    }\n    _err(code) {\n        if (this.handler.onParseError && this.lastErrOffset !== this.offset) {\n            this.lastErrOffset = this.offset;\n            this.handler.onParseError(this.getError(code, 0));\n        }\n    }\n    _addGap() {\n        this.gapStack.push(this.lastGapPos);\n        this.lastGapPos = this.pos;\n    }\n    _processSurrogate(cp) {\n        //NOTE: try to peek a surrogate pair\n        if (this.pos !== this.html.length - 1) {\n            const nextCp = this.html.charCodeAt(this.pos + 1);\n            if (isSurrogatePair(nextCp)) {\n                //NOTE: we have a surrogate pair. Peek pair character and recalculate code point.\n                this.pos++;\n                //NOTE: add a gap that should be avoided during retreat\n                this._addGap();\n                return getSurrogatePairCodePoint(cp, nextCp);\n            }\n        }\n        //NOTE: we are at the end of a chunk, therefore we can't infer the surrogate pair yet.\n        else if (!this.lastChunkWritten) {\n            this.endOfChunkHit = true;\n            return $.EOF;\n        }\n        //NOTE: isolated surrogate\n        this._err(ERR.surrogateInInputStream);\n        return cp;\n    }\n    willDropParsedChunk() {\n        return this.pos > this.bufferWaterline;\n    }\n    dropParsedChunk() {\n        if (this.willDropParsedChunk()) {\n            this.html = this.html.substring(this.pos);\n            this.lineStartPos -= this.pos;\n            this.droppedBufferSize += this.pos;\n            this.pos = 0;\n            this.lastGapPos = -2;\n            this.gapStack.length = 0;\n        }\n    }\n    write(chunk, isLastChunk) {\n        if (this.html.length > 0) {\n            this.html += chunk;\n        }\n        else {\n            this.html = chunk;\n        }\n        this.endOfChunkHit = false;\n        this.lastChunkWritten = isLastChunk;\n    }\n    insertHtmlAtCurrentPos(chunk) {\n        this.html = this.html.substring(0, this.pos + 1) + chunk + this.html.substring(this.pos + 1);\n        this.endOfChunkHit = false;\n    }\n    startsWith(pattern, caseSensitive) {\n        // Check if our buffer has enough characters\n        if (this.pos + pattern.length > this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return false;\n        }\n        if (caseSensitive) {\n            return this.html.startsWith(pattern, this.pos);\n        }\n        for (let i = 0; i < pattern.length; i++) {\n            const cp = this.html.charCodeAt(this.pos + i) | 0x20;\n            if (cp !== pattern.charCodeAt(i)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    peek(offset) {\n        const pos = this.pos + offset;\n        if (pos >= this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return $.EOF;\n        }\n        const code = this.html.charCodeAt(pos);\n        return code === $.CARRIAGE_RETURN ? $.LINE_FEED : code;\n    }\n    advance() {\n        this.pos++;\n        //NOTE: LF should be in the last column of the line\n        if (this.isEol) {\n            this.isEol = false;\n            this.line++;\n            this.lineStartPos = this.pos;\n        }\n        if (this.pos >= this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return $.EOF;\n        }\n        let cp = this.html.charCodeAt(this.pos);\n        //NOTE: all U+000D CARRIAGE RETURN (CR) characters must be converted to U+000A LINE FEED (LF) characters\n        if (cp === $.CARRIAGE_RETURN) {\n            this.isEol = true;\n            this.skipNextNewLine = true;\n            return $.LINE_FEED;\n        }\n        //NOTE: any U+000A LINE FEED (LF) characters that immediately follow a U+000D CARRIAGE RETURN (CR) character\n        //must be ignored.\n        if (cp === $.LINE_FEED) {\n            this.isEol = true;\n            if (this.skipNextNewLine) {\n                // `line` will be bumped again in the recursive call.\n                this.line--;\n                this.skipNextNewLine = false;\n                this._addGap();\n                return this.advance();\n            }\n        }\n        this.skipNextNewLine = false;\n        if (isSurrogate(cp)) {\n            cp = this._processSurrogate(cp);\n        }\n        //OPTIMIZATION: first check if code point is in the common allowed\n        //range (ASCII alphanumeric, whitespaces, big chunk of BMP)\n        //before going into detailed performance cost validation.\n        const isCommonValidRange = this.handler.onParseError === null ||\n            (cp > 0x1f && cp < 0x7f) ||\n            cp === $.LINE_FEED ||\n            cp === $.CARRIAGE_RETURN ||\n            (cp > 0x9f && cp < 64976);\n        if (!isCommonValidRange) {\n            this._checkForProblematicCharacters(cp);\n        }\n        return cp;\n    }\n    _checkForProblematicCharacters(cp) {\n        if (isControlCodePoint(cp)) {\n            this._err(ERR.controlCharacterInInputStream);\n        }\n        else if (isUndefinedCodePoint(cp)) {\n            this._err(ERR.noncharacterInInputStream);\n        }\n    }\n    retreat(count) {\n        this.pos -= count;\n        while (this.pos < this.lastGapPos) {\n            this.lastGapPos = this.gapStack.pop();\n            this.pos--;\n        }\n        this.isEol = false;\n    }\n}\n","export var TokenType;\n(function (TokenType) {\n    TokenType[TokenType[\"CHARACTER\"] = 0] = \"CHARACTER\";\n    TokenType[TokenType[\"NULL_CHARACTER\"] = 1] = \"NULL_CHARACTER\";\n    TokenType[TokenType[\"WHITESPACE_CHARACTER\"] = 2] = \"WHITESPACE_CHARACTER\";\n    TokenType[TokenType[\"START_TAG\"] = 3] = \"START_TAG\";\n    TokenType[TokenType[\"END_TAG\"] = 4] = \"END_TAG\";\n    TokenType[TokenType[\"COMMENT\"] = 5] = \"COMMENT\";\n    TokenType[TokenType[\"DOCTYPE\"] = 6] = \"DOCTYPE\";\n    TokenType[TokenType[\"EOF\"] = 7] = \"EOF\";\n    TokenType[TokenType[\"HIBERNATION\"] = 8] = \"HIBERNATION\";\n})(TokenType || (TokenType = {}));\nexport function getTokenAttr(token, attrName) {\n    for (let i = token.attrs.length - 1; i >= 0; i--) {\n        if (token.attrs[i].name === attrName) {\n            return token.attrs[i].value;\n        }\n    }\n    return null;\n}\n","/** All valid namespaces in HTML. */\nexport var NS;\n(function (NS) {\n    NS[\"HTML\"] = \"http://www.w3.org/1999/xhtml\";\n    NS[\"MATHML\"] = \"http://www.w3.org/1998/Math/MathML\";\n    NS[\"SVG\"] = \"http://www.w3.org/2000/svg\";\n    NS[\"XLINK\"] = \"http://www.w3.org/1999/xlink\";\n    NS[\"XML\"] = \"http://www.w3.org/XML/1998/namespace\";\n    NS[\"XMLNS\"] = \"http://www.w3.org/2000/xmlns/\";\n})(NS || (NS = {}));\nexport var ATTRS;\n(function (ATTRS) {\n    ATTRS[\"TYPE\"] = \"type\";\n    ATTRS[\"ACTION\"] = \"action\";\n    ATTRS[\"ENCODING\"] = \"encoding\";\n    ATTRS[\"PROMPT\"] = \"prompt\";\n    ATTRS[\"NAME\"] = \"name\";\n    ATTRS[\"COLOR\"] = \"color\";\n    ATTRS[\"FACE\"] = \"face\";\n    ATTRS[\"SIZE\"] = \"size\";\n})(ATTRS || (ATTRS = {}));\n/**\n * The mode of the document.\n *\n * @see {@link https://dom.spec.whatwg.org/#concept-document-limited-quirks}\n */\nexport var DOCUMENT_MODE;\n(function (DOCUMENT_MODE) {\n    DOCUMENT_MODE[\"NO_QUIRKS\"] = \"no-quirks\";\n    DOCUMENT_MODE[\"QUIRKS\"] = \"quirks\";\n    DOCUMENT_MODE[\"LIMITED_QUIRKS\"] = \"limited-quirks\";\n})(DOCUMENT_MODE || (DOCUMENT_MODE = {}));\nexport var TAG_NAMES;\n(function (TAG_NAMES) {\n    TAG_NAMES[\"A\"] = \"a\";\n    TAG_NAMES[\"ADDRESS\"] = \"address\";\n    TAG_NAMES[\"ANNOTATION_XML\"] = \"annotation-xml\";\n    TAG_NAMES[\"APPLET\"] = \"applet\";\n    TAG_NAMES[\"AREA\"] = \"area\";\n    TAG_NAMES[\"ARTICLE\"] = \"article\";\n    TAG_NAMES[\"ASIDE\"] = \"aside\";\n    TAG_NAMES[\"B\"] = \"b\";\n    TAG_NAMES[\"BASE\"] = \"base\";\n    TAG_NAMES[\"BASEFONT\"] = \"basefont\";\n    TAG_NAMES[\"BGSOUND\"] = \"bgsound\";\n    TAG_NAMES[\"BIG\"] = \"big\";\n    TAG_NAMES[\"BLOCKQUOTE\"] = \"blockquote\";\n    TAG_NAMES[\"BODY\"] = \"body\";\n    TAG_NAMES[\"BR\"] = \"br\";\n    TAG_NAMES[\"BUTTON\"] = \"button\";\n    TAG_NAMES[\"CAPTION\"] = \"caption\";\n    TAG_NAMES[\"CENTER\"] = \"center\";\n    TAG_NAMES[\"CODE\"] = \"code\";\n    TAG_NAMES[\"COL\"] = \"col\";\n    TAG_NAMES[\"COLGROUP\"] = \"colgroup\";\n    TAG_NAMES[\"DD\"] = \"dd\";\n    TAG_NAMES[\"DESC\"] = \"desc\";\n    TAG_NAMES[\"DETAILS\"] = \"details\";\n    TAG_NAMES[\"DIALOG\"] = \"dialog\";\n    TAG_NAMES[\"DIR\"] = \"dir\";\n    TAG_NAMES[\"DIV\"] = \"div\";\n    TAG_NAMES[\"DL\"] = \"dl\";\n    TAG_NAMES[\"DT\"] = \"dt\";\n    TAG_NAMES[\"EM\"] = \"em\";\n    TAG_NAMES[\"EMBED\"] = \"embed\";\n    TAG_NAMES[\"FIELDSET\"] = \"fieldset\";\n    TAG_NAMES[\"FIGCAPTION\"] = \"figcaption\";\n    TAG_NAMES[\"FIGURE\"] = \"figure\";\n    TAG_NAMES[\"FONT\"] = \"font\";\n    TAG_NAMES[\"FOOTER\"] = \"footer\";\n    TAG_NAMES[\"FOREIGN_OBJECT\"] = \"foreignObject\";\n    TAG_NAMES[\"FORM\"] = \"form\";\n    TAG_NAMES[\"FRAME\"] = \"frame\";\n    TAG_NAMES[\"FRAMESET\"] = \"frameset\";\n    TAG_NAMES[\"H1\"] = \"h1\";\n    TAG_NAMES[\"H2\"] = \"h2\";\n    TAG_NAMES[\"H3\"] = \"h3\";\n    TAG_NAMES[\"H4\"] = \"h4\";\n    TAG_NAMES[\"H5\"] = \"h5\";\n    TAG_NAMES[\"H6\"] = \"h6\";\n    TAG_NAMES[\"HEAD\"] = \"head\";\n    TAG_NAMES[\"HEADER\"] = \"header\";\n    TAG_NAMES[\"HGROUP\"] = \"hgroup\";\n    TAG_NAMES[\"HR\"] = \"hr\";\n    TAG_NAMES[\"HTML\"] = \"html\";\n    TAG_NAMES[\"I\"] = \"i\";\n    TAG_NAMES[\"IMG\"] = \"img\";\n    TAG_NAMES[\"IMAGE\"] = \"image\";\n    TAG_NAMES[\"INPUT\"] = \"input\";\n    TAG_NAMES[\"IFRAME\"] = \"iframe\";\n    TAG_NAMES[\"KEYGEN\"] = \"keygen\";\n    TAG_NAMES[\"LABEL\"] = \"label\";\n    TAG_NAMES[\"LI\"] = \"li\";\n    TAG_NAMES[\"LINK\"] = \"link\";\n    TAG_NAMES[\"LISTING\"] = \"listing\";\n    TAG_NAMES[\"MAIN\"] = \"main\";\n    TAG_NAMES[\"MALIGNMARK\"] = \"malignmark\";\n    TAG_NAMES[\"MARQUEE\"] = \"marquee\";\n    TAG_NAMES[\"MATH\"] = \"math\";\n    TAG_NAMES[\"MENU\"] = \"menu\";\n    TAG_NAMES[\"META\"] = \"meta\";\n    TAG_NAMES[\"MGLYPH\"] = \"mglyph\";\n    TAG_NAMES[\"MI\"] = \"mi\";\n    TAG_NAMES[\"MO\"] = \"mo\";\n    TAG_NAMES[\"MN\"] = \"mn\";\n    TAG_NAMES[\"MS\"] = \"ms\";\n    TAG_NAMES[\"MTEXT\"] = \"mtext\";\n    TAG_NAMES[\"NAV\"] = \"nav\";\n    TAG_NAMES[\"NOBR\"] = \"nobr\";\n    TAG_NAMES[\"NOFRAMES\"] = \"noframes\";\n    TAG_NAMES[\"NOEMBED\"] = \"noembed\";\n    TAG_NAMES[\"NOSCRIPT\"] = \"noscript\";\n    TAG_NAMES[\"OBJECT\"] = \"object\";\n    TAG_NAMES[\"OL\"] = \"ol\";\n    TAG_NAMES[\"OPTGROUP\"] = \"optgroup\";\n    TAG_NAMES[\"OPTION\"] = \"option\";\n    TAG_NAMES[\"P\"] = \"p\";\n    TAG_NAMES[\"PARAM\"] = \"param\";\n    TAG_NAMES[\"PLAINTEXT\"] = \"plaintext\";\n    TAG_NAMES[\"PRE\"] = \"pre\";\n    TAG_NAMES[\"RB\"] = \"rb\";\n    TAG_NAMES[\"RP\"] = \"rp\";\n    TAG_NAMES[\"RT\"] = \"rt\";\n    TAG_NAMES[\"RTC\"] = \"rtc\";\n    TAG_NAMES[\"RUBY\"] = \"ruby\";\n    TAG_NAMES[\"S\"] = \"s\";\n    TAG_NAMES[\"SCRIPT\"] = \"script\";\n    TAG_NAMES[\"SEARCH\"] = \"search\";\n    TAG_NAMES[\"SECTION\"] = \"section\";\n    TAG_NAMES[\"SELECT\"] = \"select\";\n    TAG_NAMES[\"SOURCE\"] = \"source\";\n    TAG_NAMES[\"SMALL\"] = \"small\";\n    TAG_NAMES[\"SPAN\"] = \"span\";\n    TAG_NAMES[\"STRIKE\"] = \"strike\";\n    TAG_NAMES[\"STRONG\"] = \"strong\";\n    TAG_NAMES[\"STYLE\"] = \"style\";\n    TAG_NAMES[\"SUB\"] = \"sub\";\n    TAG_NAMES[\"SUMMARY\"] = \"summary\";\n    TAG_NAMES[\"SUP\"] = \"sup\";\n    TAG_NAMES[\"TABLE\"] = \"table\";\n    TAG_NAMES[\"TBODY\"] = \"tbody\";\n    TAG_NAMES[\"TEMPLATE\"] = \"template\";\n    TAG_NAMES[\"TEXTAREA\"] = \"textarea\";\n    TAG_NAMES[\"TFOOT\"] = \"tfoot\";\n    TAG_NAMES[\"TD\"] = \"td\";\n    TAG_NAMES[\"TH\"] = \"th\";\n    TAG_NAMES[\"THEAD\"] = \"thead\";\n    TAG_NAMES[\"TITLE\"] = \"title\";\n    TAG_NAMES[\"TR\"] = \"tr\";\n    TAG_NAMES[\"TRACK\"] = \"track\";\n    TAG_NAMES[\"TT\"] = \"tt\";\n    TAG_NAMES[\"U\"] = \"u\";\n    TAG_NAMES[\"UL\"] = \"ul\";\n    TAG_NAMES[\"SVG\"] = \"svg\";\n    TAG_NAMES[\"VAR\"] = \"var\";\n    TAG_NAMES[\"WBR\"] = \"wbr\";\n    TAG_NAMES[\"XMP\"] = \"xmp\";\n})(TAG_NAMES || (TAG_NAMES = {}));\n/**\n * Tag IDs are numeric IDs for known tag names.\n *\n * We use tag IDs to improve the performance of tag name comparisons.\n */\nexport var TAG_ID;\n(function (TAG_ID) {\n    TAG_ID[TAG_ID[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    TAG_ID[TAG_ID[\"A\"] = 1] = \"A\";\n    TAG_ID[TAG_ID[\"ADDRESS\"] = 2] = \"ADDRESS\";\n    TAG_ID[TAG_ID[\"ANNOTATION_XML\"] = 3] = \"ANNOTATION_XML\";\n    TAG_ID[TAG_ID[\"APPLET\"] = 4] = \"APPLET\";\n    TAG_ID[TAG_ID[\"AREA\"] = 5] = \"AREA\";\n    TAG_ID[TAG_ID[\"ARTICLE\"] = 6] = \"ARTICLE\";\n    TAG_ID[TAG_ID[\"ASIDE\"] = 7] = \"ASIDE\";\n    TAG_ID[TAG_ID[\"B\"] = 8] = \"B\";\n    TAG_ID[TAG_ID[\"BASE\"] = 9] = \"BASE\";\n    TAG_ID[TAG_ID[\"BASEFONT\"] = 10] = \"BASEFONT\";\n    TAG_ID[TAG_ID[\"BGSOUND\"] = 11] = \"BGSOUND\";\n    TAG_ID[TAG_ID[\"BIG\"] = 12] = \"BIG\";\n    TAG_ID[TAG_ID[\"BLOCKQUOTE\"] = 13] = \"BLOCKQUOTE\";\n    TAG_ID[TAG_ID[\"BODY\"] = 14] = \"BODY\";\n    TAG_ID[TAG_ID[\"BR\"] = 15] = \"BR\";\n    TAG_ID[TAG_ID[\"BUTTON\"] = 16] = \"BUTTON\";\n    TAG_ID[TAG_ID[\"CAPTION\"] = 17] = \"CAPTION\";\n    TAG_ID[TAG_ID[\"CENTER\"] = 18] = \"CENTER\";\n    TAG_ID[TAG_ID[\"CODE\"] = 19] = \"CODE\";\n    TAG_ID[TAG_ID[\"COL\"] = 20] = \"COL\";\n    TAG_ID[TAG_ID[\"COLGROUP\"] = 21] = \"COLGROUP\";\n    TAG_ID[TAG_ID[\"DD\"] = 22] = \"DD\";\n    TAG_ID[TAG_ID[\"DESC\"] = 23] = \"DESC\";\n    TAG_ID[TAG_ID[\"DETAILS\"] = 24] = \"DETAILS\";\n    TAG_ID[TAG_ID[\"DIALOG\"] = 25] = \"DIALOG\";\n    TAG_ID[TAG_ID[\"DIR\"] = 26] = \"DIR\";\n    TAG_ID[TAG_ID[\"DIV\"] = 27] = \"DIV\";\n    TAG_ID[TAG_ID[\"DL\"] = 28] = \"DL\";\n    TAG_ID[TAG_ID[\"DT\"] = 29] = \"DT\";\n    TAG_ID[TAG_ID[\"EM\"] = 30] = \"EM\";\n    TAG_ID[TAG_ID[\"EMBED\"] = 31] = \"EMBED\";\n    TAG_ID[TAG_ID[\"FIELDSET\"] = 32] = \"FIELDSET\";\n    TAG_ID[TAG_ID[\"FIGCAPTION\"] = 33] = \"FIGCAPTION\";\n    TAG_ID[TAG_ID[\"FIGURE\"] = 34] = \"FIGURE\";\n    TAG_ID[TAG_ID[\"FONT\"] = 35] = \"FONT\";\n    TAG_ID[TAG_ID[\"FOOTER\"] = 36] = \"FOOTER\";\n    TAG_ID[TAG_ID[\"FOREIGN_OBJECT\"] = 37] = \"FOREIGN_OBJECT\";\n    TAG_ID[TAG_ID[\"FORM\"] = 38] = \"FORM\";\n    TAG_ID[TAG_ID[\"FRAME\"] = 39] = \"FRAME\";\n    TAG_ID[TAG_ID[\"FRAMESET\"] = 40] = \"FRAMESET\";\n    TAG_ID[TAG_ID[\"H1\"] = 41] = \"H1\";\n    TAG_ID[TAG_ID[\"H2\"] = 42] = \"H2\";\n    TAG_ID[TAG_ID[\"H3\"] = 43] = \"H3\";\n    TAG_ID[TAG_ID[\"H4\"] = 44] = \"H4\";\n    TAG_ID[TAG_ID[\"H5\"] = 45] = \"H5\";\n    TAG_ID[TAG_ID[\"H6\"] = 46] = \"H6\";\n    TAG_ID[TAG_ID[\"HEAD\"] = 47] = \"HEAD\";\n    TAG_ID[TAG_ID[\"HEADER\"] = 48] = \"HEADER\";\n    TAG_ID[TAG_ID[\"HGROUP\"] = 49] = \"HGROUP\";\n    TAG_ID[TAG_ID[\"HR\"] = 50] = \"HR\";\n    TAG_ID[TAG_ID[\"HTML\"] = 51] = \"HTML\";\n    TAG_ID[TAG_ID[\"I\"] = 52] = \"I\";\n    TAG_ID[TAG_ID[\"IMG\"] = 53] = \"IMG\";\n    TAG_ID[TAG_ID[\"IMAGE\"] = 54] = \"IMAGE\";\n    TAG_ID[TAG_ID[\"INPUT\"] = 55] = \"INPUT\";\n    TAG_ID[TAG_ID[\"IFRAME\"] = 56] = \"IFRAME\";\n    TAG_ID[TAG_ID[\"KEYGEN\"] = 57] = \"KEYGEN\";\n    TAG_ID[TAG_ID[\"LABEL\"] = 58] = \"LABEL\";\n    TAG_ID[TAG_ID[\"LI\"] = 59] = \"LI\";\n    TAG_ID[TAG_ID[\"LINK\"] = 60] = \"LINK\";\n    TAG_ID[TAG_ID[\"LISTING\"] = 61] = \"LISTING\";\n    TAG_ID[TAG_ID[\"MAIN\"] = 62] = \"MAIN\";\n    TAG_ID[TAG_ID[\"MALIGNMARK\"] = 63] = \"MALIGNMARK\";\n    TAG_ID[TAG_ID[\"MARQUEE\"] = 64] = \"MARQUEE\";\n    TAG_ID[TAG_ID[\"MATH\"] = 65] = \"MATH\";\n    TAG_ID[TAG_ID[\"MENU\"] = 66] = \"MENU\";\n    TAG_ID[TAG_ID[\"META\"] = 67] = \"META\";\n    TAG_ID[TAG_ID[\"MGLYPH\"] = 68] = \"MGLYPH\";\n    TAG_ID[TAG_ID[\"MI\"] = 69] = \"MI\";\n    TAG_ID[TAG_ID[\"MO\"] = 70] = \"MO\";\n    TAG_ID[TAG_ID[\"MN\"] = 71] = \"MN\";\n    TAG_ID[TAG_ID[\"MS\"] = 72] = \"MS\";\n    TAG_ID[TAG_ID[\"MTEXT\"] = 73] = \"MTEXT\";\n    TAG_ID[TAG_ID[\"NAV\"] = 74] = \"NAV\";\n    TAG_ID[TAG_ID[\"NOBR\"] = 75] = \"NOBR\";\n    TAG_ID[TAG_ID[\"NOFRAMES\"] = 76] = \"NOFRAMES\";\n    TAG_ID[TAG_ID[\"NOEMBED\"] = 77] = \"NOEMBED\";\n    TAG_ID[TAG_ID[\"NOSCRIPT\"] = 78] = \"NOSCRIPT\";\n    TAG_ID[TAG_ID[\"OBJECT\"] = 79] = \"OBJECT\";\n    TAG_ID[TAG_ID[\"OL\"] = 80] = \"OL\";\n    TAG_ID[TAG_ID[\"OPTGROUP\"] = 81] = \"OPTGROUP\";\n    TAG_ID[TAG_ID[\"OPTION\"] = 82] = \"OPTION\";\n    TAG_ID[TAG_ID[\"P\"] = 83] = \"P\";\n    TAG_ID[TAG_ID[\"PARAM\"] = 84] = \"PARAM\";\n    TAG_ID[TAG_ID[\"PLAINTEXT\"] = 85] = \"PLAINTEXT\";\n    TAG_ID[TAG_ID[\"PRE\"] = 86] = \"PRE\";\n    TAG_ID[TAG_ID[\"RB\"] = 87] = \"RB\";\n    TAG_ID[TAG_ID[\"RP\"] = 88] = \"RP\";\n    TAG_ID[TAG_ID[\"RT\"] = 89] = \"RT\";\n    TAG_ID[TAG_ID[\"RTC\"] = 90] = \"RTC\";\n    TAG_ID[TAG_ID[\"RUBY\"] = 91] = \"RUBY\";\n    TAG_ID[TAG_ID[\"S\"] = 92] = \"S\";\n    TAG_ID[TAG_ID[\"SCRIPT\"] = 93] = \"SCRIPT\";\n    TAG_ID[TAG_ID[\"SEARCH\"] = 94] = \"SEARCH\";\n    TAG_ID[TAG_ID[\"SECTION\"] = 95] = \"SECTION\";\n    TAG_ID[TAG_ID[\"SELECT\"] = 96] = \"SELECT\";\n    TAG_ID[TAG_ID[\"SOURCE\"] = 97] = \"SOURCE\";\n    TAG_ID[TAG_ID[\"SMALL\"] = 98] = \"SMALL\";\n    TAG_ID[TAG_ID[\"SPAN\"] = 99] = \"SPAN\";\n    TAG_ID[TAG_ID[\"STRIKE\"] = 100] = \"STRIKE\";\n    TAG_ID[TAG_ID[\"STRONG\"] = 101] = \"STRONG\";\n    TAG_ID[TAG_ID[\"STYLE\"] = 102] = \"STYLE\";\n    TAG_ID[TAG_ID[\"SUB\"] = 103] = \"SUB\";\n    TAG_ID[TAG_ID[\"SUMMARY\"] = 104] = \"SUMMARY\";\n    TAG_ID[TAG_ID[\"SUP\"] = 105] = \"SUP\";\n    TAG_ID[TAG_ID[\"TABLE\"] = 106] = \"TABLE\";\n    TAG_ID[TAG_ID[\"TBODY\"] = 107] = \"TBODY\";\n    TAG_ID[TAG_ID[\"TEMPLATE\"] = 108] = \"TEMPLATE\";\n    TAG_ID[TAG_ID[\"TEXTAREA\"] = 109] = \"TEXTAREA\";\n    TAG_ID[TAG_ID[\"TFOOT\"] = 110] = \"TFOOT\";\n    TAG_ID[TAG_ID[\"TD\"] = 111] = \"TD\";\n    TAG_ID[TAG_ID[\"TH\"] = 112] = \"TH\";\n    TAG_ID[TAG_ID[\"THEAD\"] = 113] = \"THEAD\";\n    TAG_ID[TAG_ID[\"TITLE\"] = 114] = \"TITLE\";\n    TAG_ID[TAG_ID[\"TR\"] = 115] = \"TR\";\n    TAG_ID[TAG_ID[\"TRACK\"] = 116] = \"TRACK\";\n    TAG_ID[TAG_ID[\"TT\"] = 117] = \"TT\";\n    TAG_ID[TAG_ID[\"U\"] = 118] = \"U\";\n    TAG_ID[TAG_ID[\"UL\"] = 119] = \"UL\";\n    TAG_ID[TAG_ID[\"SVG\"] = 120] = \"SVG\";\n    TAG_ID[TAG_ID[\"VAR\"] = 121] = \"VAR\";\n    TAG_ID[TAG_ID[\"WBR\"] = 122] = \"WBR\";\n    TAG_ID[TAG_ID[\"XMP\"] = 123] = \"XMP\";\n})(TAG_ID || (TAG_ID = {}));\nconst TAG_NAME_TO_ID = new Map([\n    [TAG_NAMES.A, TAG_ID.A],\n    [TAG_NAMES.ADDRESS, TAG_ID.ADDRESS],\n    [TAG_NAMES.ANNOTATION_XML, TAG_ID.ANNOTATION_XML],\n    [TAG_NAMES.APPLET, TAG_ID.APPLET],\n    [TAG_NAMES.AREA, TAG_ID.AREA],\n    [TAG_NAMES.ARTICLE, TAG_ID.ARTICLE],\n    [TAG_NAMES.ASIDE, TAG_ID.ASIDE],\n    [TAG_NAMES.B, TAG_ID.B],\n    [TAG_NAMES.BASE, TAG_ID.BASE],\n    [TAG_NAMES.BASEFONT, TAG_ID.BASEFONT],\n    [TAG_NAMES.BGSOUND, TAG_ID.BGSOUND],\n    [TAG_NAMES.BIG, TAG_ID.BIG],\n    [TAG_NAMES.BLOCKQUOTE, TAG_ID.BLOCKQUOTE],\n    [TAG_NAMES.BODY, TAG_ID.BODY],\n    [TAG_NAMES.BR, TAG_ID.BR],\n    [TAG_NAMES.BUTTON, TAG_ID.BUTTON],\n    [TAG_NAMES.CAPTION, TAG_ID.CAPTION],\n    [TAG_NAMES.CENTER, TAG_ID.CENTER],\n    [TAG_NAMES.CODE, TAG_ID.CODE],\n    [TAG_NAMES.COL, TAG_ID.COL],\n    [TAG_NAMES.COLGROUP, TAG_ID.COLGROUP],\n    [TAG_NAMES.DD, TAG_ID.DD],\n    [TAG_NAMES.DESC, TAG_ID.DESC],\n    [TAG_NAMES.DETAILS, TAG_ID.DETAILS],\n    [TAG_NAMES.DIALOG, TAG_ID.DIALOG],\n    [TAG_NAMES.DIR, TAG_ID.DIR],\n    [TAG_NAMES.DIV, TAG_ID.DIV],\n    [TAG_NAMES.DL, TAG_ID.DL],\n    [TAG_NAMES.DT, TAG_ID.DT],\n    [TAG_NAMES.EM, TAG_ID.EM],\n    [TAG_NAMES.EMBED, TAG_ID.EMBED],\n    [TAG_NAMES.FIELDSET, TAG_ID.FIELDSET],\n    [TAG_NAMES.FIGCAPTION, TAG_ID.FIGCAPTION],\n    [TAG_NAMES.FIGURE, TAG_ID.FIGURE],\n    [TAG_NAMES.FONT, TAG_ID.FONT],\n    [TAG_NAMES.FOOTER, TAG_ID.FOOTER],\n    [TAG_NAMES.FOREIGN_OBJECT, TAG_ID.FOREIGN_OBJECT],\n    [TAG_NAMES.FORM, TAG_ID.FORM],\n    [TAG_NAMES.FRAME, TAG_ID.FRAME],\n    [TAG_NAMES.FRAMESET, TAG_ID.FRAMESET],\n    [TAG_NAMES.H1, TAG_ID.H1],\n    [TAG_NAMES.H2, TAG_ID.H2],\n    [TAG_NAMES.H3, TAG_ID.H3],\n    [TAG_NAMES.H4, TAG_ID.H4],\n    [TAG_NAMES.H5, TAG_ID.H5],\n    [TAG_NAMES.H6, TAG_ID.H6],\n    [TAG_NAMES.HEAD, TAG_ID.HEAD],\n    [TAG_NAMES.HEADER, TAG_ID.HEADER],\n    [TAG_NAMES.HGROUP, TAG_ID.HGROUP],\n    [TAG_NAMES.HR, TAG_ID.HR],\n    [TAG_NAMES.HTML, TAG_ID.HTML],\n    [TAG_NAMES.I, TAG_ID.I],\n    [TAG_NAMES.IMG, TAG_ID.IMG],\n    [TAG_NAMES.IMAGE, TAG_ID.IMAGE],\n    [TAG_NAMES.INPUT, TAG_ID.INPUT],\n    [TAG_NAMES.IFRAME, TAG_ID.IFRAME],\n    [TAG_NAMES.KEYGEN, TAG_ID.KEYGEN],\n    [TAG_NAMES.LABEL, TAG_ID.LABEL],\n    [TAG_NAMES.LI, TAG_ID.LI],\n    [TAG_NAMES.LINK, TAG_ID.LINK],\n    [TAG_NAMES.LISTING, TAG_ID.LISTING],\n    [TAG_NAMES.MAIN, TAG_ID.MAIN],\n    [TAG_NAMES.MALIGNMARK, TAG_ID.MALIGNMARK],\n    [TAG_NAMES.MARQUEE, TAG_ID.MARQUEE],\n    [TAG_NAMES.MATH, TAG_ID.MATH],\n    [TAG_NAMES.MENU, TAG_ID.MENU],\n    [TAG_NAMES.META, TAG_ID.META],\n    [TAG_NAMES.MGLYPH, TAG_ID.MGLYPH],\n    [TAG_NAMES.MI, TAG_ID.MI],\n    [TAG_NAMES.MO, TAG_ID.MO],\n    [TAG_NAMES.MN, TAG_ID.MN],\n    [TAG_NAMES.MS, TAG_ID.MS],\n    [TAG_NAMES.MTEXT, TAG_ID.MTEXT],\n    [TAG_NAMES.NAV, TAG_ID.NAV],\n    [TAG_NAMES.NOBR, TAG_ID.NOBR],\n    [TAG_NAMES.NOFRAMES, TAG_ID.NOFRAMES],\n    [TAG_NAMES.NOEMBED, TAG_ID.NOEMBED],\n    [TAG_NAMES.NOSCRIPT, TAG_ID.NOSCRIPT],\n    [TAG_NAMES.OBJECT, TAG_ID.OBJECT],\n    [TAG_NAMES.OL, TAG_ID.OL],\n    [TAG_NAMES.OPTGROUP, TAG_ID.OPTGROUP],\n    [TAG_NAMES.OPTION, TAG_ID.OPTION],\n    [TAG_NAMES.P, TAG_ID.P],\n    [TAG_NAMES.PARAM, TAG_ID.PARAM],\n    [TAG_NAMES.PLAINTEXT, TAG_ID.PLAINTEXT],\n    [TAG_NAMES.PRE, TAG_ID.PRE],\n    [TAG_NAMES.RB, TAG_ID.RB],\n    [TAG_NAMES.RP, TAG_ID.RP],\n    [TAG_NAMES.RT, TAG_ID.RT],\n    [TAG_NAMES.RTC, TAG_ID.RTC],\n    [TAG_NAMES.RUBY, TAG_ID.RUBY],\n    [TAG_NAMES.S, TAG_ID.S],\n    [TAG_NAMES.SCRIPT, TAG_ID.SCRIPT],\n    [TAG_NAMES.SEARCH, TAG_ID.SEARCH],\n    [TAG_NAMES.SECTION, TAG_ID.SECTION],\n    [TAG_NAMES.SELECT, TAG_ID.SELECT],\n    [TAG_NAMES.SOURCE, TAG_ID.SOURCE],\n    [TAG_NAMES.SMALL, TAG_ID.SMALL],\n    [TAG_NAMES.SPAN, TAG_ID.SPAN],\n    [TAG_NAMES.STRIKE, TAG_ID.STRIKE],\n    [TAG_NAMES.STRONG, TAG_ID.STRONG],\n    [TAG_NAMES.STYLE, TAG_ID.STYLE],\n    [TAG_NAMES.SUB, TAG_ID.SUB],\n    [TAG_NAMES.SUMMARY, TAG_ID.SUMMARY],\n    [TAG_NAMES.SUP, TAG_ID.SUP],\n    [TAG_NAMES.TABLE, TAG_ID.TABLE],\n    [TAG_NAMES.TBODY, TAG_ID.TBODY],\n    [TAG_NAMES.TEMPLATE, TAG_ID.TEMPLATE],\n    [TAG_NAMES.TEXTAREA, TAG_ID.TEXTAREA],\n    [TAG_NAMES.TFOOT, TAG_ID.TFOOT],\n    [TAG_NAMES.TD, TAG_ID.TD],\n    [TAG_NAMES.TH, TAG_ID.TH],\n    [TAG_NAMES.THEAD, TAG_ID.THEAD],\n    [TAG_NAMES.TITLE, TAG_ID.TITLE],\n    [TAG_NAMES.TR, TAG_ID.TR],\n    [TAG_NAMES.TRACK, TAG_ID.TRACK],\n    [TAG_NAMES.TT, TAG_ID.TT],\n    [TAG_NAMES.U, TAG_ID.U],\n    [TAG_NAMES.UL, TAG_ID.UL],\n    [TAG_NAMES.SVG, TAG_ID.SVG],\n    [TAG_NAMES.VAR, TAG_ID.VAR],\n    [TAG_NAMES.WBR, TAG_ID.WBR],\n    [TAG_NAMES.XMP, TAG_ID.XMP],\n]);\nexport function getTagID(tagName) {\n    var _a;\n    return (_a = TAG_NAME_TO_ID.get(tagName)) !== null && _a !== void 0 ? _a : TAG_ID.UNKNOWN;\n}\nconst $ = TAG_ID;\nexport const SPECIAL_ELEMENTS = {\n    [NS.HTML]: new Set([\n        $.ADDRESS,\n        $.APPLET,\n        $.AREA,\n        $.ARTICLE,\n        $.ASIDE,\n        $.BASE,\n        $.BASEFONT,\n        $.BGSOUND,\n        $.BLOCKQUOTE,\n        $.BODY,\n        $.BR,\n        $.BUTTON,\n        $.CAPTION,\n        $.CENTER,\n        $.COL,\n        $.COLGROUP,\n        $.DD,\n        $.DETAILS,\n        $.DIR,\n        $.DIV,\n        $.DL,\n        $.DT,\n        $.EMBED,\n        $.FIELDSET,\n        $.FIGCAPTION,\n        $.FIGURE,\n        $.FOOTER,\n        $.FORM,\n        $.FRAME,\n        $.FRAMESET,\n        $.H1,\n        $.H2,\n        $.H3,\n        $.H4,\n        $.H5,\n        $.H6,\n        $.HEAD,\n        $.HEADER,\n        $.HGROUP,\n        $.HR,\n        $.HTML,\n        $.IFRAME,\n        $.IMG,\n        $.INPUT,\n        $.LI,\n        $.LINK,\n        $.LISTING,\n        $.MAIN,\n        $.MARQUEE,\n        $.MENU,\n        $.META,\n        $.NAV,\n        $.NOEMBED,\n        $.NOFRAMES,\n        $.NOSCRIPT,\n        $.OBJECT,\n        $.OL,\n        $.P,\n        $.PARAM,\n        $.PLAINTEXT,\n        $.PRE,\n        $.SCRIPT,\n        $.SECTION,\n        $.SELECT,\n        $.SOURCE,\n        $.STYLE,\n        $.SUMMARY,\n        $.TABLE,\n        $.TBODY,\n        $.TD,\n        $.TEMPLATE,\n        $.TEXTAREA,\n        $.TFOOT,\n        $.TH,\n        $.THEAD,\n        $.TITLE,\n        $.TR,\n        $.TRACK,\n        $.UL,\n        $.WBR,\n        $.XMP,\n    ]),\n    [NS.MATHML]: new Set([$.MI, $.MO, $.MN, $.MS, $.MTEXT, $.ANNOTATION_XML]),\n    [NS.SVG]: new Set([$.TITLE, $.FOREIGN_OBJECT, $.DESC]),\n    [NS.XLINK]: new Set(),\n    [NS.XML]: new Set(),\n    [NS.XMLNS]: new Set(),\n};\nexport const NUMBERED_HEADERS = new Set([$.H1, $.H2, $.H3, $.H4, $.H5, $.H6]);\nconst UNESCAPED_TEXT = new Set([\n    TAG_NAMES.STYLE,\n    TAG_NAMES.SCRIPT,\n    TAG_NAMES.XMP,\n    TAG_NAMES.IFRAME,\n    TAG_NAMES.NOEMBED,\n    TAG_NAMES.NOFRAMES,\n    TAG_NAMES.PLAINTEXT,\n]);\nexport function hasUnescapedText(tn, scriptingEnabled) {\n    return UNESCAPED_TEXT.has(tn) || (scriptingEnabled && tn === TAG_NAMES.NOSCRIPT);\n}\n","import { Preprocessor } from './preprocessor.js';\nimport { CODE_POINTS as $, SEQUENCES as $$, REPLACEMENT_CHARACTER, isSurrogate, isUndefinedCodePoint, isControlCodePoint, } from '../common/unicode.js';\nimport { TokenType, getTokenAttr, } from '../common/token.js';\nimport { htmlDecodeTree, EntityDecoder, DecodingMode } from 'entities/lib/decode.js';\nimport { ERR } from '../common/error-codes.js';\nimport { TAG_ID, getTagID } from '../common/html.js';\n//States\nvar State;\n(function (State) {\n    State[State[\"DATA\"] = 0] = \"DATA\";\n    State[State[\"RCDATA\"] = 1] = \"RCDATA\";\n    State[State[\"RAWTEXT\"] = 2] = \"RAWTEXT\";\n    State[State[\"SCRIPT_DATA\"] = 3] = \"SCRIPT_DATA\";\n    State[State[\"PLAINTEXT\"] = 4] = \"PLAINTEXT\";\n    State[State[\"TAG_OPEN\"] = 5] = \"TAG_OPEN\";\n    State[State[\"END_TAG_OPEN\"] = 6] = \"END_TAG_OPEN\";\n    State[State[\"TAG_NAME\"] = 7] = \"TAG_NAME\";\n    State[State[\"RCDATA_LESS_THAN_SIGN\"] = 8] = \"RCDATA_LESS_THAN_SIGN\";\n    State[State[\"RCDATA_END_TAG_OPEN\"] = 9] = \"RCDATA_END_TAG_OPEN\";\n    State[State[\"RCDATA_END_TAG_NAME\"] = 10] = \"RCDATA_END_TAG_NAME\";\n    State[State[\"RAWTEXT_LESS_THAN_SIGN\"] = 11] = \"RAWTEXT_LESS_THAN_SIGN\";\n    State[State[\"RAWTEXT_END_TAG_OPEN\"] = 12] = \"RAWTEXT_END_TAG_OPEN\";\n    State[State[\"RAWTEXT_END_TAG_NAME\"] = 13] = \"RAWTEXT_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_LESS_THAN_SIGN\"] = 14] = \"SCRIPT_DATA_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_END_TAG_OPEN\"] = 15] = \"SCRIPT_DATA_END_TAG_OPEN\";\n    State[State[\"SCRIPT_DATA_END_TAG_NAME\"] = 16] = \"SCRIPT_DATA_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_ESCAPE_START\"] = 17] = \"SCRIPT_DATA_ESCAPE_START\";\n    State[State[\"SCRIPT_DATA_ESCAPE_START_DASH\"] = 18] = \"SCRIPT_DATA_ESCAPE_START_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED\"] = 19] = \"SCRIPT_DATA_ESCAPED\";\n    State[State[\"SCRIPT_DATA_ESCAPED_DASH\"] = 20] = \"SCRIPT_DATA_ESCAPED_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED_DASH_DASH\"] = 21] = \"SCRIPT_DATA_ESCAPED_DASH_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\"] = 22] = \"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\"] = 23] = \"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\";\n    State[State[\"SCRIPT_DATA_ESCAPED_END_TAG_NAME\"] = 24] = \"SCRIPT_DATA_ESCAPED_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPE_START\"] = 25] = \"SCRIPT_DATA_DOUBLE_ESCAPE_START\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED\"] = 26] = \"SCRIPT_DATA_DOUBLE_ESCAPED\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\"] = 27] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\"] = 28] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\"] = 29] = \"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPE_END\"] = 30] = \"SCRIPT_DATA_DOUBLE_ESCAPE_END\";\n    State[State[\"BEFORE_ATTRIBUTE_NAME\"] = 31] = \"BEFORE_ATTRIBUTE_NAME\";\n    State[State[\"ATTRIBUTE_NAME\"] = 32] = \"ATTRIBUTE_NAME\";\n    State[State[\"AFTER_ATTRIBUTE_NAME\"] = 33] = \"AFTER_ATTRIBUTE_NAME\";\n    State[State[\"BEFORE_ATTRIBUTE_VALUE\"] = 34] = \"BEFORE_ATTRIBUTE_VALUE\";\n    State[State[\"ATTRIBUTE_VALUE_DOUBLE_QUOTED\"] = 35] = \"ATTRIBUTE_VALUE_DOUBLE_QUOTED\";\n    State[State[\"ATTRIBUTE_VALUE_SINGLE_QUOTED\"] = 36] = \"ATTRIBUTE_VALUE_SINGLE_QUOTED\";\n    State[State[\"ATTRIBUTE_VALUE_UNQUOTED\"] = 37] = \"ATTRIBUTE_VALUE_UNQUOTED\";\n    State[State[\"AFTER_ATTRIBUTE_VALUE_QUOTED\"] = 38] = \"AFTER_ATTRIBUTE_VALUE_QUOTED\";\n    State[State[\"SELF_CLOSING_START_TAG\"] = 39] = \"SELF_CLOSING_START_TAG\";\n    State[State[\"BOGUS_COMMENT\"] = 40] = \"BOGUS_COMMENT\";\n    State[State[\"MARKUP_DECLARATION_OPEN\"] = 41] = \"MARKUP_DECLARATION_OPEN\";\n    State[State[\"COMMENT_START\"] = 42] = \"COMMENT_START\";\n    State[State[\"COMMENT_START_DASH\"] = 43] = \"COMMENT_START_DASH\";\n    State[State[\"COMMENT\"] = 44] = \"COMMENT\";\n    State[State[\"COMMENT_LESS_THAN_SIGN\"] = 45] = \"COMMENT_LESS_THAN_SIGN\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG\"] = 46] = \"COMMENT_LESS_THAN_SIGN_BANG\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG_DASH\"] = 47] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\"] = 48] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\";\n    State[State[\"COMMENT_END_DASH\"] = 49] = \"COMMENT_END_DASH\";\n    State[State[\"COMMENT_END\"] = 50] = \"COMMENT_END\";\n    State[State[\"COMMENT_END_BANG\"] = 51] = \"COMMENT_END_BANG\";\n    State[State[\"DOCTYPE\"] = 52] = \"DOCTYPE\";\n    State[State[\"BEFORE_DOCTYPE_NAME\"] = 53] = \"BEFORE_DOCTYPE_NAME\";\n    State[State[\"DOCTYPE_NAME\"] = 54] = \"DOCTYPE_NAME\";\n    State[State[\"AFTER_DOCTYPE_NAME\"] = 55] = \"AFTER_DOCTYPE_NAME\";\n    State[State[\"AFTER_DOCTYPE_PUBLIC_KEYWORD\"] = 56] = \"AFTER_DOCTYPE_PUBLIC_KEYWORD\";\n    State[State[\"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\"] = 57] = \"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\";\n    State[State[\"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\"] = 58] = \"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\";\n    State[State[\"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\"] = 59] = \"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\";\n    State[State[\"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\"] = 60] = \"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\";\n    State[State[\"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\"] = 61] = \"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\";\n    State[State[\"AFTER_DOCTYPE_SYSTEM_KEYWORD\"] = 62] = \"AFTER_DOCTYPE_SYSTEM_KEYWORD\";\n    State[State[\"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\"] = 63] = \"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\";\n    State[State[\"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\"] = 64] = \"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\";\n    State[State[\"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\"] = 65] = \"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\";\n    State[State[\"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\"] = 66] = \"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\";\n    State[State[\"BOGUS_DOCTYPE\"] = 67] = \"BOGUS_DOCTYPE\";\n    State[State[\"CDATA_SECTION\"] = 68] = \"CDATA_SECTION\";\n    State[State[\"CDATA_SECTION_BRACKET\"] = 69] = \"CDATA_SECTION_BRACKET\";\n    State[State[\"CDATA_SECTION_END\"] = 70] = \"CDATA_SECTION_END\";\n    State[State[\"CHARACTER_REFERENCE\"] = 71] = \"CHARACTER_REFERENCE\";\n    State[State[\"AMBIGUOUS_AMPERSAND\"] = 72] = \"AMBIGUOUS_AMPERSAND\";\n})(State || (State = {}));\n//Tokenizer initial states for different modes\nexport const TokenizerMode = {\n    DATA: State.DATA,\n    RCDATA: State.RCDATA,\n    RAWTEXT: State.RAWTEXT,\n    SCRIPT_DATA: State.SCRIPT_DATA,\n    PLAINTEXT: State.PLAINTEXT,\n    CDATA_SECTION: State.CDATA_SECTION,\n};\n//Utils\n//OPTIMIZATION: these utility functions should not be moved out of this module. V8 Crankshaft will not inline\n//this functions if they will be situated in another module due to context switch.\n//Always perform inlining check before modifying this functions ('node --trace-inlining').\nfunction isAsciiDigit(cp) {\n    return cp >= $.DIGIT_0 && cp <= $.DIGIT_9;\n}\nfunction isAsciiUpper(cp) {\n    return cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_Z;\n}\nfunction isAsciiLower(cp) {\n    return cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_Z;\n}\nfunction isAsciiLetter(cp) {\n    return isAsciiLower(cp) || isAsciiUpper(cp);\n}\nfunction isAsciiAlphaNumeric(cp) {\n    return isAsciiLetter(cp) || isAsciiDigit(cp);\n}\nfunction toAsciiLower(cp) {\n    return cp + 32;\n}\nfunction isWhitespace(cp) {\n    return cp === $.SPACE || cp === $.LINE_FEED || cp === $.TABULATION || cp === $.FORM_FEED;\n}\nfunction isScriptDataDoubleEscapeSequenceEnd(cp) {\n    return isWhitespace(cp) || cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN;\n}\nfunction getErrorForNumericCharacterReference(code) {\n    if (code === $.NULL) {\n        return ERR.nullCharacterReference;\n    }\n    else if (code > 1114111) {\n        return ERR.characterReferenceOutsideUnicodeRange;\n    }\n    else if (isSurrogate(code)) {\n        return ERR.surrogateCharacterReference;\n    }\n    else if (isUndefinedCodePoint(code)) {\n        return ERR.noncharacterCharacterReference;\n    }\n    else if (isControlCodePoint(code) || code === $.CARRIAGE_RETURN) {\n        return ERR.controlCharacterReference;\n    }\n    return null;\n}\n//Tokenizer\nexport class Tokenizer {\n    constructor(options, handler) {\n        this.options = options;\n        this.handler = handler;\n        this.paused = false;\n        /** Ensures that the parsing loop isn't run multiple times at once. */\n        this.inLoop = false;\n        /**\n         * Indicates that the current adjusted node exists, is not an element in the HTML namespace,\n         * and that it is not an integration point for either MathML or HTML.\n         *\n         * @see {@link https://html.spec.whatwg.org/multipage/parsing.html#tree-construction}\n         */\n        this.inForeignNode = false;\n        this.lastStartTagName = '';\n        this.active = false;\n        this.state = State.DATA;\n        this.returnState = State.DATA;\n        this.entityStartPos = 0;\n        this.consumedAfterSnapshot = -1;\n        this.currentCharacterToken = null;\n        this.currentToken = null;\n        this.currentAttr = { name: '', value: '' };\n        this.preprocessor = new Preprocessor(handler);\n        this.currentLocation = this.getCurrentLocation(-1);\n        this.entityDecoder = new EntityDecoder(htmlDecodeTree, (cp, consumed) => {\n            // Note: Set `pos` _before_ flushing, as flushing might drop\n            // the current chunk and invalidate `entityStartPos`.\n            this.preprocessor.pos = this.entityStartPos + consumed - 1;\n            this._flushCodePointConsumedAsCharacterReference(cp);\n        }, handler.onParseError\n            ? {\n                missingSemicolonAfterCharacterReference: () => {\n                    this._err(ERR.missingSemicolonAfterCharacterReference, 1);\n                },\n                absenceOfDigitsInNumericCharacterReference: (consumed) => {\n                    this._err(ERR.absenceOfDigitsInNumericCharacterReference, this.entityStartPos - this.preprocessor.pos + consumed);\n                },\n                validateNumericCharacterReference: (code) => {\n                    const error = getErrorForNumericCharacterReference(code);\n                    if (error)\n                        this._err(error, 1);\n                },\n            }\n            : undefined);\n    }\n    //Errors\n    _err(code, cpOffset = 0) {\n        var _a, _b;\n        (_b = (_a = this.handler).onParseError) === null || _b === void 0 ? void 0 : _b.call(_a, this.preprocessor.getError(code, cpOffset));\n    }\n    // NOTE: `offset` may never run across line boundaries.\n    getCurrentLocation(offset) {\n        if (!this.options.sourceCodeLocationInfo) {\n            return null;\n        }\n        return {\n            startLine: this.preprocessor.line,\n            startCol: this.preprocessor.col - offset,\n            startOffset: this.preprocessor.offset - offset,\n            endLine: -1,\n            endCol: -1,\n            endOffset: -1,\n        };\n    }\n    _runParsingLoop() {\n        if (this.inLoop)\n            return;\n        this.inLoop = true;\n        while (this.active && !this.paused) {\n            this.consumedAfterSnapshot = 0;\n            const cp = this._consume();\n            if (!this._ensureHibernation()) {\n                this._callState(cp);\n            }\n        }\n        this.inLoop = false;\n    }\n    //API\n    pause() {\n        this.paused = true;\n    }\n    resume(writeCallback) {\n        if (!this.paused) {\n            throw new Error('Parser was already resumed');\n        }\n        this.paused = false;\n        // Necessary for synchronous resume.\n        if (this.inLoop)\n            return;\n        this._runParsingLoop();\n        if (!this.paused) {\n            writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();\n        }\n    }\n    write(chunk, isLastChunk, writeCallback) {\n        this.active = true;\n        this.preprocessor.write(chunk, isLastChunk);\n        this._runParsingLoop();\n        if (!this.paused) {\n            writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();\n        }\n    }\n    insertHtmlAtCurrentPos(chunk) {\n        this.active = true;\n        this.preprocessor.insertHtmlAtCurrentPos(chunk);\n        this._runParsingLoop();\n    }\n    //Hibernation\n    _ensureHibernation() {\n        if (this.preprocessor.endOfChunkHit) {\n            this.preprocessor.retreat(this.consumedAfterSnapshot);\n            this.consumedAfterSnapshot = 0;\n            this.active = false;\n            return true;\n        }\n        return false;\n    }\n    //Consumption\n    _consume() {\n        this.consumedAfterSnapshot++;\n        return this.preprocessor.advance();\n    }\n    _advanceBy(count) {\n        this.consumedAfterSnapshot += count;\n        for (let i = 0; i < count; i++) {\n            this.preprocessor.advance();\n        }\n    }\n    _consumeSequenceIfMatch(pattern, caseSensitive) {\n        if (this.preprocessor.startsWith(pattern, caseSensitive)) {\n            // We will already have consumed one character before calling this method.\n            this._advanceBy(pattern.length - 1);\n            return true;\n        }\n        return false;\n    }\n    //Token creation\n    _createStartTagToken() {\n        this.currentToken = {\n            type: TokenType.START_TAG,\n            tagName: '',\n            tagID: TAG_ID.UNKNOWN,\n            selfClosing: false,\n            ackSelfClosing: false,\n            attrs: [],\n            location: this.getCurrentLocation(1),\n        };\n    }\n    _createEndTagToken() {\n        this.currentToken = {\n            type: TokenType.END_TAG,\n            tagName: '',\n            tagID: TAG_ID.UNKNOWN,\n            selfClosing: false,\n            ackSelfClosing: false,\n            attrs: [],\n            location: this.getCurrentLocation(2),\n        };\n    }\n    _createCommentToken(offset) {\n        this.currentToken = {\n            type: TokenType.COMMENT,\n            data: '',\n            location: this.getCurrentLocation(offset),\n        };\n    }\n    _createDoctypeToken(initialName) {\n        this.currentToken = {\n            type: TokenType.DOCTYPE,\n            name: initialName,\n            forceQuirks: false,\n            publicId: null,\n            systemId: null,\n            location: this.currentLocation,\n        };\n    }\n    _createCharacterToken(type, chars) {\n        this.currentCharacterToken = {\n            type,\n            chars,\n            location: this.currentLocation,\n        };\n    }\n    //Tag attributes\n    _createAttr(attrNameFirstCh) {\n        this.currentAttr = {\n            name: attrNameFirstCh,\n            value: '',\n        };\n        this.currentLocation = this.getCurrentLocation(0);\n    }\n    _leaveAttrName() {\n        var _a;\n        var _b;\n        const token = this.currentToken;\n        if (getTokenAttr(token, this.currentAttr.name) === null) {\n            token.attrs.push(this.currentAttr);\n            if (token.location && this.currentLocation) {\n                const attrLocations = ((_a = (_b = token.location).attrs) !== null && _a !== void 0 ? _a : (_b.attrs = Object.create(null)));\n                attrLocations[this.currentAttr.name] = this.currentLocation;\n                // Set end location\n                this._leaveAttrValue();\n            }\n        }\n        else {\n            this._err(ERR.duplicateAttribute);\n        }\n    }\n    _leaveAttrValue() {\n        if (this.currentLocation) {\n            this.currentLocation.endLine = this.preprocessor.line;\n            this.currentLocation.endCol = this.preprocessor.col;\n            this.currentLocation.endOffset = this.preprocessor.offset;\n        }\n    }\n    //Token emission\n    prepareToken(ct) {\n        this._emitCurrentCharacterToken(ct.location);\n        this.currentToken = null;\n        if (ct.location) {\n            ct.location.endLine = this.preprocessor.line;\n            ct.location.endCol = this.preprocessor.col + 1;\n            ct.location.endOffset = this.preprocessor.offset + 1;\n        }\n        this.currentLocation = this.getCurrentLocation(-1);\n    }\n    emitCurrentTagToken() {\n        const ct = this.currentToken;\n        this.prepareToken(ct);\n        ct.tagID = getTagID(ct.tagName);\n        if (ct.type === TokenType.START_TAG) {\n            this.lastStartTagName = ct.tagName;\n            this.handler.onStartTag(ct);\n        }\n        else {\n            if (ct.attrs.length > 0) {\n                this._err(ERR.endTagWithAttributes);\n            }\n            if (ct.selfClosing) {\n                this._err(ERR.endTagWithTrailingSolidus);\n            }\n            this.handler.onEndTag(ct);\n        }\n        this.preprocessor.dropParsedChunk();\n    }\n    emitCurrentComment(ct) {\n        this.prepareToken(ct);\n        this.handler.onComment(ct);\n        this.preprocessor.dropParsedChunk();\n    }\n    emitCurrentDoctype(ct) {\n        this.prepareToken(ct);\n        this.handler.onDoctype(ct);\n        this.preprocessor.dropParsedChunk();\n    }\n    _emitCurrentCharacterToken(nextLocation) {\n        if (this.currentCharacterToken) {\n            //NOTE: if we have a pending character token, make it's end location equal to the\n            //current token's start location.\n            if (nextLocation && this.currentCharacterToken.location) {\n                this.currentCharacterToken.location.endLine = nextLocation.startLine;\n                this.currentCharacterToken.location.endCol = nextLocation.startCol;\n                this.currentCharacterToken.location.endOffset = nextLocation.startOffset;\n            }\n            switch (this.currentCharacterToken.type) {\n                case TokenType.CHARACTER: {\n                    this.handler.onCharacter(this.currentCharacterToken);\n                    break;\n                }\n                case TokenType.NULL_CHARACTER: {\n                    this.handler.onNullCharacter(this.currentCharacterToken);\n                    break;\n                }\n                case TokenType.WHITESPACE_CHARACTER: {\n                    this.handler.onWhitespaceCharacter(this.currentCharacterToken);\n                    break;\n                }\n            }\n            this.currentCharacterToken = null;\n        }\n    }\n    _emitEOFToken() {\n        const location = this.getCurrentLocation(0);\n        if (location) {\n            location.endLine = location.startLine;\n            location.endCol = location.startCol;\n            location.endOffset = location.startOffset;\n        }\n        this._emitCurrentCharacterToken(location);\n        this.handler.onEof({ type: TokenType.EOF, location });\n        this.active = false;\n    }\n    //Characters emission\n    //OPTIMIZATION: The specification uses only one type of character token (one token per character).\n    //This causes a huge memory overhead and a lot of unnecessary parser loops. parse5 uses 3 groups of characters.\n    //If we have a sequence of characters that belong to the same group, the parser can process it\n    //as a single solid character token.\n    //So, there are 3 types of character tokens in parse5:\n    //1)TokenType.NULL_CHARACTER - \\u0000-character sequences (e.g. '\\u0000\\u0000\\u0000')\n    //2)TokenType.WHITESPACE_CHARACTER - any whitespace/new-line character sequences (e.g. '\\n  \\r\\t   \\f')\n    //3)TokenType.CHARACTER - any character sequence which don't belong to groups 1 and 2 (e.g. 'abcdef1234@@#$%^')\n    _appendCharToCurrentCharacterToken(type, ch) {\n        if (this.currentCharacterToken) {\n            if (this.currentCharacterToken.type === type) {\n                this.currentCharacterToken.chars += ch;\n                return;\n            }\n            else {\n                this.currentLocation = this.getCurrentLocation(0);\n                this._emitCurrentCharacterToken(this.currentLocation);\n                this.preprocessor.dropParsedChunk();\n            }\n        }\n        this._createCharacterToken(type, ch);\n    }\n    _emitCodePoint(cp) {\n        const type = isWhitespace(cp)\n            ? TokenType.WHITESPACE_CHARACTER\n            : cp === $.NULL\n                ? TokenType.NULL_CHARACTER\n                : TokenType.CHARACTER;\n        this._appendCharToCurrentCharacterToken(type, String.fromCodePoint(cp));\n    }\n    //NOTE: used when we emit characters explicitly.\n    //This is always for non-whitespace and non-null characters, which allows us to avoid additional checks.\n    _emitChars(ch) {\n        this._appendCharToCurrentCharacterToken(TokenType.CHARACTER, ch);\n    }\n    // Character reference helpers\n    _startCharacterReference() {\n        this.returnState = this.state;\n        this.state = State.CHARACTER_REFERENCE;\n        this.entityStartPos = this.preprocessor.pos;\n        this.entityDecoder.startEntity(this._isCharacterReferenceInAttribute() ? DecodingMode.Attribute : DecodingMode.Legacy);\n    }\n    _isCharacterReferenceInAttribute() {\n        return (this.returnState === State.ATTRIBUTE_VALUE_DOUBLE_QUOTED ||\n            this.returnState === State.ATTRIBUTE_VALUE_SINGLE_QUOTED ||\n            this.returnState === State.ATTRIBUTE_VALUE_UNQUOTED);\n    }\n    _flushCodePointConsumedAsCharacterReference(cp) {\n        if (this._isCharacterReferenceInAttribute()) {\n            this.currentAttr.value += String.fromCodePoint(cp);\n        }\n        else {\n            this._emitCodePoint(cp);\n        }\n    }\n    // Calling states this way turns out to be much faster than any other approach.\n    _callState(cp) {\n        switch (this.state) {\n            case State.DATA: {\n                this._stateData(cp);\n                break;\n            }\n            case State.RCDATA: {\n                this._stateRcdata(cp);\n                break;\n            }\n            case State.RAWTEXT: {\n                this._stateRawtext(cp);\n                break;\n            }\n            case State.SCRIPT_DATA: {\n                this._stateScriptData(cp);\n                break;\n            }\n            case State.PLAINTEXT: {\n                this._statePlaintext(cp);\n                break;\n            }\n            case State.TAG_OPEN: {\n                this._stateTagOpen(cp);\n                break;\n            }\n            case State.END_TAG_OPEN: {\n                this._stateEndTagOpen(cp);\n                break;\n            }\n            case State.TAG_NAME: {\n                this._stateTagName(cp);\n                break;\n            }\n            case State.RCDATA_LESS_THAN_SIGN: {\n                this._stateRcdataLessThanSign(cp);\n                break;\n            }\n            case State.RCDATA_END_TAG_OPEN: {\n                this._stateRcdataEndTagOpen(cp);\n                break;\n            }\n            case State.RCDATA_END_TAG_NAME: {\n                this._stateRcdataEndTagName(cp);\n                break;\n            }\n            case State.RAWTEXT_LESS_THAN_SIGN: {\n                this._stateRawtextLessThanSign(cp);\n                break;\n            }\n            case State.RAWTEXT_END_TAG_OPEN: {\n                this._stateRawtextEndTagOpen(cp);\n                break;\n            }\n            case State.RAWTEXT_END_TAG_NAME: {\n                this._stateRawtextEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_LESS_THAN_SIGN: {\n                this._stateScriptDataLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_END_TAG_OPEN: {\n                this._stateScriptDataEndTagOpen(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_END_TAG_NAME: {\n                this._stateScriptDataEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPE_START: {\n                this._stateScriptDataEscapeStart(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPE_START_DASH: {\n                this._stateScriptDataEscapeStartDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED: {\n                this._stateScriptDataEscaped(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_DASH: {\n                this._stateScriptDataEscapedDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_DASH_DASH: {\n                this._stateScriptDataEscapedDashDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN: {\n                this._stateScriptDataEscapedLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN: {\n                this._stateScriptDataEscapedEndTagOpen(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_END_TAG_NAME: {\n                this._stateScriptDataEscapedEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPE_START: {\n                this._stateScriptDataDoubleEscapeStart(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED: {\n                this._stateScriptDataDoubleEscaped(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH: {\n                this._stateScriptDataDoubleEscapedDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH: {\n                this._stateScriptDataDoubleEscapedDashDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN: {\n                this._stateScriptDataDoubleEscapedLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPE_END: {\n                this._stateScriptDataDoubleEscapeEnd(cp);\n                break;\n            }\n            case State.BEFORE_ATTRIBUTE_NAME: {\n                this._stateBeforeAttributeName(cp);\n                break;\n            }\n            case State.ATTRIBUTE_NAME: {\n                this._stateAttributeName(cp);\n                break;\n            }\n            case State.AFTER_ATTRIBUTE_NAME: {\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case State.BEFORE_ATTRIBUTE_VALUE: {\n                this._stateBeforeAttributeValue(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_DOUBLE_QUOTED: {\n                this._stateAttributeValueDoubleQuoted(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_SINGLE_QUOTED: {\n                this._stateAttributeValueSingleQuoted(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_UNQUOTED: {\n                this._stateAttributeValueUnquoted(cp);\n                break;\n            }\n            case State.AFTER_ATTRIBUTE_VALUE_QUOTED: {\n                this._stateAfterAttributeValueQuoted(cp);\n                break;\n            }\n            case State.SELF_CLOSING_START_TAG: {\n                this._stateSelfClosingStartTag(cp);\n                break;\n            }\n            case State.BOGUS_COMMENT: {\n                this._stateBogusComment(cp);\n                break;\n            }\n            case State.MARKUP_DECLARATION_OPEN: {\n                this._stateMarkupDeclarationOpen(cp);\n                break;\n            }\n            case State.COMMENT_START: {\n                this._stateCommentStart(cp);\n                break;\n            }\n            case State.COMMENT_START_DASH: {\n                this._stateCommentStartDash(cp);\n                break;\n            }\n            case State.COMMENT: {\n                this._stateComment(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN: {\n                this._stateCommentLessThanSign(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG: {\n                this._stateCommentLessThanSignBang(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG_DASH: {\n                this._stateCommentLessThanSignBangDash(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH: {\n                this._stateCommentLessThanSignBangDashDash(cp);\n                break;\n            }\n            case State.COMMENT_END_DASH: {\n                this._stateCommentEndDash(cp);\n                break;\n            }\n            case State.COMMENT_END: {\n                this._stateCommentEnd(cp);\n                break;\n            }\n            case State.COMMENT_END_BANG: {\n                this._stateCommentEndBang(cp);\n                break;\n            }\n            case State.DOCTYPE: {\n                this._stateDoctype(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_NAME: {\n                this._stateBeforeDoctypeName(cp);\n                break;\n            }\n            case State.DOCTYPE_NAME: {\n                this._stateDoctypeName(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_NAME: {\n                this._stateAfterDoctypeName(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_PUBLIC_KEYWORD: {\n                this._stateAfterDoctypePublicKeyword(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER: {\n                this._stateBeforeDoctypePublicIdentifier(cp);\n                break;\n            }\n            case State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED: {\n                this._stateDoctypePublicIdentifierDoubleQuoted(cp);\n                break;\n            }\n            case State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED: {\n                this._stateDoctypePublicIdentifierSingleQuoted(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER: {\n                this._stateAfterDoctypePublicIdentifier(cp);\n                break;\n            }\n            case State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS: {\n                this._stateBetweenDoctypePublicAndSystemIdentifiers(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_SYSTEM_KEYWORD: {\n                this._stateAfterDoctypeSystemKeyword(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER: {\n                this._stateBeforeDoctypeSystemIdentifier(cp);\n                break;\n            }\n            case State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED: {\n                this._stateDoctypeSystemIdentifierDoubleQuoted(cp);\n                break;\n            }\n            case State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED: {\n                this._stateDoctypeSystemIdentifierSingleQuoted(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER: {\n                this._stateAfterDoctypeSystemIdentifier(cp);\n                break;\n            }\n            case State.BOGUS_DOCTYPE: {\n                this._stateBogusDoctype(cp);\n                break;\n            }\n            case State.CDATA_SECTION: {\n                this._stateCdataSection(cp);\n                break;\n            }\n            case State.CDATA_SECTION_BRACKET: {\n                this._stateCdataSectionBracket(cp);\n                break;\n            }\n            case State.CDATA_SECTION_END: {\n                this._stateCdataSectionEnd(cp);\n                break;\n            }\n            case State.CHARACTER_REFERENCE: {\n                this._stateCharacterReference();\n                break;\n            }\n            case State.AMBIGUOUS_AMPERSAND: {\n                this._stateAmbiguousAmpersand(cp);\n                break;\n            }\n            default: {\n                throw new Error('Unknown state');\n            }\n        }\n    }\n    // State machine\n    // Data state\n    //------------------------------------------------------------------\n    _stateData(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.TAG_OPEN;\n                break;\n            }\n            case $.AMPERSAND: {\n                this._startCharacterReference();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitCodePoint(cp);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    //  RCDATA state\n    //------------------------------------------------------------------\n    _stateRcdata(cp) {\n        switch (cp) {\n            case $.AMPERSAND: {\n                this._startCharacterReference();\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.RCDATA_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // RAWTEXT state\n    //------------------------------------------------------------------\n    _stateRawtext(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.RAWTEXT_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data state\n    //------------------------------------------------------------------\n    _stateScriptData(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // PLAINTEXT state\n    //------------------------------------------------------------------\n    _statePlaintext(cp) {\n        switch (cp) {\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Tag open state\n    //------------------------------------------------------------------\n    _stateTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this._createStartTagToken();\n            this.state = State.TAG_NAME;\n            this._stateTagName(cp);\n        }\n        else\n            switch (cp) {\n                case $.EXCLAMATION_MARK: {\n                    this.state = State.MARKUP_DECLARATION_OPEN;\n                    break;\n                }\n                case $.SOLIDUS: {\n                    this.state = State.END_TAG_OPEN;\n                    break;\n                }\n                case $.QUESTION_MARK: {\n                    this._err(ERR.unexpectedQuestionMarkInsteadOfTagName);\n                    this._createCommentToken(1);\n                    this.state = State.BOGUS_COMMENT;\n                    this._stateBogusComment(cp);\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofBeforeTagName);\n                    this._emitChars('<');\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._err(ERR.invalidFirstCharacterOfTagName);\n                    this._emitChars('<');\n                    this.state = State.DATA;\n                    this._stateData(cp);\n                }\n            }\n    }\n    // End tag open state\n    //------------------------------------------------------------------\n    _stateEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this._createEndTagToken();\n            this.state = State.TAG_NAME;\n            this._stateTagName(cp);\n        }\n        else\n            switch (cp) {\n                case $.GREATER_THAN_SIGN: {\n                    this._err(ERR.missingEndTagName);\n                    this.state = State.DATA;\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofBeforeTagName);\n                    this._emitChars('</');\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._err(ERR.invalidFirstCharacterOfTagName);\n                    this._createCommentToken(2);\n                    this.state = State.BOGUS_COMMENT;\n                    this._stateBogusComment(cp);\n                }\n            }\n    }\n    // Tag name state\n    //------------------------------------------------------------------\n    _stateTagName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.SOLIDUS: {\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.tagName += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.tagName += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // RCDATA less-than sign state\n    //------------------------------------------------------------------\n    _stateRcdataLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.RCDATA_END_TAG_OPEN;\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    // RCDATA end tag open state\n    //------------------------------------------------------------------\n    _stateRcdataEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.RCDATA_END_TAG_NAME;\n            this._stateRcdataEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    handleSpecialEndTag(_cp) {\n        if (!this.preprocessor.startsWith(this.lastStartTagName, false)) {\n            return !this._ensureHibernation();\n        }\n        this._createEndTagToken();\n        const token = this.currentToken;\n        token.tagName = this.lastStartTagName;\n        const cp = this.preprocessor.peek(this.lastStartTagName.length);\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                return false;\n            }\n            case $.SOLIDUS: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.state = State.SELF_CLOSING_START_TAG;\n                return false;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.emitCurrentTagToken();\n                this.state = State.DATA;\n                return false;\n            }\n            default: {\n                return !this._ensureHibernation();\n            }\n        }\n    }\n    // RCDATA end tag name state\n    //------------------------------------------------------------------\n    _stateRcdataEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    // RAWTEXT less-than sign state\n    //------------------------------------------------------------------\n    _stateRawtextLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.RAWTEXT_END_TAG_OPEN;\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // RAWTEXT end tag open state\n    //------------------------------------------------------------------\n    _stateRawtextEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.RAWTEXT_END_TAG_NAME;\n            this._stateRawtextEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // RAWTEXT end tag name state\n    //------------------------------------------------------------------\n    _stateRawtextEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // Script data less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataLessThanSign(cp) {\n        switch (cp) {\n            case $.SOLIDUS: {\n                this.state = State.SCRIPT_DATA_END_TAG_OPEN;\n                break;\n            }\n            case $.EXCLAMATION_MARK: {\n                this.state = State.SCRIPT_DATA_ESCAPE_START;\n                this._emitChars('<!');\n                break;\n            }\n            default: {\n                this._emitChars('<');\n                this.state = State.SCRIPT_DATA;\n                this._stateScriptData(cp);\n            }\n        }\n    }\n    // Script data end tag open state\n    //------------------------------------------------------------------\n    _stateScriptDataEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.SCRIPT_DATA_END_TAG_NAME;\n            this._stateScriptDataEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data end tag name state\n    //------------------------------------------------------------------\n    _stateScriptDataEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escape start state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapeStart(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.SCRIPT_DATA_ESCAPE_START_DASH;\n            this._emitChars('-');\n        }\n        else {\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escape start dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapeStartDash(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH;\n            this._emitChars('-');\n        }\n        else {\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escaped state\n    //------------------------------------------------------------------\n    _stateScriptDataEscaped(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_ESCAPED_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped dash dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedDashDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA;\n                this._emitChars('>');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN;\n        }\n        else if (isAsciiLetter(cp)) {\n            this._emitChars('<');\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_START;\n            this._stateScriptDataDoubleEscapeStart(cp);\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data escaped end tag open state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_NAME;\n            this._stateScriptDataEscapedEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data escaped end tag name state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data double escape start state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapeStart(cp) {\n        if (this.preprocessor.startsWith($$.SCRIPT, false) &&\n            isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek($$.SCRIPT.length))) {\n            this._emitCodePoint(cp);\n            for (let i = 0; i < $$.SCRIPT.length; i++) {\n                this._emitCodePoint(this._consume());\n            }\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n        }\n        else if (!this._ensureHibernation()) {\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data double escaped state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscaped(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped dash state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped dash dash state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedDashDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA;\n                this._emitChars('>');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_END;\n            this._emitChars('/');\n        }\n        else {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n            this._stateScriptDataDoubleEscaped(cp);\n        }\n    }\n    // Script data double escape end state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapeEnd(cp) {\n        if (this.preprocessor.startsWith($$.SCRIPT, false) &&\n            isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek($$.SCRIPT.length))) {\n            this._emitCodePoint(cp);\n            for (let i = 0; i < $$.SCRIPT.length; i++) {\n                this._emitCodePoint(this._consume());\n            }\n            this.state = State.SCRIPT_DATA_ESCAPED;\n        }\n        else if (!this._ensureHibernation()) {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n            this._stateScriptDataDoubleEscaped(cp);\n        }\n    }\n    // Before attribute name state\n    //------------------------------------------------------------------\n    _stateBeforeAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.SOLIDUS:\n            case $.GREATER_THAN_SIGN:\n            case $.EOF: {\n                this.state = State.AFTER_ATTRIBUTE_NAME;\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this._err(ERR.unexpectedEqualsSignBeforeAttributeName);\n                this._createAttr('=');\n                this.state = State.ATTRIBUTE_NAME;\n                break;\n            }\n            default: {\n                this._createAttr('');\n                this.state = State.ATTRIBUTE_NAME;\n                this._stateAttributeName(cp);\n            }\n        }\n    }\n    // Attribute name state\n    //------------------------------------------------------------------\n    _stateAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED:\n            case $.SOLIDUS:\n            case $.GREATER_THAN_SIGN:\n            case $.EOF: {\n                this._leaveAttrName();\n                this.state = State.AFTER_ATTRIBUTE_NAME;\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this._leaveAttrName();\n                this.state = State.BEFORE_ATTRIBUTE_VALUE;\n                break;\n            }\n            case $.QUOTATION_MARK:\n            case $.APOSTROPHE:\n            case $.LESS_THAN_SIGN: {\n                this._err(ERR.unexpectedCharacterInAttributeName);\n                this.currentAttr.name += String.fromCodePoint(cp);\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.name += REPLACEMENT_CHARACTER;\n                break;\n            }\n            default: {\n                this.currentAttr.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // After attribute name state\n    //------------------------------------------------------------------\n    _stateAfterAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.SOLIDUS: {\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this.state = State.BEFORE_ATTRIBUTE_VALUE;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._createAttr('');\n                this.state = State.ATTRIBUTE_NAME;\n                this._stateAttributeName(cp);\n            }\n        }\n    }\n    // Before attribute value state\n    //------------------------------------------------------------------\n    _stateBeforeAttributeValue(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this.state = State.ATTRIBUTE_VALUE_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this.state = State.ATTRIBUTE_VALUE_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingAttributeValue);\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            default: {\n                this.state = State.ATTRIBUTE_VALUE_UNQUOTED;\n                this._stateAttributeValueUnquoted(cp);\n            }\n        }\n    }\n    // Attribute value (double-quoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueDoubleQuoted(cp) {\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;\n                break;\n            }\n            case $.AMPERSAND: {\n                this._startCharacterReference();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Attribute value (single-quoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueSingleQuoted(cp) {\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;\n                break;\n            }\n            case $.AMPERSAND: {\n                this._startCharacterReference();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Attribute value (unquoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueUnquoted(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._leaveAttrValue();\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.AMPERSAND: {\n                this._startCharacterReference();\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._leaveAttrValue();\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.QUOTATION_MARK:\n            case $.APOSTROPHE:\n            case $.LESS_THAN_SIGN:\n            case $.EQUALS_SIGN:\n            case $.GRAVE_ACCENT: {\n                this._err(ERR.unexpectedCharacterInUnquotedAttributeValue);\n                this.currentAttr.value += String.fromCodePoint(cp);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After attribute value (quoted) state\n    //------------------------------------------------------------------\n    _stateAfterAttributeValueQuoted(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._leaveAttrValue();\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.SOLIDUS: {\n                this._leaveAttrValue();\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._leaveAttrValue();\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingWhitespaceBetweenAttributes);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                this._stateBeforeAttributeName(cp);\n            }\n        }\n    }\n    // Self-closing start tag state\n    //------------------------------------------------------------------\n    _stateSelfClosingStartTag(cp) {\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                const token = this.currentToken;\n                token.selfClosing = true;\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.unexpectedSolidusInTag);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                this._stateBeforeAttributeName(cp);\n            }\n        }\n    }\n    // Bogus comment state\n    //------------------------------------------------------------------\n    _stateBogusComment(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.data += REPLACEMENT_CHARACTER;\n                break;\n            }\n            default: {\n                token.data += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Markup declaration open state\n    //------------------------------------------------------------------\n    _stateMarkupDeclarationOpen(cp) {\n        if (this._consumeSequenceIfMatch($$.DASH_DASH, true)) {\n            this._createCommentToken($$.DASH_DASH.length + 1);\n            this.state = State.COMMENT_START;\n        }\n        else if (this._consumeSequenceIfMatch($$.DOCTYPE, false)) {\n            // NOTE: Doctypes tokens are created without fixed offsets. We keep track of the moment a doctype *might* start here.\n            this.currentLocation = this.getCurrentLocation($$.DOCTYPE.length + 1);\n            this.state = State.DOCTYPE;\n        }\n        else if (this._consumeSequenceIfMatch($$.CDATA_START, true)) {\n            if (this.inForeignNode) {\n                this.state = State.CDATA_SECTION;\n            }\n            else {\n                this._err(ERR.cdataInHtmlContent);\n                this._createCommentToken($$.CDATA_START.length + 1);\n                this.currentToken.data = '[CDATA[';\n                this.state = State.BOGUS_COMMENT;\n            }\n        }\n        //NOTE: Sequence lookups can be abrupted by hibernation. In that case, lookup\n        //results are no longer valid and we will need to start over.\n        else if (!this._ensureHibernation()) {\n            this._err(ERR.incorrectlyOpenedComment);\n            this._createCommentToken(2);\n            this.state = State.BOGUS_COMMENT;\n            this._stateBogusComment(cp);\n        }\n    }\n    // Comment start state\n    //------------------------------------------------------------------\n    _stateCommentStart(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_START_DASH;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptClosingOfEmptyComment);\n                this.state = State.DATA;\n                const token = this.currentToken;\n                this.emitCurrentComment(token);\n                break;\n            }\n            default: {\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment start dash state\n    //------------------------------------------------------------------\n    _stateCommentStartDash(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptClosingOfEmptyComment);\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '-';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment state\n    //------------------------------------------------------------------\n    _stateComment(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END_DASH;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                token.data += '<';\n                this.state = State.COMMENT_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.data += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Comment less-than sign state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSign(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.EXCLAMATION_MARK: {\n                token.data += '!';\n                this.state = State.COMMENT_LESS_THAN_SIGN_BANG;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                token.data += '<';\n                break;\n            }\n            default: {\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment less-than sign bang state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBang(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH;\n        }\n        else {\n            this.state = State.COMMENT;\n            this._stateComment(cp);\n        }\n    }\n    // Comment less-than sign bang dash state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBangDash(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH;\n        }\n        else {\n            this.state = State.COMMENT_END_DASH;\n            this._stateCommentEndDash(cp);\n        }\n    }\n    // Comment less-than sign bang dash dash state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBangDashDash(cp) {\n        if (cp !== $.GREATER_THAN_SIGN && cp !== $.EOF) {\n            this._err(ERR.nestedComment);\n        }\n        this.state = State.COMMENT_END;\n        this._stateCommentEnd(cp);\n    }\n    // Comment end dash state\n    //------------------------------------------------------------------\n    _stateCommentEndDash(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '-';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment end state\n    //------------------------------------------------------------------\n    _stateCommentEnd(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EXCLAMATION_MARK: {\n                this.state = State.COMMENT_END_BANG;\n                break;\n            }\n            case $.HYPHEN_MINUS: {\n                token.data += '-';\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '--';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment end bang state\n    //------------------------------------------------------------------\n    _stateCommentEndBang(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                token.data += '--!';\n                this.state = State.COMMENT_END_DASH;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.incorrectlyClosedComment);\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '--!';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // DOCTYPE state\n    //------------------------------------------------------------------\n    _stateDoctype(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                this._stateBeforeDoctypeName(cp);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                this._createDoctypeToken(null);\n                const token = this.currentToken;\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingWhitespaceBeforeDoctypeName);\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                this._stateBeforeDoctypeName(cp);\n            }\n        }\n    }\n    // Before DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypeName(cp) {\n        if (isAsciiUpper(cp)) {\n            this._createDoctypeToken(String.fromCharCode(toAsciiLower(cp)));\n            this.state = State.DOCTYPE_NAME;\n        }\n        else\n            switch (cp) {\n                case $.SPACE:\n                case $.LINE_FEED:\n                case $.TABULATION:\n                case $.FORM_FEED: {\n                    // Ignore whitespace\n                    break;\n                }\n                case $.NULL: {\n                    this._err(ERR.unexpectedNullCharacter);\n                    this._createDoctypeToken(REPLACEMENT_CHARACTER);\n                    this.state = State.DOCTYPE_NAME;\n                    break;\n                }\n                case $.GREATER_THAN_SIGN: {\n                    this._err(ERR.missingDoctypeName);\n                    this._createDoctypeToken(null);\n                    const token = this.currentToken;\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this.state = State.DATA;\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofInDoctype);\n                    this._createDoctypeToken(null);\n                    const token = this.currentToken;\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._createDoctypeToken(String.fromCodePoint(cp));\n                    this.state = State.DOCTYPE_NAME;\n                }\n            }\n    }\n    // DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateDoctypeName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.AFTER_DOCTYPE_NAME;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.name += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // After DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                if (this._consumeSequenceIfMatch($$.PUBLIC, false)) {\n                    this.state = State.AFTER_DOCTYPE_PUBLIC_KEYWORD;\n                }\n                else if (this._consumeSequenceIfMatch($$.SYSTEM, false)) {\n                    this.state = State.AFTER_DOCTYPE_SYSTEM_KEYWORD;\n                }\n                //NOTE: sequence lookup can be abrupted by hibernation. In that case lookup\n                //results are no longer valid and we will need to start over.\n                else if (!this._ensureHibernation()) {\n                    this._err(ERR.invalidCharacterSequenceAfterDoctypeName);\n                    token.forceQuirks = true;\n                    this.state = State.BOGUS_DOCTYPE;\n                    this._stateBogusDoctype(cp);\n                }\n            }\n        }\n    }\n    // After DOCTYPE public keyword state\n    //------------------------------------------------------------------\n    _stateAfterDoctypePublicKeyword(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Before DOCTYPE public identifier state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypePublicIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // DOCTYPE public identifier (double-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypePublicIdentifierDoubleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.publicId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.publicId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // DOCTYPE public identifier (single-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypePublicIdentifierSingleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.publicId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.publicId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After DOCTYPE public identifier state\n    //------------------------------------------------------------------\n    _stateAfterDoctypePublicIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Between DOCTYPE public and system identifiers state\n    //------------------------------------------------------------------\n    _stateBetweenDoctypePublicAndSystemIdentifiers(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // After DOCTYPE system keyword state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeSystemKeyword(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Before DOCTYPE system identifier state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypeSystemIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // DOCTYPE system identifier (double-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypeSystemIdentifierDoubleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.systemId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.systemId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // DOCTYPE system identifier (single-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypeSystemIdentifierSingleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.systemId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.systemId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After DOCTYPE system identifier state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeSystemIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.unexpectedCharacterAfterDoctypeSystemIdentifier);\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Bogus DOCTYPE state\n    //------------------------------------------------------------------\n    _stateBogusDoctype(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                break;\n            }\n            case $.EOF: {\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    // CDATA section state\n    //------------------------------------------------------------------\n    _stateCdataSection(cp) {\n        switch (cp) {\n            case $.RIGHT_SQUARE_BRACKET: {\n                this.state = State.CDATA_SECTION_BRACKET;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInCdata);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // CDATA section bracket state\n    //------------------------------------------------------------------\n    _stateCdataSectionBracket(cp) {\n        if (cp === $.RIGHT_SQUARE_BRACKET) {\n            this.state = State.CDATA_SECTION_END;\n        }\n        else {\n            this._emitChars(']');\n            this.state = State.CDATA_SECTION;\n            this._stateCdataSection(cp);\n        }\n    }\n    // CDATA section end state\n    //------------------------------------------------------------------\n    _stateCdataSectionEnd(cp) {\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                break;\n            }\n            case $.RIGHT_SQUARE_BRACKET: {\n                this._emitChars(']');\n                break;\n            }\n            default: {\n                this._emitChars(']]');\n                this.state = State.CDATA_SECTION;\n                this._stateCdataSection(cp);\n            }\n        }\n    }\n    // Character reference state\n    //------------------------------------------------------------------\n    _stateCharacterReference() {\n        let length = this.entityDecoder.write(this.preprocessor.html, this.preprocessor.pos);\n        if (length < 0) {\n            if (this.preprocessor.lastChunkWritten) {\n                length = this.entityDecoder.end();\n            }\n            else {\n                // Wait for the rest of the entity.\n                this.active = false;\n                // Mark the entire buffer as read.\n                this.preprocessor.pos = this.preprocessor.html.length - 1;\n                this.consumedAfterSnapshot = 0;\n                this.preprocessor.endOfChunkHit = true;\n                return;\n            }\n        }\n        if (length === 0) {\n            // This was not a valid entity. Go back to the beginning, and\n            // figure out what to do.\n            this.preprocessor.pos = this.entityStartPos;\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this.state =\n                !this._isCharacterReferenceInAttribute() && isAsciiAlphaNumeric(this.preprocessor.peek(1))\n                    ? State.AMBIGUOUS_AMPERSAND\n                    : this.returnState;\n        }\n        else {\n            // We successfully parsed an entity. Switch to the return state.\n            this.state = this.returnState;\n        }\n    }\n    // Ambiguos ampersand state\n    //------------------------------------------------------------------\n    _stateAmbiguousAmpersand(cp) {\n        if (isAsciiAlphaNumeric(cp)) {\n            this._flushCodePointConsumedAsCharacterReference(cp);\n        }\n        else {\n            if (cp === $.SEMICOLON) {\n                this._err(ERR.unknownNamedCharacterReference);\n            }\n            this.state = this.returnState;\n            this._callState(cp);\n        }\n    }\n}\n","import { TAG_ID as $, NS, NUMBERED_HEADERS } from '../common/html.js';\n//Element utils\nconst IMPLICIT_END_TAG_REQUIRED = new Set([$.DD, $.DT, $.LI, $.OPTGROUP, $.OPTION, $.P, $.RB, $.RP, $.RT, $.RTC]);\nconst IMPLICIT_END_TAG_REQUIRED_THOROUGHLY = new Set([\n    ...IMPLICIT_END_TAG_REQUIRED,\n    $.CAPTION,\n    $.COLGROUP,\n    $.TBODY,\n    $.TD,\n    $.TFOOT,\n    $.TH,\n    $.THEAD,\n    $.TR,\n]);\nconst SCOPING_ELEMENTS_HTML = new Set([\n    $.APPLET,\n    $.CAPTION,\n    $.HTML,\n    $.MARQUEE,\n    $.OBJECT,\n    $.TABLE,\n    $.TD,\n    $.TEMPLATE,\n    $.TH,\n]);\nconst SCOPING_ELEMENTS_HTML_LIST = new Set([...SCOPING_ELEMENTS_HTML, $.OL, $.UL]);\nconst SCOPING_ELEMENTS_HTML_BUTTON = new Set([...SCOPING_ELEMENTS_HTML, $.BUTTON]);\nconst SCOPING_ELEMENTS_MATHML = new Set([$.ANNOTATION_XML, $.MI, $.MN, $.MO, $.MS, $.MTEXT]);\nconst SCOPING_ELEMENTS_SVG = new Set([$.DESC, $.FOREIGN_OBJECT, $.TITLE]);\nconst TABLE_ROW_CONTEXT = new Set([$.TR, $.TEMPLATE, $.HTML]);\nconst TABLE_BODY_CONTEXT = new Set([$.TBODY, $.TFOOT, $.THEAD, $.TEMPLATE, $.HTML]);\nconst TABLE_CONTEXT = new Set([$.TABLE, $.TEMPLATE, $.HTML]);\nconst TABLE_CELLS = new Set([$.TD, $.TH]);\n//Stack of open elements\nexport class OpenElementStack {\n    get currentTmplContentOrNode() {\n        return this._isInTemplate() ? this.treeAdapter.getTemplateContent(this.current) : this.current;\n    }\n    constructor(document, treeAdapter, handler) {\n        this.treeAdapter = treeAdapter;\n        this.handler = handler;\n        this.items = [];\n        this.tagIDs = [];\n        this.stackTop = -1;\n        this.tmplCount = 0;\n        this.currentTagId = $.UNKNOWN;\n        this.current = document;\n    }\n    //Index of element\n    _indexOf(element) {\n        return this.items.lastIndexOf(element, this.stackTop);\n    }\n    //Update current element\n    _isInTemplate() {\n        return this.currentTagId === $.TEMPLATE && this.treeAdapter.getNamespaceURI(this.current) === NS.HTML;\n    }\n    _updateCurrentElement() {\n        this.current = this.items[this.stackTop];\n        this.currentTagId = this.tagIDs[this.stackTop];\n    }\n    //Mutations\n    push(element, tagID) {\n        this.stackTop++;\n        this.items[this.stackTop] = element;\n        this.current = element;\n        this.tagIDs[this.stackTop] = tagID;\n        this.currentTagId = tagID;\n        if (this._isInTemplate()) {\n            this.tmplCount++;\n        }\n        this.handler.onItemPush(element, tagID, true);\n    }\n    pop() {\n        const popped = this.current;\n        if (this.tmplCount > 0 && this._isInTemplate()) {\n            this.tmplCount--;\n        }\n        this.stackTop--;\n        this._updateCurrentElement();\n        this.handler.onItemPop(popped, true);\n    }\n    replace(oldElement, newElement) {\n        const idx = this._indexOf(oldElement);\n        this.items[idx] = newElement;\n        if (idx === this.stackTop) {\n            this.current = newElement;\n        }\n    }\n    insertAfter(referenceElement, newElement, newElementID) {\n        const insertionIdx = this._indexOf(referenceElement) + 1;\n        this.items.splice(insertionIdx, 0, newElement);\n        this.tagIDs.splice(insertionIdx, 0, newElementID);\n        this.stackTop++;\n        if (insertionIdx === this.stackTop) {\n            this._updateCurrentElement();\n        }\n        this.handler.onItemPush(this.current, this.currentTagId, insertionIdx === this.stackTop);\n    }\n    popUntilTagNamePopped(tagName) {\n        let targetIdx = this.stackTop + 1;\n        do {\n            targetIdx = this.tagIDs.lastIndexOf(tagName, targetIdx - 1);\n        } while (targetIdx > 0 && this.treeAdapter.getNamespaceURI(this.items[targetIdx]) !== NS.HTML);\n        this.shortenToLength(targetIdx < 0 ? 0 : targetIdx);\n    }\n    shortenToLength(idx) {\n        while (this.stackTop >= idx) {\n            const popped = this.current;\n            if (this.tmplCount > 0 && this._isInTemplate()) {\n                this.tmplCount -= 1;\n            }\n            this.stackTop--;\n            this._updateCurrentElement();\n            this.handler.onItemPop(popped, this.stackTop < idx);\n        }\n    }\n    popUntilElementPopped(element) {\n        const idx = this._indexOf(element);\n        this.shortenToLength(idx < 0 ? 0 : idx);\n    }\n    popUntilPopped(tagNames, targetNS) {\n        const idx = this._indexOfTagNames(tagNames, targetNS);\n        this.shortenToLength(idx < 0 ? 0 : idx);\n    }\n    popUntilNumberedHeaderPopped() {\n        this.popUntilPopped(NUMBERED_HEADERS, NS.HTML);\n    }\n    popUntilTableCellPopped() {\n        this.popUntilPopped(TABLE_CELLS, NS.HTML);\n    }\n    popAllUpToHtmlElement() {\n        //NOTE: here we assume that the root <html> element is always first in the open element stack, so\n        //we perform this fast stack clean up.\n        this.tmplCount = 0;\n        this.shortenToLength(1);\n    }\n    _indexOfTagNames(tagNames, namespace) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (tagNames.has(this.tagIDs[i]) && this.treeAdapter.getNamespaceURI(this.items[i]) === namespace) {\n                return i;\n            }\n        }\n        return -1;\n    }\n    clearBackTo(tagNames, targetNS) {\n        const idx = this._indexOfTagNames(tagNames, targetNS);\n        this.shortenToLength(idx + 1);\n    }\n    clearBackToTableContext() {\n        this.clearBackTo(TABLE_CONTEXT, NS.HTML);\n    }\n    clearBackToTableBodyContext() {\n        this.clearBackTo(TABLE_BODY_CONTEXT, NS.HTML);\n    }\n    clearBackToTableRowContext() {\n        this.clearBackTo(TABLE_ROW_CONTEXT, NS.HTML);\n    }\n    remove(element) {\n        const idx = this._indexOf(element);\n        if (idx >= 0) {\n            if (idx === this.stackTop) {\n                this.pop();\n            }\n            else {\n                this.items.splice(idx, 1);\n                this.tagIDs.splice(idx, 1);\n                this.stackTop--;\n                this._updateCurrentElement();\n                this.handler.onItemPop(element, false);\n            }\n        }\n    }\n    //Search\n    tryPeekProperlyNestedBodyElement() {\n        //Properly nested <body> element (should be second element in stack).\n        return this.stackTop >= 1 && this.tagIDs[1] === $.BODY ? this.items[1] : null;\n    }\n    contains(element) {\n        return this._indexOf(element) > -1;\n    }\n    getCommonAncestor(element) {\n        const elementIdx = this._indexOf(element) - 1;\n        return elementIdx >= 0 ? this.items[elementIdx] : null;\n    }\n    isRootHtmlElementCurrent() {\n        return this.stackTop === 0 && this.tagIDs[0] === $.HTML;\n    }\n    //Element in scope\n    hasInDynamicScope(tagName, htmlScope) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            switch (this.treeAdapter.getNamespaceURI(this.items[i])) {\n                case NS.HTML: {\n                    if (tn === tagName)\n                        return true;\n                    if (htmlScope.has(tn))\n                        return false;\n                    break;\n                }\n                case NS.SVG: {\n                    if (SCOPING_ELEMENTS_SVG.has(tn))\n                        return false;\n                    break;\n                }\n                case NS.MATHML: {\n                    if (SCOPING_ELEMENTS_MATHML.has(tn))\n                        return false;\n                    break;\n                }\n            }\n        }\n        return true;\n    }\n    hasInScope(tagName) {\n        return this.hasInDynamicScope(tagName, SCOPING_ELEMENTS_HTML);\n    }\n    hasInListItemScope(tagName) {\n        return this.hasInDynamicScope(tagName, SCOPING_ELEMENTS_HTML_LIST);\n    }\n    hasInButtonScope(tagName) {\n        return this.hasInDynamicScope(tagName, SCOPING_ELEMENTS_HTML_BUTTON);\n    }\n    hasNumberedHeaderInScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            switch (this.treeAdapter.getNamespaceURI(this.items[i])) {\n                case NS.HTML: {\n                    if (NUMBERED_HEADERS.has(tn))\n                        return true;\n                    if (SCOPING_ELEMENTS_HTML.has(tn))\n                        return false;\n                    break;\n                }\n                case NS.SVG: {\n                    if (SCOPING_ELEMENTS_SVG.has(tn))\n                        return false;\n                    break;\n                }\n                case NS.MATHML: {\n                    if (SCOPING_ELEMENTS_MATHML.has(tn))\n                        return false;\n                    break;\n                }\n            }\n        }\n        return true;\n    }\n    hasInTableScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (this.treeAdapter.getNamespaceURI(this.items[i]) !== NS.HTML) {\n                continue;\n            }\n            switch (this.tagIDs[i]) {\n                case tagName: {\n                    return true;\n                }\n                case $.TABLE:\n                case $.HTML: {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n    hasTableBodyContextInTableScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (this.treeAdapter.getNamespaceURI(this.items[i]) !== NS.HTML) {\n                continue;\n            }\n            switch (this.tagIDs[i]) {\n                case $.TBODY:\n                case $.THEAD:\n                case $.TFOOT: {\n                    return true;\n                }\n                case $.TABLE:\n                case $.HTML: {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n    hasInSelectScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (this.treeAdapter.getNamespaceURI(this.items[i]) !== NS.HTML) {\n                continue;\n            }\n            switch (this.tagIDs[i]) {\n                case tagName: {\n                    return true;\n                }\n                case $.OPTION:\n                case $.OPTGROUP: {\n                    break;\n                }\n                default: {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n    //Implied end tags\n    generateImpliedEndTags() {\n        while (IMPLICIT_END_TAG_REQUIRED.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n    generateImpliedEndTagsThoroughly() {\n        while (IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n    generateImpliedEndTagsWithExclusion(exclusionId) {\n        while (this.currentTagId !== exclusionId && IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n}\n","//Const\nconst NOAH_ARK_CAPACITY = 3;\nexport var EntryType;\n(function (EntryType) {\n    EntryType[EntryType[\"Marker\"] = 0] = \"Marker\";\n    EntryType[EntryType[\"Element\"] = 1] = \"Element\";\n})(EntryType || (EntryType = {}));\nconst MARKER = { type: EntryType.Marker };\n//List of formatting elements\nexport class FormattingElementList {\n    constructor(treeAdapter) {\n        this.treeAdapter = treeAdapter;\n        this.entries = [];\n        this.bookmark = null;\n    }\n    //Noah Ark's condition\n    //OPTIMIZATION: at first we try to find possible candidates for exclusion using\n    //lightweight heuristics without thorough attributes check.\n    _getNoahArkConditionCandidates(newElement, neAttrs) {\n        const candidates = [];\n        const neAttrsLength = neAttrs.length;\n        const neTagName = this.treeAdapter.getTagName(newElement);\n        const neNamespaceURI = this.treeAdapter.getNamespaceURI(newElement);\n        for (let i = 0; i < this.entries.length; i++) {\n            const entry = this.entries[i];\n            if (entry.type === EntryType.Marker) {\n                break;\n            }\n            const { element } = entry;\n            if (this.treeAdapter.getTagName(element) === neTagName &&\n                this.treeAdapter.getNamespaceURI(element) === neNamespaceURI) {\n                const elementAttrs = this.treeAdapter.getAttrList(element);\n                if (elementAttrs.length === neAttrsLength) {\n                    candidates.push({ idx: i, attrs: elementAttrs });\n                }\n            }\n        }\n        return candidates;\n    }\n    _ensureNoahArkCondition(newElement) {\n        if (this.entries.length < NOAH_ARK_CAPACITY)\n            return;\n        const neAttrs = this.treeAdapter.getAttrList(newElement);\n        const candidates = this._getNoahArkConditionCandidates(newElement, neAttrs);\n        if (candidates.length < NOAH_ARK_CAPACITY)\n            return;\n        //NOTE: build attrs map for the new element, so we can perform fast lookups\n        const neAttrsMap = new Map(neAttrs.map((neAttr) => [neAttr.name, neAttr.value]));\n        let validCandidates = 0;\n        //NOTE: remove bottommost candidates, until Noah's Ark condition will not be met\n        for (let i = 0; i < candidates.length; i++) {\n            const candidate = candidates[i];\n            // We know that `candidate.attrs.length === neAttrs.length`\n            if (candidate.attrs.every((cAttr) => neAttrsMap.get(cAttr.name) === cAttr.value)) {\n                validCandidates += 1;\n                if (validCandidates >= NOAH_ARK_CAPACITY) {\n                    this.entries.splice(candidate.idx, 1);\n                }\n            }\n        }\n    }\n    //Mutations\n    insertMarker() {\n        this.entries.unshift(MARKER);\n    }\n    pushElement(element, token) {\n        this._ensureNoahArkCondition(element);\n        this.entries.unshift({\n            type: EntryType.Element,\n            element,\n            token,\n        });\n    }\n    insertElementAfterBookmark(element, token) {\n        const bookmarkIdx = this.entries.indexOf(this.bookmark);\n        this.entries.splice(bookmarkIdx, 0, {\n            type: EntryType.Element,\n            element,\n            token,\n        });\n    }\n    removeEntry(entry) {\n        const entryIndex = this.entries.indexOf(entry);\n        if (entryIndex >= 0) {\n            this.entries.splice(entryIndex, 1);\n        }\n    }\n    /**\n     * Clears the list of formatting elements up to the last marker.\n     *\n     * @see https://html.spec.whatwg.org/multipage/parsing.html#clear-the-list-of-active-formatting-elements-up-to-the-last-marker\n     */\n    clearToLastMarker() {\n        const markerIdx = this.entries.indexOf(MARKER);\n        if (markerIdx >= 0) {\n            this.entries.splice(0, markerIdx + 1);\n        }\n        else {\n            this.entries.length = 0;\n        }\n    }\n    //Search\n    getElementEntryInScopeWithTagName(tagName) {\n        const entry = this.entries.find((entry) => entry.type === EntryType.Marker || this.treeAdapter.getTagName(entry.element) === tagName);\n        return entry && entry.type === EntryType.Element ? entry : null;\n    }\n    getElementEntry(element) {\n        return this.entries.find((entry) => entry.type === EntryType.Element && entry.element === element);\n    }\n}\n","import { DOCUMENT_MODE } from '../common/html.js';\nexport const defaultTreeAdapter = {\n    //Node construction\n    createDocument() {\n        return {\n            nodeName: '#document',\n            mode: DOCUMENT_MODE.NO_QUIRKS,\n            childNodes: [],\n        };\n    },\n    createDocumentFragment() {\n        return {\n            nodeName: '#document-fragment',\n            childNodes: [],\n        };\n    },\n    createElement(tagName, namespaceURI, attrs) {\n        return {\n            nodeName: tagName,\n            tagName,\n            attrs,\n            namespaceURI,\n            childNodes: [],\n            parentNode: null,\n        };\n    },\n    createCommentNode(data) {\n        return {\n            nodeName: '#comment',\n            data,\n            parentNode: null,\n        };\n    },\n    createTextNode(value) {\n        return {\n            nodeName: '#text',\n            value,\n            parentNode: null,\n        };\n    },\n    //Tree mutation\n    appendChild(parentNode, newNode) {\n        parentNode.childNodes.push(newNode);\n        newNode.parentNode = parentNode;\n    },\n    insertBefore(parentNode, newNode, referenceNode) {\n        const insertionIdx = parentNode.childNodes.indexOf(referenceNode);\n        parentNode.childNodes.splice(insertionIdx, 0, newNode);\n        newNode.parentNode = parentNode;\n    },\n    setTemplateContent(templateElement, contentElement) {\n        templateElement.content = contentElement;\n    },\n    getTemplateContent(templateElement) {\n        return templateElement.content;\n    },\n    setDocumentType(document, name, publicId, systemId) {\n        const doctypeNode = document.childNodes.find((node) => node.nodeName === '#documentType');\n        if (doctypeNode) {\n            doctypeNode.name = name;\n            doctypeNode.publicId = publicId;\n            doctypeNode.systemId = systemId;\n        }\n        else {\n            const node = {\n                nodeName: '#documentType',\n                name,\n                publicId,\n                systemId,\n                parentNode: null,\n            };\n            defaultTreeAdapter.appendChild(document, node);\n        }\n    },\n    setDocumentMode(document, mode) {\n        document.mode = mode;\n    },\n    getDocumentMode(document) {\n        return document.mode;\n    },\n    detachNode(node) {\n        if (node.parentNode) {\n            const idx = node.parentNode.childNodes.indexOf(node);\n            node.parentNode.childNodes.splice(idx, 1);\n            node.parentNode = null;\n        }\n    },\n    insertText(parentNode, text) {\n        if (parentNode.childNodes.length > 0) {\n            const prevNode = parentNode.childNodes[parentNode.childNodes.length - 1];\n            if (defaultTreeAdapter.isTextNode(prevNode)) {\n                prevNode.value += text;\n                return;\n            }\n        }\n        defaultTreeAdapter.appendChild(parentNode, defaultTreeAdapter.createTextNode(text));\n    },\n    insertTextBefore(parentNode, text, referenceNode) {\n        const prevNode = parentNode.childNodes[parentNode.childNodes.indexOf(referenceNode) - 1];\n        if (prevNode && defaultTreeAdapter.isTextNode(prevNode)) {\n            prevNode.value += text;\n        }\n        else {\n            defaultTreeAdapter.insertBefore(parentNode, defaultTreeAdapter.createTextNode(text), referenceNode);\n        }\n    },\n    adoptAttributes(recipient, attrs) {\n        const recipientAttrsMap = new Set(recipient.attrs.map((attr) => attr.name));\n        for (let j = 0; j < attrs.length; j++) {\n            if (!recipientAttrsMap.has(attrs[j].name)) {\n                recipient.attrs.push(attrs[j]);\n            }\n        }\n    },\n    //Tree traversing\n    getFirstChild(node) {\n        return node.childNodes[0];\n    },\n    getChildNodes(node) {\n        return node.childNodes;\n    },\n    getParentNode(node) {\n        return node.parentNode;\n    },\n    getAttrList(element) {\n        return element.attrs;\n    },\n    //Node data\n    getTagName(element) {\n        return element.tagName;\n    },\n    getNamespaceURI(element) {\n        return element.namespaceURI;\n    },\n    getTextNodeContent(textNode) {\n        return textNode.value;\n    },\n    getCommentNodeContent(commentNode) {\n        return commentNode.data;\n    },\n    getDocumentTypeNodeName(doctypeNode) {\n        return doctypeNode.name;\n    },\n    getDocumentTypeNodePublicId(doctypeNode) {\n        return doctypeNode.publicId;\n    },\n    getDocumentTypeNodeSystemId(doctypeNode) {\n        return doctypeNode.systemId;\n    },\n    //Node types\n    isTextNode(node) {\n        return node.nodeName === '#text';\n    },\n    isCommentNode(node) {\n        return node.nodeName === '#comment';\n    },\n    isDocumentTypeNode(node) {\n        return node.nodeName === '#documentType';\n    },\n    isElementNode(node) {\n        return Object.prototype.hasOwnProperty.call(node, 'tagName');\n    },\n    // Source code location\n    setNodeSourceCodeLocation(node, location) {\n        node.sourceCodeLocation = location;\n    },\n    getNodeSourceCodeLocation(node) {\n        return node.sourceCodeLocation;\n    },\n    updateNodeSourceCodeLocation(node, endLocation) {\n        node.sourceCodeLocation = { ...node.sourceCodeLocation, ...endLocation };\n    },\n};\n","import { DOCUMENT_MODE } from './html.js';\n//Const\nconst VALID_DOCTYPE_NAME = 'html';\nconst VALID_SYSTEM_ID = 'about:legacy-compat';\nconst QUIRKS_MODE_SYSTEM_ID = 'http://www.ibm.com/data/dtd/v11/ibmxhtml1-transitional.dtd';\nconst QUIRKS_MODE_PUBLIC_ID_PREFIXES = [\n    '+//silmaril//dtd html pro v0r11 19970101//',\n    '-//as//dtd html 3.0 aswedit + extensions//',\n    '-//advasoft ltd//dtd html 3.0 aswedit + extensions//',\n    '-//ietf//dtd html 2.0 level 1//',\n    '-//ietf//dtd html 2.0 level 2//',\n    '-//ietf//dtd html 2.0 strict level 1//',\n    '-//ietf//dtd html 2.0 strict level 2//',\n    '-//ietf//dtd html 2.0 strict//',\n    '-//ietf//dtd html 2.0//',\n    '-//ietf//dtd html 2.1e//',\n    '-//ietf//dtd html 3.0//',\n    '-//ietf//dtd html 3.2 final//',\n    '-//ietf//dtd html 3.2//',\n    '-//ietf//dtd html 3//',\n    '-//ietf//dtd html level 0//',\n    '-//ietf//dtd html level 1//',\n    '-//ietf//dtd html level 2//',\n    '-//ietf//dtd html level 3//',\n    '-//ietf//dtd html strict level 0//',\n    '-//ietf//dtd html strict level 1//',\n    '-//ietf//dtd html strict level 2//',\n    '-//ietf//dtd html strict level 3//',\n    '-//ietf//dtd html strict//',\n    '-//ietf//dtd html//',\n    '-//metrius//dtd metrius presentational//',\n    '-//microsoft//dtd internet explorer 2.0 html strict//',\n    '-//microsoft//dtd internet explorer 2.0 html//',\n    '-//microsoft//dtd internet explorer 2.0 tables//',\n    '-//microsoft//dtd internet explorer 3.0 html strict//',\n    '-//microsoft//dtd internet explorer 3.0 html//',\n    '-//microsoft//dtd internet explorer 3.0 tables//',\n    '-//netscape comm. corp.//dtd html//',\n    '-//netscape comm. corp.//dtd strict html//',\n    \"-//o'reilly and associates//dtd html 2.0//\",\n    \"-//o'reilly and associates//dtd html extended 1.0//\",\n    \"-//o'reilly and associates//dtd html extended relaxed 1.0//\",\n    '-//sq//dtd html 2.0 hotmetal + extensions//',\n    '-//softquad software//dtd hotmetal pro 6.0::19990601::extensions to html 4.0//',\n    '-//softquad//dtd hotmetal pro 4.0::19971010::extensions to html 4.0//',\n    '-//spyglass//dtd html 2.0 extended//',\n    '-//sun microsystems corp.//dtd hotjava html//',\n    '-//sun microsystems corp.//dtd hotjava strict html//',\n    '-//w3c//dtd html 3 1995-03-24//',\n    '-//w3c//dtd html 3.2 draft//',\n    '-//w3c//dtd html 3.2 final//',\n    '-//w3c//dtd html 3.2//',\n    '-//w3c//dtd html 3.2s draft//',\n    '-//w3c//dtd html 4.0 frameset//',\n    '-//w3c//dtd html 4.0 transitional//',\n    '-//w3c//dtd html experimental 19960712//',\n    '-//w3c//dtd html experimental 970421//',\n    '-//w3c//dtd w3 html//',\n    '-//w3o//dtd w3 html 3.0//',\n    '-//webtechs//dtd mozilla html 2.0//',\n    '-//webtechs//dtd mozilla html//',\n];\nconst QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES = [\n    ...QUIRKS_MODE_PUBLIC_ID_PREFIXES,\n    '-//w3c//dtd html 4.01 frameset//',\n    '-//w3c//dtd html 4.01 transitional//',\n];\nconst QUIRKS_MODE_PUBLIC_IDS = new Set([\n    '-//w3o//dtd w3 html strict 3.0//en//',\n    '-/w3c/dtd html 4.0 transitional/en',\n    'html',\n]);\nconst LIMITED_QUIRKS_PUBLIC_ID_PREFIXES = ['-//w3c//dtd xhtml 1.0 frameset//', '-//w3c//dtd xhtml 1.0 transitional//'];\nconst LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES = [\n    ...LIMITED_QUIRKS_PUBLIC_ID_PREFIXES,\n    '-//w3c//dtd html 4.01 frameset//',\n    '-//w3c//dtd html 4.01 transitional//',\n];\n//Utils\nfunction hasPrefix(publicId, prefixes) {\n    return prefixes.some((prefix) => publicId.startsWith(prefix));\n}\n//API\nexport function isConforming(token) {\n    return (token.name === VALID_DOCTYPE_NAME &&\n        token.publicId === null &&\n        (token.systemId === null || token.systemId === VALID_SYSTEM_ID));\n}\nexport function getDocumentMode(token) {\n    if (token.name !== VALID_DOCTYPE_NAME) {\n        return DOCUMENT_MODE.QUIRKS;\n    }\n    const { systemId } = token;\n    if (systemId && systemId.toLowerCase() === QUIRKS_MODE_SYSTEM_ID) {\n        return DOCUMENT_MODE.QUIRKS;\n    }\n    let { publicId } = token;\n    if (publicId !== null) {\n        publicId = publicId.toLowerCase();\n        if (QUIRKS_MODE_PUBLIC_IDS.has(publicId)) {\n            return DOCUMENT_MODE.QUIRKS;\n        }\n        let prefixes = systemId === null ? QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES : QUIRKS_MODE_PUBLIC_ID_PREFIXES;\n        if (hasPrefix(publicId, prefixes)) {\n            return DOCUMENT_MODE.QUIRKS;\n        }\n        prefixes =\n            systemId === null ? LIMITED_QUIRKS_PUBLIC_ID_PREFIXES : LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES;\n        if (hasPrefix(publicId, prefixes)) {\n            return DOCUMENT_MODE.LIMITED_QUIRKS;\n        }\n    }\n    return DOCUMENT_MODE.NO_QUIRKS;\n}\n","import { TAG_ID as $, NS, ATTRS, getTagID } from './html.js';\n//MIME types\nconst MIME_TYPES = {\n    TEXT_HTML: 'text/html',\n    APPLICATION_XML: 'application/xhtml+xml',\n};\n//Attributes\nconst DEFINITION_URL_ATTR = 'definitionurl';\nconst ADJUSTED_DEFINITION_URL_ATTR = 'definitionURL';\nconst SVG_ATTRS_ADJUSTMENT_MAP = new Map([\n    'attributeName',\n    'attributeType',\n    'baseFrequency',\n    'baseProfile',\n    'calcMode',\n    'clipPathUnits',\n    'diffuseConstant',\n    'edgeMode',\n    'filterUnits',\n    'glyphRef',\n    'gradientTransform',\n    'gradientUnits',\n    'kernelMatrix',\n    'kernelUnitLength',\n    'keyPoints',\n    'keySplines',\n    'keyTimes',\n    'lengthAdjust',\n    'limitingConeAngle',\n    'markerHeight',\n    'markerUnits',\n    'markerWidth',\n    'maskContentUnits',\n    'maskUnits',\n    'numOctaves',\n    'pathLength',\n    'patternContentUnits',\n    'patternTransform',\n    'patternUnits',\n    'pointsAtX',\n    'pointsAtY',\n    'pointsAtZ',\n    'preserveAlpha',\n    'preserveAspectRatio',\n    'primitiveUnits',\n    'refX',\n    'refY',\n    'repeatCount',\n    'repeatDur',\n    'requiredExtensions',\n    'requiredFeatures',\n    'specularConstant',\n    'specularExponent',\n    'spreadMethod',\n    'startOffset',\n    'stdDeviation',\n    'stitchTiles',\n    'surfaceScale',\n    'systemLanguage',\n    'tableValues',\n    'targetX',\n    'targetY',\n    'textLength',\n    'viewBox',\n    'viewTarget',\n    'xChannelSelector',\n    'yChannelSelector',\n    'zoomAndPan',\n].map((attr) => [attr.toLowerCase(), attr]));\nconst XML_ATTRS_ADJUSTMENT_MAP = new Map([\n    ['xlink:actuate', { prefix: 'xlink', name: 'actuate', namespace: NS.XLINK }],\n    ['xlink:arcrole', { prefix: 'xlink', name: 'arcrole', namespace: NS.XLINK }],\n    ['xlink:href', { prefix: 'xlink', name: 'href', namespace: NS.XLINK }],\n    ['xlink:role', { prefix: 'xlink', name: 'role', namespace: NS.XLINK }],\n    ['xlink:show', { prefix: 'xlink', name: 'show', namespace: NS.XLINK }],\n    ['xlink:title', { prefix: 'xlink', name: 'title', namespace: NS.XLINK }],\n    ['xlink:type', { prefix: 'xlink', name: 'type', namespace: NS.XLINK }],\n    ['xml:lang', { prefix: 'xml', name: 'lang', namespace: NS.XML }],\n    ['xml:space', { prefix: 'xml', name: 'space', namespace: NS.XML }],\n    ['xmlns', { prefix: '', name: 'xmlns', namespace: NS.XMLNS }],\n    ['xmlns:xlink', { prefix: 'xmlns', name: 'xlink', namespace: NS.XMLNS }],\n]);\n//SVG tag names adjustment map\nexport const SVG_TAG_NAMES_ADJUSTMENT_MAP = new Map([\n    'altGlyph',\n    'altGlyphDef',\n    'altGlyphItem',\n    'animateColor',\n    'animateMotion',\n    'animateTransform',\n    'clipPath',\n    'feBlend',\n    'feColorMatrix',\n    'feComponentTransfer',\n    'feComposite',\n    'feConvolveMatrix',\n    'feDiffuseLighting',\n    'feDisplacementMap',\n    'feDistantLight',\n    'feFlood',\n    'feFuncA',\n    'feFuncB',\n    'feFuncG',\n    'feFuncR',\n    'feGaussianBlur',\n    'feImage',\n    'feMerge',\n    'feMergeNode',\n    'feMorphology',\n    'feOffset',\n    'fePointLight',\n    'feSpecularLighting',\n    'feSpotLight',\n    'feTile',\n    'feTurbulence',\n    'foreignObject',\n    'glyphRef',\n    'linearGradient',\n    'radialGradient',\n    'textPath',\n].map((tn) => [tn.toLowerCase(), tn]));\n//Tags that causes exit from foreign content\nconst EXITS_FOREIGN_CONTENT = new Set([\n    $.B,\n    $.BIG,\n    $.BLOCKQUOTE,\n    $.BODY,\n    $.BR,\n    $.CENTER,\n    $.CODE,\n    $.DD,\n    $.DIV,\n    $.DL,\n    $.DT,\n    $.EM,\n    $.EMBED,\n    $.H1,\n    $.H2,\n    $.H3,\n    $.H4,\n    $.H5,\n    $.H6,\n    $.HEAD,\n    $.HR,\n    $.I,\n    $.IMG,\n    $.LI,\n    $.LISTING,\n    $.MENU,\n    $.META,\n    $.NOBR,\n    $.OL,\n    $.P,\n    $.PRE,\n    $.RUBY,\n    $.S,\n    $.SMALL,\n    $.SPAN,\n    $.STRONG,\n    $.STRIKE,\n    $.SUB,\n    $.SUP,\n    $.TABLE,\n    $.TT,\n    $.U,\n    $.UL,\n    $.VAR,\n]);\n//Check exit from foreign content\nexport function causesExit(startTagToken) {\n    const tn = startTagToken.tagID;\n    const isFontWithAttrs = tn === $.FONT &&\n        startTagToken.attrs.some(({ name }) => name === ATTRS.COLOR || name === ATTRS.SIZE || name === ATTRS.FACE);\n    return isFontWithAttrs || EXITS_FOREIGN_CONTENT.has(tn);\n}\n//Token adjustments\nexport function adjustTokenMathMLAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        if (token.attrs[i].name === DEFINITION_URL_ATTR) {\n            token.attrs[i].name = ADJUSTED_DEFINITION_URL_ATTR;\n            break;\n        }\n    }\n}\nexport function adjustTokenSVGAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        const adjustedAttrName = SVG_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);\n        if (adjustedAttrName != null) {\n            token.attrs[i].name = adjustedAttrName;\n        }\n    }\n}\nexport function adjustTokenXMLAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        const adjustedAttrEntry = XML_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);\n        if (adjustedAttrEntry) {\n            token.attrs[i].prefix = adjustedAttrEntry.prefix;\n            token.attrs[i].name = adjustedAttrEntry.name;\n            token.attrs[i].namespace = adjustedAttrEntry.namespace;\n        }\n    }\n}\nexport function adjustTokenSVGTagName(token) {\n    const adjustedTagName = SVG_TAG_NAMES_ADJUSTMENT_MAP.get(token.tagName);\n    if (adjustedTagName != null) {\n        token.tagName = adjustedTagName;\n        token.tagID = getTagID(token.tagName);\n    }\n}\n//Integration points\nfunction isMathMLTextIntegrationPoint(tn, ns) {\n    return ns === NS.MATHML && (tn === $.MI || tn === $.MO || tn === $.MN || tn === $.MS || tn === $.MTEXT);\n}\nfunction isHtmlIntegrationPoint(tn, ns, attrs) {\n    if (ns === NS.MATHML && tn === $.ANNOTATION_XML) {\n        for (let i = 0; i < attrs.length; i++) {\n            if (attrs[i].name === ATTRS.ENCODING) {\n                const value = attrs[i].value.toLowerCase();\n                return value === MIME_TYPES.TEXT_HTML || value === MIME_TYPES.APPLICATION_XML;\n            }\n        }\n    }\n    return ns === NS.SVG && (tn === $.FOREIGN_OBJECT || tn === $.DESC || tn === $.TITLE);\n}\nexport function isIntegrationPoint(tn, ns, attrs, foreignNS) {\n    return (((!foreignNS || foreignNS === NS.HTML) && isHtmlIntegrationPoint(tn, ns, attrs)) ||\n        ((!foreignNS || foreignNS === NS.MATHML) && isMathMLTextIntegrationPoint(tn, ns)));\n}\n","import { Tokenizer, TokenizerMode } from '../tokenizer/index.js';\nimport { OpenElementStack } from './open-element-stack.js';\nimport { FormattingElementList, EntryType } from './formatting-element-list.js';\nimport { defaultTreeAdapter } from '../tree-adapters/default.js';\nimport * as doctype from '../common/doctype.js';\nimport * as foreignContent from '../common/foreign-content.js';\nimport { ERR } from '../common/error-codes.js';\nimport * as unicode from '../common/unicode.js';\nimport { TAG_ID as $, TAG_NAMES as TN, NS, ATTRS, SPECIAL_ELEMENTS, DOCUMENT_MODE, NUMBERED_HEADERS, getTagID, } from '../common/html.js';\nimport { TokenType, getTokenAttr, } from '../common/token.js';\n//Misc constants\nconst HIDDEN_INPUT_TYPE = 'hidden';\n//Adoption agency loops iteration count\nconst AA_OUTER_LOOP_ITER = 8;\nconst AA_INNER_LOOP_ITER = 3;\n//Insertion modes\nvar InsertionMode;\n(function (InsertionMode) {\n    InsertionMode[InsertionMode[\"INITIAL\"] = 0] = \"INITIAL\";\n    InsertionMode[InsertionMode[\"BEFORE_HTML\"] = 1] = \"BEFORE_HTML\";\n    InsertionMode[InsertionMode[\"BEFORE_HEAD\"] = 2] = \"BEFORE_HEAD\";\n    InsertionMode[InsertionMode[\"IN_HEAD\"] = 3] = \"IN_HEAD\";\n    InsertionMode[InsertionMode[\"IN_HEAD_NO_SCRIPT\"] = 4] = \"IN_HEAD_NO_SCRIPT\";\n    InsertionMode[InsertionMode[\"AFTER_HEAD\"] = 5] = \"AFTER_HEAD\";\n    InsertionMode[InsertionMode[\"IN_BODY\"] = 6] = \"IN_BODY\";\n    InsertionMode[InsertionMode[\"TEXT\"] = 7] = \"TEXT\";\n    InsertionMode[InsertionMode[\"IN_TABLE\"] = 8] = \"IN_TABLE\";\n    InsertionMode[InsertionMode[\"IN_TABLE_TEXT\"] = 9] = \"IN_TABLE_TEXT\";\n    InsertionMode[InsertionMode[\"IN_CAPTION\"] = 10] = \"IN_CAPTION\";\n    InsertionMode[InsertionMode[\"IN_COLUMN_GROUP\"] = 11] = \"IN_COLUMN_GROUP\";\n    InsertionMode[InsertionMode[\"IN_TABLE_BODY\"] = 12] = \"IN_TABLE_BODY\";\n    InsertionMode[InsertionMode[\"IN_ROW\"] = 13] = \"IN_ROW\";\n    InsertionMode[InsertionMode[\"IN_CELL\"] = 14] = \"IN_CELL\";\n    InsertionMode[InsertionMode[\"IN_SELECT\"] = 15] = \"IN_SELECT\";\n    InsertionMode[InsertionMode[\"IN_SELECT_IN_TABLE\"] = 16] = \"IN_SELECT_IN_TABLE\";\n    InsertionMode[InsertionMode[\"IN_TEMPLATE\"] = 17] = \"IN_TEMPLATE\";\n    InsertionMode[InsertionMode[\"AFTER_BODY\"] = 18] = \"AFTER_BODY\";\n    InsertionMode[InsertionMode[\"IN_FRAMESET\"] = 19] = \"IN_FRAMESET\";\n    InsertionMode[InsertionMode[\"AFTER_FRAMESET\"] = 20] = \"AFTER_FRAMESET\";\n    InsertionMode[InsertionMode[\"AFTER_AFTER_BODY\"] = 21] = \"AFTER_AFTER_BODY\";\n    InsertionMode[InsertionMode[\"AFTER_AFTER_FRAMESET\"] = 22] = \"AFTER_AFTER_FRAMESET\";\n})(InsertionMode || (InsertionMode = {}));\nconst BASE_LOC = {\n    startLine: -1,\n    startCol: -1,\n    startOffset: -1,\n    endLine: -1,\n    endCol: -1,\n    endOffset: -1,\n};\nconst TABLE_STRUCTURE_TAGS = new Set([$.TABLE, $.TBODY, $.TFOOT, $.THEAD, $.TR]);\nconst defaultParserOptions = {\n    scriptingEnabled: true,\n    sourceCodeLocationInfo: false,\n    treeAdapter: defaultTreeAdapter,\n    onParseError: null,\n};\n//Parser\nexport class Parser {\n    constructor(options, document, \n    /** @internal */\n    fragmentContext = null, \n    /** @internal */\n    scriptHandler = null) {\n        this.fragmentContext = fragmentContext;\n        this.scriptHandler = scriptHandler;\n        this.currentToken = null;\n        this.stopped = false;\n        /** @internal */\n        this.insertionMode = InsertionMode.INITIAL;\n        /** @internal */\n        this.originalInsertionMode = InsertionMode.INITIAL;\n        /** @internal */\n        this.headElement = null;\n        /** @internal */\n        this.formElement = null;\n        /** Indicates that the current node is not an element in the HTML namespace */\n        this.currentNotInHTML = false;\n        /**\n         * The template insertion mode stack is maintained from the left.\n         * Ie. the topmost element will always have index 0.\n         *\n         * @internal\n         */\n        this.tmplInsertionModeStack = [];\n        /** @internal */\n        this.pendingCharacterTokens = [];\n        /** @internal */\n        this.hasNonWhitespacePendingCharacterToken = false;\n        /** @internal */\n        this.framesetOk = true;\n        /** @internal */\n        this.skipNextNewLine = false;\n        /** @internal */\n        this.fosterParentingEnabled = false;\n        this.options = {\n            ...defaultParserOptions,\n            ...options,\n        };\n        this.treeAdapter = this.options.treeAdapter;\n        this.onParseError = this.options.onParseError;\n        // Always enable location info if we report parse errors.\n        if (this.onParseError) {\n            this.options.sourceCodeLocationInfo = true;\n        }\n        this.document = document !== null && document !== void 0 ? document : this.treeAdapter.createDocument();\n        this.tokenizer = new Tokenizer(this.options, this);\n        this.activeFormattingElements = new FormattingElementList(this.treeAdapter);\n        this.fragmentContextID = fragmentContext ? getTagID(this.treeAdapter.getTagName(fragmentContext)) : $.UNKNOWN;\n        this._setContextModes(fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : this.document, this.fragmentContextID);\n        this.openElements = new OpenElementStack(this.document, this.treeAdapter, this);\n    }\n    // API\n    static parse(html, options) {\n        const parser = new this(options);\n        parser.tokenizer.write(html, true);\n        return parser.document;\n    }\n    static getFragmentParser(fragmentContext, options) {\n        const opts = {\n            ...defaultParserOptions,\n            ...options,\n        };\n        //NOTE: use a <template> element as the fragment context if no context element was provided,\n        //so we will parse in a \"forgiving\" manner\n        fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : (fragmentContext = opts.treeAdapter.createElement(TN.TEMPLATE, NS.HTML, []));\n        //NOTE: create a fake element which will be used as the `document` for fragment parsing.\n        //This is important for jsdom, where a new `document` cannot be created. This led to\n        //fragment parsing messing with the main `document`.\n        const documentMock = opts.treeAdapter.createElement('documentmock', NS.HTML, []);\n        const parser = new this(opts, documentMock, fragmentContext);\n        if (parser.fragmentContextID === $.TEMPLATE) {\n            parser.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n        }\n        parser._initTokenizerForFragmentParsing();\n        parser._insertFakeRootElement();\n        parser._resetInsertionMode();\n        parser._findFormInFragmentContext();\n        return parser;\n    }\n    getFragment() {\n        const rootElement = this.treeAdapter.getFirstChild(this.document);\n        const fragment = this.treeAdapter.createDocumentFragment();\n        this._adoptNodes(rootElement, fragment);\n        return fragment;\n    }\n    //Errors\n    /** @internal */\n    _err(token, code, beforeToken) {\n        var _a;\n        if (!this.onParseError)\n            return;\n        const loc = (_a = token.location) !== null && _a !== void 0 ? _a : BASE_LOC;\n        const err = {\n            code,\n            startLine: loc.startLine,\n            startCol: loc.startCol,\n            startOffset: loc.startOffset,\n            endLine: beforeToken ? loc.startLine : loc.endLine,\n            endCol: beforeToken ? loc.startCol : loc.endCol,\n            endOffset: beforeToken ? loc.startOffset : loc.endOffset,\n        };\n        this.onParseError(err);\n    }\n    //Stack events\n    /** @internal */\n    onItemPush(node, tid, isTop) {\n        var _a, _b;\n        (_b = (_a = this.treeAdapter).onItemPush) === null || _b === void 0 ? void 0 : _b.call(_a, node);\n        if (isTop && this.openElements.stackTop > 0)\n            this._setContextModes(node, tid);\n    }\n    /** @internal */\n    onItemPop(node, isTop) {\n        var _a, _b;\n        if (this.options.sourceCodeLocationInfo) {\n            this._setEndLocation(node, this.currentToken);\n        }\n        (_b = (_a = this.treeAdapter).onItemPop) === null || _b === void 0 ? void 0 : _b.call(_a, node, this.openElements.current);\n        if (isTop) {\n            let current;\n            let currentTagId;\n            if (this.openElements.stackTop === 0 && this.fragmentContext) {\n                current = this.fragmentContext;\n                currentTagId = this.fragmentContextID;\n            }\n            else {\n                ({ current, currentTagId } = this.openElements);\n            }\n            this._setContextModes(current, currentTagId);\n        }\n    }\n    _setContextModes(current, tid) {\n        const isHTML = current === this.document || this.treeAdapter.getNamespaceURI(current) === NS.HTML;\n        this.currentNotInHTML = !isHTML;\n        this.tokenizer.inForeignNode = !isHTML && !this._isIntegrationPoint(tid, current);\n    }\n    /** @protected */\n    _switchToTextParsing(currentToken, nextTokenizerState) {\n        this._insertElement(currentToken, NS.HTML);\n        this.tokenizer.state = nextTokenizerState;\n        this.originalInsertionMode = this.insertionMode;\n        this.insertionMode = InsertionMode.TEXT;\n    }\n    switchToPlaintextParsing() {\n        this.insertionMode = InsertionMode.TEXT;\n        this.originalInsertionMode = InsertionMode.IN_BODY;\n        this.tokenizer.state = TokenizerMode.PLAINTEXT;\n    }\n    //Fragment parsing\n    /** @protected */\n    _getAdjustedCurrentElement() {\n        return this.openElements.stackTop === 0 && this.fragmentContext\n            ? this.fragmentContext\n            : this.openElements.current;\n    }\n    /** @protected */\n    _findFormInFragmentContext() {\n        let node = this.fragmentContext;\n        while (node) {\n            if (this.treeAdapter.getTagName(node) === TN.FORM) {\n                this.formElement = node;\n                break;\n            }\n            node = this.treeAdapter.getParentNode(node);\n        }\n    }\n    _initTokenizerForFragmentParsing() {\n        if (!this.fragmentContext || this.treeAdapter.getNamespaceURI(this.fragmentContext) !== NS.HTML) {\n            return;\n        }\n        switch (this.fragmentContextID) {\n            case $.TITLE:\n            case $.TEXTAREA: {\n                this.tokenizer.state = TokenizerMode.RCDATA;\n                break;\n            }\n            case $.STYLE:\n            case $.XMP:\n            case $.IFRAME:\n            case $.NOEMBED:\n            case $.NOFRAMES:\n            case $.NOSCRIPT: {\n                this.tokenizer.state = TokenizerMode.RAWTEXT;\n                break;\n            }\n            case $.SCRIPT: {\n                this.tokenizer.state = TokenizerMode.SCRIPT_DATA;\n                break;\n            }\n            case $.PLAINTEXT: {\n                this.tokenizer.state = TokenizerMode.PLAINTEXT;\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    //Tree mutation\n    /** @protected */\n    _setDocumentType(token) {\n        const name = token.name || '';\n        const publicId = token.publicId || '';\n        const systemId = token.systemId || '';\n        this.treeAdapter.setDocumentType(this.document, name, publicId, systemId);\n        if (token.location) {\n            const documentChildren = this.treeAdapter.getChildNodes(this.document);\n            const docTypeNode = documentChildren.find((node) => this.treeAdapter.isDocumentTypeNode(node));\n            if (docTypeNode) {\n                this.treeAdapter.setNodeSourceCodeLocation(docTypeNode, token.location);\n            }\n        }\n    }\n    /** @protected */\n    _attachElementToTree(element, location) {\n        if (this.options.sourceCodeLocationInfo) {\n            const loc = location && {\n                ...location,\n                startTag: location,\n            };\n            this.treeAdapter.setNodeSourceCodeLocation(element, loc);\n        }\n        if (this._shouldFosterParentOnInsertion()) {\n            this._fosterParentElement(element);\n        }\n        else {\n            const parent = this.openElements.currentTmplContentOrNode;\n            this.treeAdapter.appendChild(parent, element);\n        }\n    }\n    /**\n     * For self-closing tags. Add an element to the tree, but skip adding it\n     * to the stack.\n     */\n    /** @protected */\n    _appendElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n        this._attachElementToTree(element, token.location);\n    }\n    /** @protected */\n    _insertElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n        this._attachElementToTree(element, token.location);\n        this.openElements.push(element, token.tagID);\n    }\n    /** @protected */\n    _insertFakeElement(tagName, tagID) {\n        const element = this.treeAdapter.createElement(tagName, NS.HTML, []);\n        this._attachElementToTree(element, null);\n        this.openElements.push(element, tagID);\n    }\n    /** @protected */\n    _insertTemplate(token) {\n        const tmpl = this.treeAdapter.createElement(token.tagName, NS.HTML, token.attrs);\n        const content = this.treeAdapter.createDocumentFragment();\n        this.treeAdapter.setTemplateContent(tmpl, content);\n        this._attachElementToTree(tmpl, token.location);\n        this.openElements.push(tmpl, token.tagID);\n        if (this.options.sourceCodeLocationInfo)\n            this.treeAdapter.setNodeSourceCodeLocation(content, null);\n    }\n    /** @protected */\n    _insertFakeRootElement() {\n        const element = this.treeAdapter.createElement(TN.HTML, NS.HTML, []);\n        if (this.options.sourceCodeLocationInfo)\n            this.treeAdapter.setNodeSourceCodeLocation(element, null);\n        this.treeAdapter.appendChild(this.openElements.current, element);\n        this.openElements.push(element, $.HTML);\n    }\n    /** @protected */\n    _appendCommentNode(token, parent) {\n        const commentNode = this.treeAdapter.createCommentNode(token.data);\n        this.treeAdapter.appendChild(parent, commentNode);\n        if (this.options.sourceCodeLocationInfo) {\n            this.treeAdapter.setNodeSourceCodeLocation(commentNode, token.location);\n        }\n    }\n    /** @protected */\n    _insertCharacters(token) {\n        let parent;\n        let beforeElement;\n        if (this._shouldFosterParentOnInsertion()) {\n            ({ parent, beforeElement } = this._findFosterParentingLocation());\n            if (beforeElement) {\n                this.treeAdapter.insertTextBefore(parent, token.chars, beforeElement);\n            }\n            else {\n                this.treeAdapter.insertText(parent, token.chars);\n            }\n        }\n        else {\n            parent = this.openElements.currentTmplContentOrNode;\n            this.treeAdapter.insertText(parent, token.chars);\n        }\n        if (!token.location)\n            return;\n        const siblings = this.treeAdapter.getChildNodes(parent);\n        const textNodeIdx = beforeElement ? siblings.lastIndexOf(beforeElement) : siblings.length;\n        const textNode = siblings[textNodeIdx - 1];\n        //NOTE: if we have a location assigned by another token, then just update the end position\n        const tnLoc = this.treeAdapter.getNodeSourceCodeLocation(textNode);\n        if (tnLoc) {\n            const { endLine, endCol, endOffset } = token.location;\n            this.treeAdapter.updateNodeSourceCodeLocation(textNode, { endLine, endCol, endOffset });\n        }\n        else if (this.options.sourceCodeLocationInfo) {\n            this.treeAdapter.setNodeSourceCodeLocation(textNode, token.location);\n        }\n    }\n    /** @protected */\n    _adoptNodes(donor, recipient) {\n        for (let child = this.treeAdapter.getFirstChild(donor); child; child = this.treeAdapter.getFirstChild(donor)) {\n            this.treeAdapter.detachNode(child);\n            this.treeAdapter.appendChild(recipient, child);\n        }\n    }\n    /** @protected */\n    _setEndLocation(element, closingToken) {\n        if (this.treeAdapter.getNodeSourceCodeLocation(element) && closingToken.location) {\n            const ctLoc = closingToken.location;\n            const tn = this.treeAdapter.getTagName(element);\n            const endLoc = \n            // NOTE: For cases like <p> <p> </p> - First 'p' closes without a closing\n            // tag and for cases like <td> <p> </td> - 'p' closes without a closing tag.\n            closingToken.type === TokenType.END_TAG && tn === closingToken.tagName\n                ? {\n                    endTag: { ...ctLoc },\n                    endLine: ctLoc.endLine,\n                    endCol: ctLoc.endCol,\n                    endOffset: ctLoc.endOffset,\n                }\n                : {\n                    endLine: ctLoc.startLine,\n                    endCol: ctLoc.startCol,\n                    endOffset: ctLoc.startOffset,\n                };\n            this.treeAdapter.updateNodeSourceCodeLocation(element, endLoc);\n        }\n    }\n    //Token processing\n    shouldProcessStartTagTokenInForeignContent(token) {\n        // Check that neither current === document, or ns === NS.HTML\n        if (!this.currentNotInHTML)\n            return false;\n        let current;\n        let currentTagId;\n        if (this.openElements.stackTop === 0 && this.fragmentContext) {\n            current = this.fragmentContext;\n            currentTagId = this.fragmentContextID;\n        }\n        else {\n            ({ current, currentTagId } = this.openElements);\n        }\n        if (token.tagID === $.SVG &&\n            this.treeAdapter.getTagName(current) === TN.ANNOTATION_XML &&\n            this.treeAdapter.getNamespaceURI(current) === NS.MATHML) {\n            return false;\n        }\n        return (\n        // Check that `current` is not an integration point for HTML or MathML elements.\n        this.tokenizer.inForeignNode ||\n            // If it _is_ an integration point, then we might have to check that it is not an HTML\n            // integration point.\n            ((token.tagID === $.MGLYPH || token.tagID === $.MALIGNMARK) &&\n                !this._isIntegrationPoint(currentTagId, current, NS.HTML)));\n    }\n    /** @protected */\n    _processToken(token) {\n        switch (token.type) {\n            case TokenType.CHARACTER: {\n                this.onCharacter(token);\n                break;\n            }\n            case TokenType.NULL_CHARACTER: {\n                this.onNullCharacter(token);\n                break;\n            }\n            case TokenType.COMMENT: {\n                this.onComment(token);\n                break;\n            }\n            case TokenType.DOCTYPE: {\n                this.onDoctype(token);\n                break;\n            }\n            case TokenType.START_TAG: {\n                this._processStartTag(token);\n                break;\n            }\n            case TokenType.END_TAG: {\n                this.onEndTag(token);\n                break;\n            }\n            case TokenType.EOF: {\n                this.onEof(token);\n                break;\n            }\n            case TokenType.WHITESPACE_CHARACTER: {\n                this.onWhitespaceCharacter(token);\n                break;\n            }\n        }\n    }\n    //Integration points\n    /** @protected */\n    _isIntegrationPoint(tid, element, foreignNS) {\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        const attrs = this.treeAdapter.getAttrList(element);\n        return foreignContent.isIntegrationPoint(tid, ns, attrs, foreignNS);\n    }\n    //Active formatting elements reconstruction\n    /** @protected */\n    _reconstructActiveFormattingElements() {\n        const listLength = this.activeFormattingElements.entries.length;\n        if (listLength) {\n            const endIndex = this.activeFormattingElements.entries.findIndex((entry) => entry.type === EntryType.Marker || this.openElements.contains(entry.element));\n            const unopenIdx = endIndex < 0 ? listLength - 1 : endIndex - 1;\n            for (let i = unopenIdx; i >= 0; i--) {\n                const entry = this.activeFormattingElements.entries[i];\n                this._insertElement(entry.token, this.treeAdapter.getNamespaceURI(entry.element));\n                entry.element = this.openElements.current;\n            }\n        }\n    }\n    //Close elements\n    /** @protected */\n    _closeTableCell() {\n        this.openElements.generateImpliedEndTags();\n        this.openElements.popUntilTableCellPopped();\n        this.activeFormattingElements.clearToLastMarker();\n        this.insertionMode = InsertionMode.IN_ROW;\n    }\n    /** @protected */\n    _closePElement() {\n        this.openElements.generateImpliedEndTagsWithExclusion($.P);\n        this.openElements.popUntilTagNamePopped($.P);\n    }\n    //Insertion modes\n    /** @protected */\n    _resetInsertionMode() {\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\n            //Insertion mode reset map\n            switch (i === 0 && this.fragmentContext ? this.fragmentContextID : this.openElements.tagIDs[i]) {\n                case $.TR: {\n                    this.insertionMode = InsertionMode.IN_ROW;\n                    return;\n                }\n                case $.TBODY:\n                case $.THEAD:\n                case $.TFOOT: {\n                    this.insertionMode = InsertionMode.IN_TABLE_BODY;\n                    return;\n                }\n                case $.CAPTION: {\n                    this.insertionMode = InsertionMode.IN_CAPTION;\n                    return;\n                }\n                case $.COLGROUP: {\n                    this.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n                    return;\n                }\n                case $.TABLE: {\n                    this.insertionMode = InsertionMode.IN_TABLE;\n                    return;\n                }\n                case $.BODY: {\n                    this.insertionMode = InsertionMode.IN_BODY;\n                    return;\n                }\n                case $.FRAMESET: {\n                    this.insertionMode = InsertionMode.IN_FRAMESET;\n                    return;\n                }\n                case $.SELECT: {\n                    this._resetInsertionModeForSelect(i);\n                    return;\n                }\n                case $.TEMPLATE: {\n                    this.insertionMode = this.tmplInsertionModeStack[0];\n                    return;\n                }\n                case $.HTML: {\n                    this.insertionMode = this.headElement ? InsertionMode.AFTER_HEAD : InsertionMode.BEFORE_HEAD;\n                    return;\n                }\n                case $.TD:\n                case $.TH: {\n                    if (i > 0) {\n                        this.insertionMode = InsertionMode.IN_CELL;\n                        return;\n                    }\n                    break;\n                }\n                case $.HEAD: {\n                    if (i > 0) {\n                        this.insertionMode = InsertionMode.IN_HEAD;\n                        return;\n                    }\n                    break;\n                }\n            }\n        }\n        this.insertionMode = InsertionMode.IN_BODY;\n    }\n    /** @protected */\n    _resetInsertionModeForSelect(selectIdx) {\n        if (selectIdx > 0) {\n            for (let i = selectIdx - 1; i > 0; i--) {\n                const tn = this.openElements.tagIDs[i];\n                if (tn === $.TEMPLATE) {\n                    break;\n                }\n                else if (tn === $.TABLE) {\n                    this.insertionMode = InsertionMode.IN_SELECT_IN_TABLE;\n                    return;\n                }\n            }\n        }\n        this.insertionMode = InsertionMode.IN_SELECT;\n    }\n    //Foster parenting\n    /** @protected */\n    _isElementCausesFosterParenting(tn) {\n        return TABLE_STRUCTURE_TAGS.has(tn);\n    }\n    /** @protected */\n    _shouldFosterParentOnInsertion() {\n        return this.fosterParentingEnabled && this._isElementCausesFosterParenting(this.openElements.currentTagId);\n    }\n    /** @protected */\n    _findFosterParentingLocation() {\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\n            const openElement = this.openElements.items[i];\n            switch (this.openElements.tagIDs[i]) {\n                case $.TEMPLATE: {\n                    if (this.treeAdapter.getNamespaceURI(openElement) === NS.HTML) {\n                        return { parent: this.treeAdapter.getTemplateContent(openElement), beforeElement: null };\n                    }\n                    break;\n                }\n                case $.TABLE: {\n                    const parent = this.treeAdapter.getParentNode(openElement);\n                    if (parent) {\n                        return { parent, beforeElement: openElement };\n                    }\n                    return { parent: this.openElements.items[i - 1], beforeElement: null };\n                }\n                default:\n                // Do nothing\n            }\n        }\n        return { parent: this.openElements.items[0], beforeElement: null };\n    }\n    /** @protected */\n    _fosterParentElement(element) {\n        const location = this._findFosterParentingLocation();\n        if (location.beforeElement) {\n            this.treeAdapter.insertBefore(location.parent, element, location.beforeElement);\n        }\n        else {\n            this.treeAdapter.appendChild(location.parent, element);\n        }\n    }\n    //Special elements\n    /** @protected */\n    _isSpecialElement(element, id) {\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        return SPECIAL_ELEMENTS[ns].has(id);\n    }\n    /** @internal */\n    onCharacter(token) {\n        this.skipNextNewLine = false;\n        if (this.tokenizer.inForeignNode) {\n            characterInForeignContent(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_TEMPLATE: {\n                characterInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                characterInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                tokenInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                tokenAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onNullCharacter(token) {\n        this.skipNextNewLine = false;\n        if (this.tokenizer.inForeignNode) {\n            nullCharacterInForeignContent(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                tokenInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                tokenAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onComment(token) {\n        this.skipNextNewLine = false;\n        if (this.currentNotInHTML) {\n            appendComment(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL:\n            case InsertionMode.BEFORE_HTML:\n            case InsertionMode.BEFORE_HEAD:\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD:\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n            case InsertionMode.IN_TEMPLATE:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET: {\n                appendComment(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                appendCommentToRootHtmlElement(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                appendCommentToDocument(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onDoctype(token) {\n        this.skipNextNewLine = false;\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                doctypeInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD:\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD: {\n                this._err(token, ERR.misplacedDoctype);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onStartTag(token) {\n        this.skipNextNewLine = false;\n        this.currentToken = token;\n        this._processStartTag(token);\n        if (token.selfClosing && !token.ackSelfClosing) {\n            this._err(token, ERR.nonVoidHtmlElementStartTagWithTrailingSolidus);\n        }\n    }\n    /**\n     * Processes a given start tag.\n     *\n     * `onStartTag` checks if a self-closing tag was recognized. When a token\n     * is moved inbetween multiple insertion modes, this check for self-closing\n     * could lead to false positives. To avoid this, `_processStartTag` is used\n     * for nested calls.\n     *\n     * @param token The token to process.\n     * @protected\n     */\n    _processStartTag(token) {\n        if (this.shouldProcessStartTagTokenInForeignContent(token)) {\n            startTagInForeignContent(this, token);\n        }\n        else {\n            this._startTagOutsideForeignContent(token);\n        }\n    }\n    /** @protected */\n    _startTagOutsideForeignContent(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                startTagBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                startTagBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                startTagInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                startTagInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                startTagAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY: {\n                startTagInBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE: {\n                startTagInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_CAPTION: {\n                startTagInCaption(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                startTagInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_BODY: {\n                startTagInTableBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_ROW: {\n                startTagInRow(this, token);\n                break;\n            }\n            case InsertionMode.IN_CELL: {\n                startTagInCell(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT: {\n                startTagInSelect(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                startTagInSelectInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                startTagInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                startTagAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_FRAMESET: {\n                startTagInFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_FRAMESET: {\n                startTagAfterFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                startTagAfterAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                startTagAfterAfterFrameset(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onEndTag(token) {\n        this.skipNextNewLine = false;\n        this.currentToken = token;\n        if (this.currentNotInHTML) {\n            endTagInForeignContent(this, token);\n        }\n        else {\n            this._endTagOutsideForeignContent(token);\n        }\n    }\n    /** @protected */\n    _endTagOutsideForeignContent(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                endTagBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                endTagBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                endTagInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                endTagInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                endTagAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY: {\n                endTagInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                endTagInText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE: {\n                endTagInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_CAPTION: {\n                endTagInCaption(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                endTagInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_BODY: {\n                endTagInTableBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_ROW: {\n                endTagInRow(this, token);\n                break;\n            }\n            case InsertionMode.IN_CELL: {\n                endTagInCell(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT: {\n                endTagInSelect(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                endTagInSelectInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                endTagInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                endTagAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_FRAMESET: {\n                endTagInFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_FRAMESET: {\n                endTagAfterFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onEof(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                eofInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                eofInText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                eofInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET:\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                stopParsing(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onWhitespaceCharacter(token) {\n        if (this.skipNextNewLine) {\n            this.skipNextNewLine = false;\n            if (token.chars.charCodeAt(0) === unicode.CODE_POINTS.LINE_FEED) {\n                if (token.chars.length === 1) {\n                    return;\n                }\n                token.chars = token.chars.substr(1);\n            }\n        }\n        if (this.tokenizer.inForeignNode) {\n            this._insertCharacters(token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD:\n            case InsertionMode.TEXT:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_TEMPLATE:\n            case InsertionMode.AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                whitespaceCharacterInBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                whitespaceCharacterInTableText(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n}\n//Adoption agency algorithm\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/tree-construction.html#adoptionAgency)\n//------------------------------------------------------------------\n//Steps 5-8 of the algorithm\nfunction aaObtainFormattingElementEntry(p, token) {\n    let formattingElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(token.tagName);\n    if (formattingElementEntry) {\n        if (!p.openElements.contains(formattingElementEntry.element)) {\n            p.activeFormattingElements.removeEntry(formattingElementEntry);\n            formattingElementEntry = null;\n        }\n        else if (!p.openElements.hasInScope(token.tagID)) {\n            formattingElementEntry = null;\n        }\n    }\n    else {\n        genericEndTagInBody(p, token);\n    }\n    return formattingElementEntry;\n}\n//Steps 9 and 10 of the algorithm\nfunction aaObtainFurthestBlock(p, formattingElementEntry) {\n    let furthestBlock = null;\n    let idx = p.openElements.stackTop;\n    for (; idx >= 0; idx--) {\n        const element = p.openElements.items[idx];\n        if (element === formattingElementEntry.element) {\n            break;\n        }\n        if (p._isSpecialElement(element, p.openElements.tagIDs[idx])) {\n            furthestBlock = element;\n        }\n    }\n    if (!furthestBlock) {\n        p.openElements.shortenToLength(idx < 0 ? 0 : idx);\n        p.activeFormattingElements.removeEntry(formattingElementEntry);\n    }\n    return furthestBlock;\n}\n//Step 13 of the algorithm\nfunction aaInnerLoop(p, furthestBlock, formattingElement) {\n    let lastElement = furthestBlock;\n    let nextElement = p.openElements.getCommonAncestor(furthestBlock);\n    for (let i = 0, element = nextElement; element !== formattingElement; i++, element = nextElement) {\n        //NOTE: store the next element for the next loop iteration (it may be deleted from the stack by step 9.5)\n        nextElement = p.openElements.getCommonAncestor(element);\n        const elementEntry = p.activeFormattingElements.getElementEntry(element);\n        const counterOverflow = elementEntry && i >= AA_INNER_LOOP_ITER;\n        const shouldRemoveFromOpenElements = !elementEntry || counterOverflow;\n        if (shouldRemoveFromOpenElements) {\n            if (counterOverflow) {\n                p.activeFormattingElements.removeEntry(elementEntry);\n            }\n            p.openElements.remove(element);\n        }\n        else {\n            element = aaRecreateElementFromEntry(p, elementEntry);\n            if (lastElement === furthestBlock) {\n                p.activeFormattingElements.bookmark = elementEntry;\n            }\n            p.treeAdapter.detachNode(lastElement);\n            p.treeAdapter.appendChild(element, lastElement);\n            lastElement = element;\n        }\n    }\n    return lastElement;\n}\n//Step 13.7 of the algorithm\nfunction aaRecreateElementFromEntry(p, elementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(elementEntry.element);\n    const newElement = p.treeAdapter.createElement(elementEntry.token.tagName, ns, elementEntry.token.attrs);\n    p.openElements.replace(elementEntry.element, newElement);\n    elementEntry.element = newElement;\n    return newElement;\n}\n//Step 14 of the algorithm\nfunction aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement) {\n    const tn = p.treeAdapter.getTagName(commonAncestor);\n    const tid = getTagID(tn);\n    if (p._isElementCausesFosterParenting(tid)) {\n        p._fosterParentElement(lastElement);\n    }\n    else {\n        const ns = p.treeAdapter.getNamespaceURI(commonAncestor);\n        if (tid === $.TEMPLATE && ns === NS.HTML) {\n            commonAncestor = p.treeAdapter.getTemplateContent(commonAncestor);\n        }\n        p.treeAdapter.appendChild(commonAncestor, lastElement);\n    }\n}\n//Steps 15-19 of the algorithm\nfunction aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(formattingElementEntry.element);\n    const { token } = formattingElementEntry;\n    const newElement = p.treeAdapter.createElement(token.tagName, ns, token.attrs);\n    p._adoptNodes(furthestBlock, newElement);\n    p.treeAdapter.appendChild(furthestBlock, newElement);\n    p.activeFormattingElements.insertElementAfterBookmark(newElement, token);\n    p.activeFormattingElements.removeEntry(formattingElementEntry);\n    p.openElements.remove(formattingElementEntry.element);\n    p.openElements.insertAfter(furthestBlock, newElement, token.tagID);\n}\n//Algorithm entry point\nfunction callAdoptionAgency(p, token) {\n    for (let i = 0; i < AA_OUTER_LOOP_ITER; i++) {\n        const formattingElementEntry = aaObtainFormattingElementEntry(p, token);\n        if (!formattingElementEntry) {\n            break;\n        }\n        const furthestBlock = aaObtainFurthestBlock(p, formattingElementEntry);\n        if (!furthestBlock) {\n            break;\n        }\n        p.activeFormattingElements.bookmark = formattingElementEntry;\n        const lastElement = aaInnerLoop(p, furthestBlock, formattingElementEntry.element);\n        const commonAncestor = p.openElements.getCommonAncestor(formattingElementEntry.element);\n        p.treeAdapter.detachNode(lastElement);\n        if (commonAncestor)\n            aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement);\n        aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry);\n    }\n}\n//Generic token handlers\n//------------------------------------------------------------------\nfunction appendComment(p, token) {\n    p._appendCommentNode(token, p.openElements.currentTmplContentOrNode);\n}\nfunction appendCommentToRootHtmlElement(p, token) {\n    p._appendCommentNode(token, p.openElements.items[0]);\n}\nfunction appendCommentToDocument(p, token) {\n    p._appendCommentNode(token, p.document);\n}\nfunction stopParsing(p, token) {\n    p.stopped = true;\n    // NOTE: Set end locations for elements that remain on the open element stack.\n    if (token.location) {\n        // NOTE: If we are not in a fragment, `html` and `body` will stay on the stack.\n        // This is a problem, as we might overwrite their end position here.\n        const target = p.fragmentContext ? 0 : 2;\n        for (let i = p.openElements.stackTop; i >= target; i--) {\n            p._setEndLocation(p.openElements.items[i], token);\n        }\n        // Handle `html` and `body`\n        if (!p.fragmentContext && p.openElements.stackTop >= 0) {\n            const htmlElement = p.openElements.items[0];\n            const htmlLocation = p.treeAdapter.getNodeSourceCodeLocation(htmlElement);\n            if (htmlLocation && !htmlLocation.endTag) {\n                p._setEndLocation(htmlElement, token);\n                if (p.openElements.stackTop >= 1) {\n                    const bodyElement = p.openElements.items[1];\n                    const bodyLocation = p.treeAdapter.getNodeSourceCodeLocation(bodyElement);\n                    if (bodyLocation && !bodyLocation.endTag) {\n                        p._setEndLocation(bodyElement, token);\n                    }\n                }\n            }\n        }\n    }\n}\n// The \"initial\" insertion mode\n//------------------------------------------------------------------\nfunction doctypeInInitialMode(p, token) {\n    p._setDocumentType(token);\n    const mode = token.forceQuirks ? DOCUMENT_MODE.QUIRKS : doctype.getDocumentMode(token);\n    if (!doctype.isConforming(token)) {\n        p._err(token, ERR.nonConformingDoctype);\n    }\n    p.treeAdapter.setDocumentMode(p.document, mode);\n    p.insertionMode = InsertionMode.BEFORE_HTML;\n}\nfunction tokenInInitialMode(p, token) {\n    p._err(token, ERR.missingDoctype, true);\n    p.treeAdapter.setDocumentMode(p.document, DOCUMENT_MODE.QUIRKS);\n    p.insertionMode = InsertionMode.BEFORE_HTML;\n    p._processToken(token);\n}\n// The \"before html\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHtml(p, token) {\n    if (token.tagID === $.HTML) {\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.BEFORE_HEAD;\n    }\n    else {\n        tokenBeforeHtml(p, token);\n    }\n}\nfunction endTagBeforeHtml(p, token) {\n    const tn = token.tagID;\n    if (tn === $.HTML || tn === $.HEAD || tn === $.BODY || tn === $.BR) {\n        tokenBeforeHtml(p, token);\n    }\n}\nfunction tokenBeforeHtml(p, token) {\n    p._insertFakeRootElement();\n    p.insertionMode = InsertionMode.BEFORE_HEAD;\n    p._processToken(token);\n}\n// The \"before head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.HEAD: {\n            p._insertElement(token, NS.HTML);\n            p.headElement = p.openElements.current;\n            p.insertionMode = InsertionMode.IN_HEAD;\n            break;\n        }\n        default: {\n            tokenBeforeHead(p, token);\n        }\n    }\n}\nfunction endTagBeforeHead(p, token) {\n    const tn = token.tagID;\n    if (tn === $.HEAD || tn === $.BODY || tn === $.HTML || tn === $.BR) {\n        tokenBeforeHead(p, token);\n    }\n    else {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n    }\n}\nfunction tokenBeforeHead(p, token) {\n    p._insertFakeElement(TN.HEAD, $.HEAD);\n    p.headElement = p.openElements.current;\n    p.insertionMode = InsertionMode.IN_HEAD;\n    p._processToken(token);\n}\n// The \"in head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.TITLE: {\n            p._switchToTextParsing(token, TokenizerMode.RCDATA);\n            break;\n        }\n        case $.NOSCRIPT: {\n            if (p.options.scriptingEnabled) {\n                p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n            }\n            else {\n                p._insertElement(token, NS.HTML);\n                p.insertionMode = InsertionMode.IN_HEAD_NO_SCRIPT;\n            }\n            break;\n        }\n        case $.NOFRAMES:\n        case $.STYLE: {\n            p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n            break;\n        }\n        case $.SCRIPT: {\n            p._switchToTextParsing(token, TokenizerMode.SCRIPT_DATA);\n            break;\n        }\n        case $.TEMPLATE: {\n            p._insertTemplate(token);\n            p.activeFormattingElements.insertMarker();\n            p.framesetOk = false;\n            p.insertionMode = InsertionMode.IN_TEMPLATE;\n            p.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n            break;\n        }\n        case $.HEAD: {\n            p._err(token, ERR.misplacedStartTagForHeadElement);\n            break;\n        }\n        default: {\n            tokenInHead(p, token);\n        }\n    }\n}\nfunction endTagInHead(p, token) {\n    switch (token.tagID) {\n        case $.HEAD: {\n            p.openElements.pop();\n            p.insertionMode = InsertionMode.AFTER_HEAD;\n            break;\n        }\n        case $.BODY:\n        case $.BR:\n        case $.HTML: {\n            tokenInHead(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction templateEndTagInHead(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.generateImpliedEndTagsThoroughly();\n        if (p.openElements.currentTagId !== $.TEMPLATE) {\n            p._err(token, ERR.closingOfElementWithOpenChildElements);\n        }\n        p.openElements.popUntilTagNamePopped($.TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p.tmplInsertionModeStack.shift();\n        p._resetInsertionMode();\n    }\n    else {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n    }\n}\nfunction tokenInHead(p, token) {\n    p.openElements.pop();\n    p.insertionMode = InsertionMode.AFTER_HEAD;\n    p._processToken(token);\n}\n// The \"in head no script\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHeadNoScript(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.HEAD:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.STYLE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.NOSCRIPT: {\n            p._err(token, ERR.nestedNoscriptInHead);\n            break;\n        }\n        default: {\n            tokenInHeadNoScript(p, token);\n        }\n    }\n}\nfunction endTagInHeadNoScript(p, token) {\n    switch (token.tagID) {\n        case $.NOSCRIPT: {\n            p.openElements.pop();\n            p.insertionMode = InsertionMode.IN_HEAD;\n            break;\n        }\n        case $.BR: {\n            tokenInHeadNoScript(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction tokenInHeadNoScript(p, token) {\n    const errCode = token.type === TokenType.EOF ? ERR.openElementsLeftAfterEof : ERR.disallowedContentInNoscriptInHead;\n    p._err(token, errCode);\n    p.openElements.pop();\n    p.insertionMode = InsertionMode.IN_HEAD;\n    p._processToken(token);\n}\n// The \"after head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BODY: {\n            p._insertElement(token, NS.HTML);\n            p.framesetOk = false;\n            p.insertionMode = InsertionMode.IN_BODY;\n            break;\n        }\n        case $.FRAMESET: {\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_FRAMESET;\n            break;\n        }\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.SCRIPT:\n        case $.STYLE:\n        case $.TEMPLATE:\n        case $.TITLE: {\n            p._err(token, ERR.abandonedHeadElementChild);\n            p.openElements.push(p.headElement, $.HEAD);\n            startTagInHead(p, token);\n            p.openElements.remove(p.headElement);\n            break;\n        }\n        case $.HEAD: {\n            p._err(token, ERR.misplacedStartTagForHeadElement);\n            break;\n        }\n        default: {\n            tokenAfterHead(p, token);\n        }\n    }\n}\nfunction endTagAfterHead(p, token) {\n    switch (token.tagID) {\n        case $.BODY:\n        case $.HTML:\n        case $.BR: {\n            tokenAfterHead(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction tokenAfterHead(p, token) {\n    p._insertFakeElement(TN.BODY, $.BODY);\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"in body\" insertion mode\n//------------------------------------------------------------------\nfunction modeInBody(p, token) {\n    switch (token.type) {\n        case TokenType.CHARACTER: {\n            characterInBody(p, token);\n            break;\n        }\n        case TokenType.WHITESPACE_CHARACTER: {\n            whitespaceCharacterInBody(p, token);\n            break;\n        }\n        case TokenType.COMMENT: {\n            appendComment(p, token);\n            break;\n        }\n        case TokenType.START_TAG: {\n            startTagInBody(p, token);\n            break;\n        }\n        case TokenType.END_TAG: {\n            endTagInBody(p, token);\n            break;\n        }\n        case TokenType.EOF: {\n            eofInBody(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction whitespaceCharacterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n}\nfunction characterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\nfunction htmlStartTagInBody(p, token) {\n    if (p.openElements.tmplCount === 0) {\n        p.treeAdapter.adoptAttributes(p.openElements.items[0], token.attrs);\n    }\n}\nfunction bodyStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n    if (bodyElement && p.openElements.tmplCount === 0) {\n        p.framesetOk = false;\n        p.treeAdapter.adoptAttributes(bodyElement, token.attrs);\n    }\n}\nfunction framesetStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n    if (p.framesetOk && bodyElement) {\n        p.treeAdapter.detachNode(bodyElement);\n        p.openElements.popAllUpToHtmlElement();\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.IN_FRAMESET;\n    }\n}\nfunction addressStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction numberedHeaderStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    if (NUMBERED_HEADERS.has(p.openElements.currentTagId)) {\n        p.openElements.pop();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction preStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of pre blocks are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.framesetOk = false;\n}\nfunction formStartTagInBody(p, token) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    if (!p.formElement || inTemplate) {\n        if (p.openElements.hasInButtonScope($.P)) {\n            p._closePElement();\n        }\n        p._insertElement(token, NS.HTML);\n        if (!inTemplate) {\n            p.formElement = p.openElements.current;\n        }\n    }\n}\nfunction listItemStartTagInBody(p, token) {\n    p.framesetOk = false;\n    const tn = token.tagID;\n    for (let i = p.openElements.stackTop; i >= 0; i--) {\n        const elementId = p.openElements.tagIDs[i];\n        if ((tn === $.LI && elementId === $.LI) ||\n            ((tn === $.DD || tn === $.DT) && (elementId === $.DD || elementId === $.DT))) {\n            p.openElements.generateImpliedEndTagsWithExclusion(elementId);\n            p.openElements.popUntilTagNamePopped(elementId);\n            break;\n        }\n        if (elementId !== $.ADDRESS &&\n            elementId !== $.DIV &&\n            elementId !== $.P &&\n            p._isSpecialElement(p.openElements.items[i], elementId)) {\n            break;\n        }\n    }\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction plaintextStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    p.tokenizer.state = TokenizerMode.PLAINTEXT;\n}\nfunction buttonStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BUTTON)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped($.BUTTON);\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n}\nfunction aStartTagInBody(p, token) {\n    const activeElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(TN.A);\n    if (activeElementEntry) {\n        callAdoptionAgency(p, token);\n        p.openElements.remove(activeElementEntry.element);\n        p.activeFormattingElements.removeEntry(activeElementEntry);\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction bStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction nobrStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    if (p.openElements.hasInScope($.NOBR)) {\n        callAdoptionAgency(p, token);\n        p._reconstructActiveFormattingElements();\n    }\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction appletStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.insertMarker();\n    p.framesetOk = false;\n}\nfunction tableStartTagInBody(p, token) {\n    if (p.treeAdapter.getDocumentMode(p.document) !== DOCUMENT_MODE.QUIRKS && p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n    p.insertionMode = InsertionMode.IN_TABLE;\n}\nfunction areaStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\nfunction isHiddenInput(token) {\n    const inputType = getTokenAttr(token, ATTRS.TYPE);\n    return inputType != null && inputType.toLowerCase() === HIDDEN_INPUT_TYPE;\n}\nfunction inputStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, NS.HTML);\n    if (!isHiddenInput(token)) {\n        p.framesetOk = false;\n    }\n    token.ackSelfClosing = true;\n}\nfunction paramStartTagInBody(p, token) {\n    p._appendElement(token, NS.HTML);\n    token.ackSelfClosing = true;\n}\nfunction hrStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._appendElement(token, NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\nfunction imageStartTagInBody(p, token) {\n    token.tagName = TN.IMG;\n    token.tagID = $.IMG;\n    areaStartTagInBody(p, token);\n}\nfunction textareaStartTagInBody(p, token) {\n    p._insertElement(token, NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of textarea elements are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.tokenizer.state = TokenizerMode.RCDATA;\n    p.originalInsertionMode = p.insertionMode;\n    p.framesetOk = false;\n    p.insertionMode = InsertionMode.TEXT;\n}\nfunction xmpStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._reconstructActiveFormattingElements();\n    p.framesetOk = false;\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\nfunction iframeStartTagInBody(p, token) {\n    p.framesetOk = false;\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\n//NOTE: here we assume that we always act as a user agent with enabled plugins/frames, so we parse\n//<noembed>/<noframes> as rawtext.\nfunction rawTextStartTagInBody(p, token) {\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\nfunction selectStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n    p.insertionMode =\n        p.insertionMode === InsertionMode.IN_TABLE ||\n            p.insertionMode === InsertionMode.IN_CAPTION ||\n            p.insertionMode === InsertionMode.IN_TABLE_BODY ||\n            p.insertionMode === InsertionMode.IN_ROW ||\n            p.insertionMode === InsertionMode.IN_CELL\n            ? InsertionMode.IN_SELECT_IN_TABLE\n            : InsertionMode.IN_SELECT;\n}\nfunction optgroupStartTagInBody(p, token) {\n    if (p.openElements.currentTagId === $.OPTION) {\n        p.openElements.pop();\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n}\nfunction rbStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.RUBY)) {\n        p.openElements.generateImpliedEndTags();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction rtStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.RUBY)) {\n        p.openElements.generateImpliedEndTagsWithExclusion($.RTC);\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction mathStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    foreignContent.adjustTokenMathMLAttrs(token);\n    foreignContent.adjustTokenXMLAttrs(token);\n    if (token.selfClosing) {\n        p._appendElement(token, NS.MATHML);\n    }\n    else {\n        p._insertElement(token, NS.MATHML);\n    }\n    token.ackSelfClosing = true;\n}\nfunction svgStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    foreignContent.adjustTokenSVGAttrs(token);\n    foreignContent.adjustTokenXMLAttrs(token);\n    if (token.selfClosing) {\n        p._appendElement(token, NS.SVG);\n    }\n    else {\n        p._insertElement(token, NS.SVG);\n    }\n    token.ackSelfClosing = true;\n}\nfunction genericStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n}\nfunction startTagInBody(p, token) {\n    switch (token.tagID) {\n        case $.I:\n        case $.S:\n        case $.B:\n        case $.U:\n        case $.EM:\n        case $.TT:\n        case $.BIG:\n        case $.CODE:\n        case $.FONT:\n        case $.SMALL:\n        case $.STRIKE:\n        case $.STRONG: {\n            bStartTagInBody(p, token);\n            break;\n        }\n        case $.A: {\n            aStartTagInBody(p, token);\n            break;\n        }\n        case $.H1:\n        case $.H2:\n        case $.H3:\n        case $.H4:\n        case $.H5:\n        case $.H6: {\n            numberedHeaderStartTagInBody(p, token);\n            break;\n        }\n        case $.P:\n        case $.DL:\n        case $.OL:\n        case $.UL:\n        case $.DIV:\n        case $.DIR:\n        case $.NAV:\n        case $.MAIN:\n        case $.MENU:\n        case $.ASIDE:\n        case $.CENTER:\n        case $.FIGURE:\n        case $.FOOTER:\n        case $.HEADER:\n        case $.HGROUP:\n        case $.DIALOG:\n        case $.DETAILS:\n        case $.ADDRESS:\n        case $.ARTICLE:\n        case $.SEARCH:\n        case $.SECTION:\n        case $.SUMMARY:\n        case $.FIELDSET:\n        case $.BLOCKQUOTE:\n        case $.FIGCAPTION: {\n            addressStartTagInBody(p, token);\n            break;\n        }\n        case $.LI:\n        case $.DD:\n        case $.DT: {\n            listItemStartTagInBody(p, token);\n            break;\n        }\n        case $.BR:\n        case $.IMG:\n        case $.WBR:\n        case $.AREA:\n        case $.EMBED:\n        case $.KEYGEN: {\n            areaStartTagInBody(p, token);\n            break;\n        }\n        case $.HR: {\n            hrStartTagInBody(p, token);\n            break;\n        }\n        case $.RB:\n        case $.RTC: {\n            rbStartTagInBody(p, token);\n            break;\n        }\n        case $.RT:\n        case $.RP: {\n            rtStartTagInBody(p, token);\n            break;\n        }\n        case $.PRE:\n        case $.LISTING: {\n            preStartTagInBody(p, token);\n            break;\n        }\n        case $.XMP: {\n            xmpStartTagInBody(p, token);\n            break;\n        }\n        case $.SVG: {\n            svgStartTagInBody(p, token);\n            break;\n        }\n        case $.HTML: {\n            htmlStartTagInBody(p, token);\n            break;\n        }\n        case $.BASE:\n        case $.LINK:\n        case $.META:\n        case $.STYLE:\n        case $.TITLE:\n        case $.SCRIPT:\n        case $.BGSOUND:\n        case $.BASEFONT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.BODY: {\n            bodyStartTagInBody(p, token);\n            break;\n        }\n        case $.FORM: {\n            formStartTagInBody(p, token);\n            break;\n        }\n        case $.NOBR: {\n            nobrStartTagInBody(p, token);\n            break;\n        }\n        case $.MATH: {\n            mathStartTagInBody(p, token);\n            break;\n        }\n        case $.TABLE: {\n            tableStartTagInBody(p, token);\n            break;\n        }\n        case $.INPUT: {\n            inputStartTagInBody(p, token);\n            break;\n        }\n        case $.PARAM:\n        case $.TRACK:\n        case $.SOURCE: {\n            paramStartTagInBody(p, token);\n            break;\n        }\n        case $.IMAGE: {\n            imageStartTagInBody(p, token);\n            break;\n        }\n        case $.BUTTON: {\n            buttonStartTagInBody(p, token);\n            break;\n        }\n        case $.APPLET:\n        case $.OBJECT:\n        case $.MARQUEE: {\n            appletStartTagInBody(p, token);\n            break;\n        }\n        case $.IFRAME: {\n            iframeStartTagInBody(p, token);\n            break;\n        }\n        case $.SELECT: {\n            selectStartTagInBody(p, token);\n            break;\n        }\n        case $.OPTION:\n        case $.OPTGROUP: {\n            optgroupStartTagInBody(p, token);\n            break;\n        }\n        case $.NOEMBED:\n        case $.NOFRAMES: {\n            rawTextStartTagInBody(p, token);\n            break;\n        }\n        case $.FRAMESET: {\n            framesetStartTagInBody(p, token);\n            break;\n        }\n        case $.TEXTAREA: {\n            textareaStartTagInBody(p, token);\n            break;\n        }\n        case $.NOSCRIPT: {\n            if (p.options.scriptingEnabled) {\n                rawTextStartTagInBody(p, token);\n            }\n            else {\n                genericStartTagInBody(p, token);\n            }\n            break;\n        }\n        case $.PLAINTEXT: {\n            plaintextStartTagInBody(p, token);\n            break;\n        }\n        case $.COL:\n        case $.TH:\n        case $.TD:\n        case $.TR:\n        case $.HEAD:\n        case $.FRAME:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.CAPTION:\n        case $.COLGROUP: {\n            // Ignore token\n            break;\n        }\n        default: {\n            genericStartTagInBody(p, token);\n        }\n    }\n}\nfunction bodyEndTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BODY)) {\n        p.insertionMode = InsertionMode.AFTER_BODY;\n        //NOTE: <body> is never popped from the stack, so we need to updated\n        //the end location explicitly.\n        if (p.options.sourceCodeLocationInfo) {\n            const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n            if (bodyElement) {\n                p._setEndLocation(bodyElement, token);\n            }\n        }\n    }\n}\nfunction htmlEndTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BODY)) {\n        p.insertionMode = InsertionMode.AFTER_BODY;\n        endTagAfterBody(p, token);\n    }\n}\nfunction addressEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\nfunction formEndTagInBody(p) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    const { formElement } = p;\n    if (!inTemplate) {\n        p.formElement = null;\n    }\n    if ((formElement || inTemplate) && p.openElements.hasInScope($.FORM)) {\n        p.openElements.generateImpliedEndTags();\n        if (inTemplate) {\n            p.openElements.popUntilTagNamePopped($.FORM);\n        }\n        else if (formElement) {\n            p.openElements.remove(formElement);\n        }\n    }\n}\nfunction pEndTagInBody(p) {\n    if (!p.openElements.hasInButtonScope($.P)) {\n        p._insertFakeElement(TN.P, $.P);\n    }\n    p._closePElement();\n}\nfunction liEndTagInBody(p) {\n    if (p.openElements.hasInListItemScope($.LI)) {\n        p.openElements.generateImpliedEndTagsWithExclusion($.LI);\n        p.openElements.popUntilTagNamePopped($.LI);\n    }\n}\nfunction ddEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTagsWithExclusion(tn);\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\nfunction numberedHeaderEndTagInBody(p) {\n    if (p.openElements.hasNumberedHeaderInScope()) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilNumberedHeaderPopped();\n    }\n}\nfunction appletEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n        p.activeFormattingElements.clearToLastMarker();\n    }\n}\nfunction brEndTagInBody(p) {\n    p._reconstructActiveFormattingElements();\n    p._insertFakeElement(TN.BR, $.BR);\n    p.openElements.pop();\n    p.framesetOk = false;\n}\nfunction genericEndTagInBody(p, token) {\n    const tn = token.tagName;\n    const tid = token.tagID;\n    for (let i = p.openElements.stackTop; i > 0; i--) {\n        const element = p.openElements.items[i];\n        const elementId = p.openElements.tagIDs[i];\n        // Compare the tag name here, as the tag might not be a known tag with an ID.\n        if (tid === elementId && (tid !== $.UNKNOWN || p.treeAdapter.getTagName(element) === tn)) {\n            p.openElements.generateImpliedEndTagsWithExclusion(tid);\n            if (p.openElements.stackTop >= i)\n                p.openElements.shortenToLength(i);\n            break;\n        }\n        if (p._isSpecialElement(element, elementId)) {\n            break;\n        }\n    }\n}\nfunction endTagInBody(p, token) {\n    switch (token.tagID) {\n        case $.A:\n        case $.B:\n        case $.I:\n        case $.S:\n        case $.U:\n        case $.EM:\n        case $.TT:\n        case $.BIG:\n        case $.CODE:\n        case $.FONT:\n        case $.NOBR:\n        case $.SMALL:\n        case $.STRIKE:\n        case $.STRONG: {\n            callAdoptionAgency(p, token);\n            break;\n        }\n        case $.P: {\n            pEndTagInBody(p);\n            break;\n        }\n        case $.DL:\n        case $.UL:\n        case $.OL:\n        case $.DIR:\n        case $.DIV:\n        case $.NAV:\n        case $.PRE:\n        case $.MAIN:\n        case $.MENU:\n        case $.ASIDE:\n        case $.BUTTON:\n        case $.CENTER:\n        case $.FIGURE:\n        case $.FOOTER:\n        case $.HEADER:\n        case $.HGROUP:\n        case $.DIALOG:\n        case $.ADDRESS:\n        case $.ARTICLE:\n        case $.DETAILS:\n        case $.SEARCH:\n        case $.SECTION:\n        case $.SUMMARY:\n        case $.LISTING:\n        case $.FIELDSET:\n        case $.BLOCKQUOTE:\n        case $.FIGCAPTION: {\n            addressEndTagInBody(p, token);\n            break;\n        }\n        case $.LI: {\n            liEndTagInBody(p);\n            break;\n        }\n        case $.DD:\n        case $.DT: {\n            ddEndTagInBody(p, token);\n            break;\n        }\n        case $.H1:\n        case $.H2:\n        case $.H3:\n        case $.H4:\n        case $.H5:\n        case $.H6: {\n            numberedHeaderEndTagInBody(p);\n            break;\n        }\n        case $.BR: {\n            brEndTagInBody(p);\n            break;\n        }\n        case $.BODY: {\n            bodyEndTagInBody(p, token);\n            break;\n        }\n        case $.HTML: {\n            htmlEndTagInBody(p, token);\n            break;\n        }\n        case $.FORM: {\n            formEndTagInBody(p);\n            break;\n        }\n        case $.APPLET:\n        case $.OBJECT:\n        case $.MARQUEE: {\n            appletEndTagInBody(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            genericEndTagInBody(p, token);\n        }\n    }\n}\nfunction eofInBody(p, token) {\n    if (p.tmplInsertionModeStack.length > 0) {\n        eofInTemplate(p, token);\n    }\n    else {\n        stopParsing(p, token);\n    }\n}\n// The \"text\" insertion mode\n//------------------------------------------------------------------\nfunction endTagInText(p, token) {\n    var _a;\n    if (token.tagID === $.SCRIPT) {\n        (_a = p.scriptHandler) === null || _a === void 0 ? void 0 : _a.call(p, p.openElements.current);\n    }\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n}\nfunction eofInText(p, token) {\n    p._err(token, ERR.eofInElementThatCanContainOnlyText);\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n    p.onEof(token);\n}\n// The \"in table\" insertion mode\n//------------------------------------------------------------------\nfunction characterInTable(p, token) {\n    if (TABLE_STRUCTURE_TAGS.has(p.openElements.currentTagId)) {\n        p.pendingCharacterTokens.length = 0;\n        p.hasNonWhitespacePendingCharacterToken = false;\n        p.originalInsertionMode = p.insertionMode;\n        p.insertionMode = InsertionMode.IN_TABLE_TEXT;\n        switch (token.type) {\n            case TokenType.CHARACTER: {\n                characterInTableText(p, token);\n                break;\n            }\n            case TokenType.WHITESPACE_CHARACTER: {\n                whitespaceCharacterInTableText(p, token);\n                break;\n            }\n            // Ignore null\n        }\n    }\n    else {\n        tokenInTable(p, token);\n    }\n}\nfunction captionStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p.activeFormattingElements.insertMarker();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_CAPTION;\n}\nfunction colgroupStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n}\nfunction colStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement(TN.COLGROUP, $.COLGROUP);\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n    startTagInColumnGroup(p, token);\n}\nfunction tbodyStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n}\nfunction tdStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement(TN.TBODY, $.TBODY);\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n    startTagInTableBody(p, token);\n}\nfunction tableStartTagInTable(p, token) {\n    if (p.openElements.hasInTableScope($.TABLE)) {\n        p.openElements.popUntilTagNamePopped($.TABLE);\n        p._resetInsertionMode();\n        p._processStartTag(token);\n    }\n}\nfunction inputStartTagInTable(p, token) {\n    if (isHiddenInput(token)) {\n        p._appendElement(token, NS.HTML);\n    }\n    else {\n        tokenInTable(p, token);\n    }\n    token.ackSelfClosing = true;\n}\nfunction formStartTagInTable(p, token) {\n    if (!p.formElement && p.openElements.tmplCount === 0) {\n        p._insertElement(token, NS.HTML);\n        p.formElement = p.openElements.current;\n        p.openElements.pop();\n    }\n}\nfunction startTagInTable(p, token) {\n    switch (token.tagID) {\n        case $.TD:\n        case $.TH:\n        case $.TR: {\n            tdStartTagInTable(p, token);\n            break;\n        }\n        case $.STYLE:\n        case $.SCRIPT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.COL: {\n            colStartTagInTable(p, token);\n            break;\n        }\n        case $.FORM: {\n            formStartTagInTable(p, token);\n            break;\n        }\n        case $.TABLE: {\n            tableStartTagInTable(p, token);\n            break;\n        }\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            tbodyStartTagInTable(p, token);\n            break;\n        }\n        case $.INPUT: {\n            inputStartTagInTable(p, token);\n            break;\n        }\n        case $.CAPTION: {\n            captionStartTagInTable(p, token);\n            break;\n        }\n        case $.COLGROUP: {\n            colgroupStartTagInTable(p, token);\n            break;\n        }\n        default: {\n            tokenInTable(p, token);\n        }\n    }\n}\nfunction endTagInTable(p, token) {\n    switch (token.tagID) {\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.TABLE)) {\n                p.openElements.popUntilTagNamePopped($.TABLE);\n                p._resetInsertionMode();\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TBODY:\n        case $.TD:\n        case $.TFOOT:\n        case $.TH:\n        case $.THEAD:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            tokenInTable(p, token);\n        }\n    }\n}\nfunction tokenInTable(p, token) {\n    const savedFosterParentingState = p.fosterParentingEnabled;\n    p.fosterParentingEnabled = true;\n    // Process token in `In Body` mode\n    modeInBody(p, token);\n    p.fosterParentingEnabled = savedFosterParentingState;\n}\n// The \"in table text\" insertion mode\n//------------------------------------------------------------------\nfunction whitespaceCharacterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n}\nfunction characterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n    p.hasNonWhitespacePendingCharacterToken = true;\n}\nfunction tokenInTableText(p, token) {\n    let i = 0;\n    if (p.hasNonWhitespacePendingCharacterToken) {\n        for (; i < p.pendingCharacterTokens.length; i++) {\n            tokenInTable(p, p.pendingCharacterTokens[i]);\n        }\n    }\n    else {\n        for (; i < p.pendingCharacterTokens.length; i++) {\n            p._insertCharacters(p.pendingCharacterTokens[i]);\n        }\n    }\n    p.insertionMode = p.originalInsertionMode;\n    p._processToken(token);\n}\n// The \"in caption\" insertion mode\n//------------------------------------------------------------------\nconst TABLE_VOID_ELEMENTS = new Set([$.CAPTION, $.COL, $.COLGROUP, $.TBODY, $.TD, $.TFOOT, $.TH, $.THEAD, $.TR]);\nfunction startTagInCaption(p, token) {\n    const tn = token.tagID;\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\n        if (p.openElements.hasInTableScope($.CAPTION)) {\n            p.openElements.generateImpliedEndTags();\n            p.openElements.popUntilTagNamePopped($.CAPTION);\n            p.activeFormattingElements.clearToLastMarker();\n            p.insertionMode = InsertionMode.IN_TABLE;\n            startTagInTable(p, token);\n        }\n    }\n    else {\n        startTagInBody(p, token);\n    }\n}\nfunction endTagInCaption(p, token) {\n    const tn = token.tagID;\n    switch (tn) {\n        case $.CAPTION:\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.CAPTION)) {\n                p.openElements.generateImpliedEndTags();\n                p.openElements.popUntilTagNamePopped($.CAPTION);\n                p.activeFormattingElements.clearToLastMarker();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                if (tn === $.TABLE) {\n                    endTagInTable(p, token);\n                }\n            }\n            break;\n        }\n        case $.BODY:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TBODY:\n        case $.TD:\n        case $.TFOOT:\n        case $.TH:\n        case $.THEAD:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInBody(p, token);\n        }\n    }\n}\n// The \"in column group\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInColumnGroup(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.COL: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        default: {\n            tokenInColumnGroup(p, token);\n        }\n    }\n}\nfunction endTagInColumnGroup(p, token) {\n    switch (token.tagID) {\n        case $.COLGROUP: {\n            if (p.openElements.currentTagId === $.COLGROUP) {\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        case $.COL: {\n            // Ignore token\n            break;\n        }\n        default: {\n            tokenInColumnGroup(p, token);\n        }\n    }\n}\nfunction tokenInColumnGroup(p, token) {\n    if (p.openElements.currentTagId === $.COLGROUP) {\n        p.openElements.pop();\n        p.insertionMode = InsertionMode.IN_TABLE;\n        p._processToken(token);\n    }\n}\n// The \"in table body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTableBody(p, token) {\n    switch (token.tagID) {\n        case $.TR: {\n            p.openElements.clearBackToTableBodyContext();\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_ROW;\n            break;\n        }\n        case $.TH:\n        case $.TD: {\n            p.openElements.clearBackToTableBodyContext();\n            p._insertFakeElement(TN.TR, $.TR);\n            p.insertionMode = InsertionMode.IN_ROW;\n            startTagInRow(p, token);\n            break;\n        }\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasTableBodyContextInTableScope()) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                startTagInTable(p, token);\n            }\n            break;\n        }\n        default: {\n            startTagInTable(p, token);\n        }\n    }\n}\nfunction endTagInTableBody(p, token) {\n    const tn = token.tagID;\n    switch (token.tagID) {\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n            }\n            break;\n        }\n        case $.TABLE: {\n            if (p.openElements.hasTableBodyContextInTableScope()) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                endTagInTable(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TD:\n        case $.TH:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInTable(p, token);\n        }\n    }\n}\n// The \"in row\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInRow(p, token) {\n    switch (token.tagID) {\n        case $.TH:\n        case $.TD: {\n            p.openElements.clearBackToTableRowContext();\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_CELL;\n            p.activeFormattingElements.insertMarker();\n            break;\n        }\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.TR: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                startTagInTableBody(p, token);\n            }\n            break;\n        }\n        default: {\n            startTagInTable(p, token);\n        }\n    }\n}\nfunction endTagInRow(p, token) {\n    switch (token.tagID) {\n        case $.TR: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n            }\n            break;\n        }\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                endTagInTableBody(p, token);\n            }\n            break;\n        }\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasInTableScope(token.tagID) || p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                endTagInTableBody(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TD:\n        case $.TH: {\n            // Ignore end tag\n            break;\n        }\n        default: {\n            endTagInTable(p, token);\n        }\n    }\n}\n// The \"in cell\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInCell(p, token) {\n    const tn = token.tagID;\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\n        if (p.openElements.hasInTableScope($.TD) || p.openElements.hasInTableScope($.TH)) {\n            p._closeTableCell();\n            startTagInRow(p, token);\n        }\n    }\n    else {\n        startTagInBody(p, token);\n    }\n}\nfunction endTagInCell(p, token) {\n    const tn = token.tagID;\n    switch (tn) {\n        case $.TD:\n        case $.TH: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p.openElements.generateImpliedEndTags();\n                p.openElements.popUntilTagNamePopped(tn);\n                p.activeFormattingElements.clearToLastMarker();\n                p.insertionMode = InsertionMode.IN_ROW;\n            }\n            break;\n        }\n        case $.TABLE:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.TR: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p._closeTableCell();\n                endTagInRow(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInBody(p, token);\n        }\n    }\n}\n// The \"in select\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelect(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.OPTION: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.OPTGROUP: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.HR: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.INPUT:\n        case $.KEYGEN:\n        case $.TEXTAREA:\n        case $.SELECT: {\n            if (p.openElements.hasInSelectScope($.SELECT)) {\n                p.openElements.popUntilTagNamePopped($.SELECT);\n                p._resetInsertionMode();\n                if (token.tagID !== $.SELECT) {\n                    p._processStartTag(token);\n                }\n            }\n            break;\n        }\n        case $.SCRIPT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagInSelect(p, token) {\n    switch (token.tagID) {\n        case $.OPTGROUP: {\n            if (p.openElements.stackTop > 0 &&\n                p.openElements.currentTagId === $.OPTION &&\n                p.openElements.tagIDs[p.openElements.stackTop - 1] === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            break;\n        }\n        case $.OPTION: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            break;\n        }\n        case $.SELECT: {\n            if (p.openElements.hasInSelectScope($.SELECT)) {\n                p.openElements.popUntilTagNamePopped($.SELECT);\n                p._resetInsertionMode();\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\n// The \"in select in table\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelectInTable(p, token) {\n    const tn = token.tagID;\n    if (tn === $.CAPTION ||\n        tn === $.TABLE ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR ||\n        tn === $.TD ||\n        tn === $.TH) {\n        p.openElements.popUntilTagNamePopped($.SELECT);\n        p._resetInsertionMode();\n        p._processStartTag(token);\n    }\n    else {\n        startTagInSelect(p, token);\n    }\n}\nfunction endTagInSelectInTable(p, token) {\n    const tn = token.tagID;\n    if (tn === $.CAPTION ||\n        tn === $.TABLE ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR ||\n        tn === $.TD ||\n        tn === $.TH) {\n        if (p.openElements.hasInTableScope(tn)) {\n            p.openElements.popUntilTagNamePopped($.SELECT);\n            p._resetInsertionMode();\n            p.onEndTag(token);\n        }\n    }\n    else {\n        endTagInSelect(p, token);\n    }\n}\n// The \"in template\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTemplate(p, token) {\n    switch (token.tagID) {\n        // First, handle tags that can start without a mode change\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.SCRIPT:\n        case $.STYLE:\n        case $.TEMPLATE:\n        case $.TITLE: {\n            startTagInHead(p, token);\n            break;\n        }\n        // Re-process the token in the appropriate mode\n        case $.CAPTION:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE;\n            p.insertionMode = InsertionMode.IN_TABLE;\n            startTagInTable(p, token);\n            break;\n        }\n        case $.COL: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_COLUMN_GROUP;\n            p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n            startTagInColumnGroup(p, token);\n            break;\n        }\n        case $.TR: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE_BODY;\n            p.insertionMode = InsertionMode.IN_TABLE_BODY;\n            startTagInTableBody(p, token);\n            break;\n        }\n        case $.TD:\n        case $.TH: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_ROW;\n            p.insertionMode = InsertionMode.IN_ROW;\n            startTagInRow(p, token);\n            break;\n        }\n        default: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_BODY;\n            p.insertionMode = InsertionMode.IN_BODY;\n            startTagInBody(p, token);\n        }\n    }\n}\nfunction endTagInTemplate(p, token) {\n    if (token.tagID === $.TEMPLATE) {\n        templateEndTagInHead(p, token);\n    }\n}\nfunction eofInTemplate(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.popUntilTagNamePopped($.TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p.tmplInsertionModeStack.shift();\n        p._resetInsertionMode();\n        p.onEof(token);\n    }\n    else {\n        stopParsing(p, token);\n    }\n}\n// The \"after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterBody(p, token) {\n    if (token.tagID === $.HTML) {\n        startTagInBody(p, token);\n    }\n    else {\n        tokenAfterBody(p, token);\n    }\n}\nfunction endTagAfterBody(p, token) {\n    var _a;\n    if (token.tagID === $.HTML) {\n        if (!p.fragmentContext) {\n            p.insertionMode = InsertionMode.AFTER_AFTER_BODY;\n        }\n        //NOTE: <html> is never popped from the stack, so we need to updated\n        //the end location explicitly.\n        if (p.options.sourceCodeLocationInfo && p.openElements.tagIDs[0] === $.HTML) {\n            p._setEndLocation(p.openElements.items[0], token);\n            // Update the body element, if it doesn't have an end tag\n            const bodyElement = p.openElements.items[1];\n            if (bodyElement && !((_a = p.treeAdapter.getNodeSourceCodeLocation(bodyElement)) === null || _a === void 0 ? void 0 : _a.endTag)) {\n                p._setEndLocation(bodyElement, token);\n            }\n        }\n    }\n    else {\n        tokenAfterBody(p, token);\n    }\n}\nfunction tokenAfterBody(p, token) {\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"in frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.FRAMESET: {\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.FRAME: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagInFrameset(p, token) {\n    if (token.tagID === $.FRAMESET && !p.openElements.isRootHtmlElementCurrent()) {\n        p.openElements.pop();\n        if (!p.fragmentContext && p.openElements.currentTagId !== $.FRAMESET) {\n            p.insertionMode = InsertionMode.AFTER_FRAMESET;\n        }\n    }\n}\n// The \"after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagAfterFrameset(p, token) {\n    if (token.tagID === $.HTML) {\n        p.insertionMode = InsertionMode.AFTER_AFTER_FRAMESET;\n    }\n}\n// The \"after after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterBody(p, token) {\n    if (token.tagID === $.HTML) {\n        startTagInBody(p, token);\n    }\n    else {\n        tokenAfterAfterBody(p, token);\n    }\n}\nfunction tokenAfterAfterBody(p, token) {\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"after after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\n// The rules for parsing tokens in foreign content\n//------------------------------------------------------------------\nfunction nullCharacterInForeignContent(p, token) {\n    token.chars = unicode.REPLACEMENT_CHARACTER;\n    p._insertCharacters(token);\n}\nfunction characterInForeignContent(p, token) {\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\nfunction popUntilHtmlOrIntegrationPoint(p) {\n    while (p.treeAdapter.getNamespaceURI(p.openElements.current) !== NS.HTML &&\n        !p._isIntegrationPoint(p.openElements.currentTagId, p.openElements.current)) {\n        p.openElements.pop();\n    }\n}\nfunction startTagInForeignContent(p, token) {\n    if (foreignContent.causesExit(token)) {\n        popUntilHtmlOrIntegrationPoint(p);\n        p._startTagOutsideForeignContent(token);\n    }\n    else {\n        const current = p._getAdjustedCurrentElement();\n        const currentNs = p.treeAdapter.getNamespaceURI(current);\n        if (currentNs === NS.MATHML) {\n            foreignContent.adjustTokenMathMLAttrs(token);\n        }\n        else if (currentNs === NS.SVG) {\n            foreignContent.adjustTokenSVGTagName(token);\n            foreignContent.adjustTokenSVGAttrs(token);\n        }\n        foreignContent.adjustTokenXMLAttrs(token);\n        if (token.selfClosing) {\n            p._appendElement(token, currentNs);\n        }\n        else {\n            p._insertElement(token, currentNs);\n        }\n        token.ackSelfClosing = true;\n    }\n}\nfunction endTagInForeignContent(p, token) {\n    if (token.tagID === $.P || token.tagID === $.BR) {\n        popUntilHtmlOrIntegrationPoint(p);\n        p._endTagOutsideForeignContent(token);\n        return;\n    }\n    for (let i = p.openElements.stackTop; i > 0; i--) {\n        const element = p.openElements.items[i];\n        if (p.treeAdapter.getNamespaceURI(element) === NS.HTML) {\n            p._endTagOutsideForeignContent(token);\n            break;\n        }\n        const tagName = p.treeAdapter.getTagName(element);\n        if (tagName.toLowerCase() === token.tagName) {\n            //NOTE: update the token tag name for `_setEndLocation`.\n            token.tagName = tagName;\n            p.openElements.shortenToLength(i);\n            break;\n        }\n    }\n}\n","import { TAG_NAMES as $, NS, hasUnescapedText } from '../common/html.js';\nimport { escapeText, escapeAttribute } from 'entities/lib/escape.js';\nimport { defaultTreeAdapter } from '../tree-adapters/default.js';\n// Sets\nconst VOID_ELEMENTS = new Set([\n    $.AREA,\n    $.BASE,\n    $.BASEFONT,\n    $.BGSOUND,\n    $.BR,\n    $.COL,\n    $.EMBED,\n    $.FRAME,\n    $.HR,\n    $.IMG,\n    $.INPUT,\n    $.KEYGEN,\n    $.LINK,\n    $.META,\n    $.PARAM,\n    $.SOURCE,\n    $.TRACK,\n    $.WBR,\n]);\nfunction isVoidElement(node, options) {\n    return (options.treeAdapter.isElementNode(node) &&\n        options.treeAdapter.getNamespaceURI(node) === NS.HTML &&\n        VOID_ELEMENTS.has(options.treeAdapter.getTagName(node)));\n}\nconst defaultOpts = { treeAdapter: defaultTreeAdapter, scriptingEnabled: true };\n/**\n * Serializes an AST node to an HTML string.\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parse('<!DOCTYPE html><html><head></head><body>Hi there!</body></html>');\n *\n * // Serializes a document.\n * const html = parse5.serialize(document);\n *\n * // Serializes the <html> element content.\n * const str = parse5.serialize(document.childNodes[1]);\n *\n * console.log(str); //> '<head></head><body>Hi there!</body>'\n * ```\n *\n * @param node Node to serialize.\n * @param options Serialization options.\n */\nexport function serialize(node, options) {\n    const opts = { ...defaultOpts, ...options };\n    if (isVoidElement(node, opts)) {\n        return '';\n    }\n    return serializeChildNodes(node, opts);\n}\n/**\n * Serializes an AST element node to an HTML string, including the element node.\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parseFragment('<div>Hello, <b>world</b>!</div>');\n *\n * // Serializes the <div> element.\n * const str = parse5.serializeOuter(document.childNodes[0]);\n *\n * console.log(str); //> '<div>Hello, <b>world</b>!</div>'\n * ```\n *\n * @param node Node to serialize.\n * @param options Serialization options.\n */\nexport function serializeOuter(node, options) {\n    const opts = { ...defaultOpts, ...options };\n    return serializeNode(node, opts);\n}\nfunction serializeChildNodes(parentNode, options) {\n    let html = '';\n    // Get container of the child nodes\n    const container = options.treeAdapter.isElementNode(parentNode) &&\n        options.treeAdapter.getTagName(parentNode) === $.TEMPLATE &&\n        options.treeAdapter.getNamespaceURI(parentNode) === NS.HTML\n        ? options.treeAdapter.getTemplateContent(parentNode)\n        : parentNode;\n    const childNodes = options.treeAdapter.getChildNodes(container);\n    if (childNodes) {\n        for (const currentNode of childNodes) {\n            html += serializeNode(currentNode, options);\n        }\n    }\n    return html;\n}\nfunction serializeNode(node, options) {\n    if (options.treeAdapter.isElementNode(node)) {\n        return serializeElement(node, options);\n    }\n    if (options.treeAdapter.isTextNode(node)) {\n        return serializeTextNode(node, options);\n    }\n    if (options.treeAdapter.isCommentNode(node)) {\n        return serializeCommentNode(node, options);\n    }\n    if (options.treeAdapter.isDocumentTypeNode(node)) {\n        return serializeDocumentTypeNode(node, options);\n    }\n    // Return an empty string for unknown nodes\n    return '';\n}\nfunction serializeElement(node, options) {\n    const tn = options.treeAdapter.getTagName(node);\n    return `<${tn}${serializeAttributes(node, options)}>${isVoidElement(node, options) ? '' : `${serializeChildNodes(node, options)}</${tn}>`}`;\n}\nfunction serializeAttributes(node, { treeAdapter }) {\n    let html = '';\n    for (const attr of treeAdapter.getAttrList(node)) {\n        html += ' ';\n        if (attr.namespace) {\n            switch (attr.namespace) {\n                case NS.XML: {\n                    html += `xml:${attr.name}`;\n                    break;\n                }\n                case NS.XMLNS: {\n                    if (attr.name !== 'xmlns') {\n                        html += 'xmlns:';\n                    }\n                    html += attr.name;\n                    break;\n                }\n                case NS.XLINK: {\n                    html += `xlink:${attr.name}`;\n                    break;\n                }\n                default: {\n                    html += `${attr.prefix}:${attr.name}`;\n                }\n            }\n        }\n        else {\n            html += attr.name;\n        }\n        html += `=\"${escapeAttribute(attr.value)}\"`;\n    }\n    return html;\n}\nfunction serializeTextNode(node, options) {\n    const { treeAdapter } = options;\n    const content = treeAdapter.getTextNodeContent(node);\n    const parent = treeAdapter.getParentNode(node);\n    const parentTn = parent && treeAdapter.isElementNode(parent) && treeAdapter.getTagName(parent);\n    return parentTn &&\n        treeAdapter.getNamespaceURI(parent) === NS.HTML &&\n        hasUnescapedText(parentTn, options.scriptingEnabled)\n        ? content\n        : escapeText(content);\n}\nfunction serializeCommentNode(node, { treeAdapter }) {\n    return `<!--${treeAdapter.getCommentNodeContent(node)}-->`;\n}\nfunction serializeDocumentTypeNode(node, { treeAdapter }) {\n    return `<!DOCTYPE ${treeAdapter.getDocumentTypeNodeName(node)}>`;\n}\n","import { Parser } from './parser/index.js';\nexport { defaultTreeAdapter } from './tree-adapters/default.js';\nexport { /** @internal */ Parser } from './parser/index.js';\nexport { serialize, serializeOuter } from './serializer/index.js';\nexport { ERR as ErrorCodes } from './common/error-codes.js';\n/** @internal */\nexport * as foreignContent from './common/foreign-content.js';\nexport * as html from './common/html.js';\nexport * as Token from './common/token.js';\n/** @internal */\nexport { Tokenizer, TokenizerMode } from './tokenizer/index.js';\n// Shorthands\n/**\n * Parses an HTML string.\n *\n * @param html Input HTML string.\n * @param options Parsing options.\n * @returns Document\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parse('<!DOCTYPE html><html><head></head><body>Hi there!</body></html>');\n *\n * console.log(document.childNodes[1].tagName); //> 'html'\n *```\n */\nexport function parse(html, options) {\n    return Parser.parse(html, options);\n}\nexport function parseFragment(fragmentContext, html, options) {\n    if (typeof fragmentContext === 'string') {\n        options = html;\n        html = fragmentContext;\n        fragmentContext = null;\n    }\n    const parser = Parser.getFragmentParser(fragmentContext, options);\n    parser.tokenizer.write(html, true);\n    return parser.getFragment();\n}\n","import { html } from 'parse5';\nimport { Element, Document, ProcessingInstruction, Comment, Text, isDirective, isText, isComment, isTag, } from 'domhandler';\nfunction enquoteDoctypeId(id) {\n    const quote = id.includes('\"') ? \"'\" : '\"';\n    return quote + id + quote;\n}\n/** @internal */\nexport function serializeDoctypeContent(name, publicId, systemId) {\n    let str = '!DOCTYPE ';\n    if (name) {\n        str += name;\n    }\n    if (publicId) {\n        str += ` PUBLIC ${enquoteDoctypeId(publicId)}`;\n    }\n    else if (systemId) {\n        str += ' SYSTEM';\n    }\n    if (systemId) {\n        str += ` ${enquoteDoctypeId(systemId)}`;\n    }\n    return str;\n}\nexport const adapter = {\n    // Re-exports from domhandler\n    isCommentNode: isComment,\n    isElementNode: isTag,\n    isTextNode: isText,\n    //Node construction\n    createDocument() {\n        const node = new Document([]);\n        node['x-mode'] = html.DOCUMENT_MODE.NO_QUIRKS;\n        return node;\n    },\n    createDocumentFragment() {\n        return new Document([]);\n    },\n    createElement(tagName, namespaceURI, attrs) {\n        const attribs = Object.create(null);\n        const attribsNamespace = Object.create(null);\n        const attribsPrefix = Object.create(null);\n        for (let i = 0; i < attrs.length; i++) {\n            const attrName = attrs[i].name;\n            attribs[attrName] = attrs[i].value;\n            attribsNamespace[attrName] = attrs[i].namespace;\n            attribsPrefix[attrName] = attrs[i].prefix;\n        }\n        const node = new Element(tagName, attribs, []);\n        node.namespace = namespaceURI;\n        node['x-attribsNamespace'] = attribsNamespace;\n        node['x-attribsPrefix'] = attribsPrefix;\n        return node;\n    },\n    createCommentNode(data) {\n        return new Comment(data);\n    },\n    createTextNode(value) {\n        return new Text(value);\n    },\n    //Tree mutation\n    appendChild(parentNode, newNode) {\n        const prev = parentNode.children[parentNode.children.length - 1];\n        if (prev) {\n            prev.next = newNode;\n            newNode.prev = prev;\n        }\n        parentNode.children.push(newNode);\n        newNode.parent = parentNode;\n    },\n    insertBefore(parentNode, newNode, referenceNode) {\n        const insertionIdx = parentNode.children.indexOf(referenceNode);\n        const { prev } = referenceNode;\n        if (prev) {\n            prev.next = newNode;\n            newNode.prev = prev;\n        }\n        referenceNode.prev = newNode;\n        newNode.next = referenceNode;\n        parentNode.children.splice(insertionIdx, 0, newNode);\n        newNode.parent = parentNode;\n    },\n    setTemplateContent(templateElement, contentElement) {\n        adapter.appendChild(templateElement, contentElement);\n    },\n    getTemplateContent(templateElement) {\n        return templateElement.children[0];\n    },\n    setDocumentType(document, name, publicId, systemId) {\n        const data = serializeDoctypeContent(name, publicId, systemId);\n        let doctypeNode = document.children.find((node) => isDirective(node) && node.name === '!doctype');\n        if (doctypeNode) {\n            doctypeNode.data = data !== null && data !== void 0 ? data : null;\n        }\n        else {\n            doctypeNode = new ProcessingInstruction('!doctype', data);\n            adapter.appendChild(document, doctypeNode);\n        }\n        doctypeNode['x-name'] = name;\n        doctypeNode['x-publicId'] = publicId;\n        doctypeNode['x-systemId'] = systemId;\n    },\n    setDocumentMode(document, mode) {\n        document['x-mode'] = mode;\n    },\n    getDocumentMode(document) {\n        return document['x-mode'];\n    },\n    detachNode(node) {\n        if (node.parent) {\n            const idx = node.parent.children.indexOf(node);\n            const { prev, next } = node;\n            node.prev = null;\n            node.next = null;\n            if (prev) {\n                prev.next = next;\n            }\n            if (next) {\n                next.prev = prev;\n            }\n            node.parent.children.splice(idx, 1);\n            node.parent = null;\n        }\n    },\n    insertText(parentNode, text) {\n        const lastChild = parentNode.children[parentNode.children.length - 1];\n        if (lastChild && isText(lastChild)) {\n            lastChild.data += text;\n        }\n        else {\n            adapter.appendChild(parentNode, adapter.createTextNode(text));\n        }\n    },\n    insertTextBefore(parentNode, text, referenceNode) {\n        const prevNode = parentNode.children[parentNode.children.indexOf(referenceNode) - 1];\n        if (prevNode && isText(prevNode)) {\n            prevNode.data += text;\n        }\n        else {\n            adapter.insertBefore(parentNode, adapter.createTextNode(text), referenceNode);\n        }\n    },\n    adoptAttributes(recipient, attrs) {\n        for (let i = 0; i < attrs.length; i++) {\n            const attrName = attrs[i].name;\n            if (recipient.attribs[attrName] === undefined) {\n                recipient.attribs[attrName] = attrs[i].value;\n                recipient['x-attribsNamespace'][attrName] = attrs[i].namespace;\n                recipient['x-attribsPrefix'][attrName] = attrs[i].prefix;\n            }\n        }\n    },\n    //Tree traversing\n    getFirstChild(node) {\n        return node.children[0];\n    },\n    getChildNodes(node) {\n        return node.children;\n    },\n    getParentNode(node) {\n        return node.parent;\n    },\n    getAttrList(element) {\n        return element.attributes;\n    },\n    //Node data\n    getTagName(element) {\n        return element.name;\n    },\n    getNamespaceURI(element) {\n        return element.namespace;\n    },\n    getTextNodeContent(textNode) {\n        return textNode.data;\n    },\n    getCommentNodeContent(commentNode) {\n        return commentNode.data;\n    },\n    getDocumentTypeNodeName(doctypeNode) {\n        var _a;\n        return (_a = doctypeNode['x-name']) !== null && _a !== void 0 ? _a : '';\n    },\n    getDocumentTypeNodePublicId(doctypeNode) {\n        var _a;\n        return (_a = doctypeNode['x-publicId']) !== null && _a !== void 0 ? _a : '';\n    },\n    getDocumentTypeNodeSystemId(doctypeNode) {\n        var _a;\n        return (_a = doctypeNode['x-systemId']) !== null && _a !== void 0 ? _a : '';\n    },\n    //Node types\n    isDocumentTypeNode(node) {\n        return isDirective(node) && node.name === '!doctype';\n    },\n    // Source code location\n    setNodeSourceCodeLocation(node, location) {\n        if (location) {\n            node.startIndex = location.startOffset;\n            node.endIndex = location.endOffset;\n        }\n        node.sourceCodeLocation = location;\n    },\n    getNodeSourceCodeLocation(node) {\n        return node.sourceCodeLocation;\n    },\n    updateNodeSourceCodeLocation(node, endLocation) {\n        if (endLocation.endOffset != null)\n            node.endIndex = endLocation.endOffset;\n        node.sourceCodeLocation = {\n            ...node.sourceCodeLocation,\n            ...endLocation,\n        };\n    },\n};\n","import { isDocument, } from 'domhandler';\nimport { parse as parseDocument, parseFragment, serializeOuter } from 'parse5';\nimport { adapter as htmlparser2Adapter } from 'parse5-htmlparser2-tree-adapter';\n/**\n * Parse the content with `parse5` in the context of the given `ParentNode`.\n *\n * @param content - The content to parse.\n * @param options - A set of options to use to parse.\n * @param isDocument - Whether to parse the content as a full HTML document.\n * @param context - The context in which to parse the content.\n * @returns The parsed content.\n */\nexport function parseWithParse5(content, options, isDocument, context) {\n    var _a;\n    (_a = options.treeAdapter) !== null && _a !== void 0 ? _a : (options.treeAdapter = htmlparser2Adapter);\n    if (options.scriptingEnabled !== false) {\n        options.scriptingEnabled = true;\n    }\n    return isDocument\n        ? parseDocument(content, options)\n        : parseFragment(context, content, options);\n}\nconst renderOpts = { treeAdapter: htmlparser2Adapter };\n/**\n * Renders the given DOM tree with `parse5` and returns the result as a string.\n *\n * @param dom - The DOM tree to render.\n * @returns The rendered document.\n */\nexport function renderWithParse5(dom) {\n    /*\n     * `dom-serializer` passes over the special \"root\" node and renders the\n     * node's children in its place. To mimic this behavior with `parse5`, an\n     * equivalent operation must be applied to the input array.\n     */\n    const nodes = 'length' in dom ? dom : [dom];\n    for (let index = 0; index < nodes.length; index += 1) {\n        const node = nodes[index];\n        if (isDocument(node)) {\n            Array.prototype.splice.call(nodes, index, 1, ...node.children);\n        }\n    }\n    let result = '';\n    for (let index = 0; index < nodes.length; index += 1) {\n        const node = nodes[index];\n        result += serializeOuter(node, renderOpts);\n    }\n    return result;\n}\n//# sourceMappingURL=parse5-adapter.js.map","import { EntityDecoder, DecodingMode, htmlDecodeTree, xmlDecodeTree, } from \"entities/lib/decode.js\";\nvar CharCodes;\n(function (CharCodes) {\n    CharCodes[CharCodes[\"Tab\"] = 9] = \"Tab\";\n    CharCodes[CharCodes[\"NewLine\"] = 10] = \"NewLine\";\n    CharCodes[CharCodes[\"FormFeed\"] = 12] = \"FormFeed\";\n    CharCodes[CharCodes[\"CarriageReturn\"] = 13] = \"CarriageReturn\";\n    CharCodes[CharCodes[\"Space\"] = 32] = \"Space\";\n    CharCodes[CharCodes[\"ExclamationMark\"] = 33] = \"ExclamationMark\";\n    CharCodes[CharCodes[\"Number\"] = 35] = \"Number\";\n    CharCodes[CharCodes[\"Amp\"] = 38] = \"Amp\";\n    CharCodes[CharCodes[\"SingleQuote\"] = 39] = \"SingleQuote\";\n    CharCodes[CharCodes[\"DoubleQuote\"] = 34] = \"DoubleQuote\";\n    CharCodes[CharCodes[\"Dash\"] = 45] = \"Dash\";\n    CharCodes[CharCodes[\"Slash\"] = 47] = \"Slash\";\n    CharCodes[CharCodes[\"Zero\"] = 48] = \"Zero\";\n    CharCodes[CharCodes[\"Nine\"] = 57] = \"Nine\";\n    CharCodes[CharCodes[\"Semi\"] = 59] = \"Semi\";\n    CharCodes[CharCodes[\"Lt\"] = 60] = \"Lt\";\n    CharCodes[CharCodes[\"Eq\"] = 61] = \"Eq\";\n    CharCodes[CharCodes[\"Gt\"] = 62] = \"Gt\";\n    CharCodes[CharCodes[\"Questionmark\"] = 63] = \"Questionmark\";\n    CharCodes[CharCodes[\"UpperA\"] = 65] = \"UpperA\";\n    CharCodes[CharCodes[\"LowerA\"] = 97] = \"LowerA\";\n    CharCodes[CharCodes[\"UpperF\"] = 70] = \"UpperF\";\n    CharCodes[CharCodes[\"LowerF\"] = 102] = \"LowerF\";\n    CharCodes[CharCodes[\"UpperZ\"] = 90] = \"UpperZ\";\n    CharCodes[CharCodes[\"LowerZ\"] = 122] = \"LowerZ\";\n    CharCodes[CharCodes[\"LowerX\"] = 120] = \"LowerX\";\n    CharCodes[CharCodes[\"OpeningSquareBracket\"] = 91] = \"OpeningSquareBracket\";\n})(CharCodes || (CharCodes = {}));\n/** All the states the tokenizer can be in. */\nvar State;\n(function (State) {\n    State[State[\"Text\"] = 1] = \"Text\";\n    State[State[\"BeforeTagName\"] = 2] = \"BeforeTagName\";\n    State[State[\"InTagName\"] = 3] = \"InTagName\";\n    State[State[\"InSelfClosingTag\"] = 4] = \"InSelfClosingTag\";\n    State[State[\"BeforeClosingTagName\"] = 5] = \"BeforeClosingTagName\";\n    State[State[\"InClosingTagName\"] = 6] = \"InClosingTagName\";\n    State[State[\"AfterClosingTagName\"] = 7] = \"AfterClosingTagName\";\n    // Attributes\n    State[State[\"BeforeAttributeName\"] = 8] = \"BeforeAttributeName\";\n    State[State[\"InAttributeName\"] = 9] = \"InAttributeName\";\n    State[State[\"AfterAttributeName\"] = 10] = \"AfterAttributeName\";\n    State[State[\"BeforeAttributeValue\"] = 11] = \"BeforeAttributeValue\";\n    State[State[\"InAttributeValueDq\"] = 12] = \"InAttributeValueDq\";\n    State[State[\"InAttributeValueSq\"] = 13] = \"InAttributeValueSq\";\n    State[State[\"InAttributeValueNq\"] = 14] = \"InAttributeValueNq\";\n    // Declarations\n    State[State[\"BeforeDeclaration\"] = 15] = \"BeforeDeclaration\";\n    State[State[\"InDeclaration\"] = 16] = \"InDeclaration\";\n    // Processing instructions\n    State[State[\"InProcessingInstruction\"] = 17] = \"InProcessingInstruction\";\n    // Comments & CDATA\n    State[State[\"BeforeComment\"] = 18] = \"BeforeComment\";\n    State[State[\"CDATASequence\"] = 19] = \"CDATASequence\";\n    State[State[\"InSpecialComment\"] = 20] = \"InSpecialComment\";\n    State[State[\"InCommentLike\"] = 21] = \"InCommentLike\";\n    // Special tags\n    State[State[\"BeforeSpecialS\"] = 22] = \"BeforeSpecialS\";\n    State[State[\"BeforeSpecialT\"] = 23] = \"BeforeSpecialT\";\n    State[State[\"SpecialStartSequence\"] = 24] = \"SpecialStartSequence\";\n    State[State[\"InSpecialTag\"] = 25] = \"InSpecialTag\";\n    State[State[\"InEntity\"] = 26] = \"InEntity\";\n})(State || (State = {}));\nfunction isWhitespace(c) {\n    return (c === CharCodes.Space ||\n        c === CharCodes.NewLine ||\n        c === CharCodes.Tab ||\n        c === CharCodes.FormFeed ||\n        c === CharCodes.CarriageReturn);\n}\nfunction isEndOfTagSection(c) {\n    return c === CharCodes.Slash || c === CharCodes.Gt || isWhitespace(c);\n}\nfunction isASCIIAlpha(c) {\n    return ((c >= CharCodes.LowerA && c <= CharCodes.LowerZ) ||\n        (c >= CharCodes.UpperA && c <= CharCodes.UpperZ));\n}\nexport var QuoteType;\n(function (QuoteType) {\n    QuoteType[QuoteType[\"NoValue\"] = 0] = \"NoValue\";\n    QuoteType[QuoteType[\"Unquoted\"] = 1] = \"Unquoted\";\n    QuoteType[QuoteType[\"Single\"] = 2] = \"Single\";\n    QuoteType[QuoteType[\"Double\"] = 3] = \"Double\";\n})(QuoteType || (QuoteType = {}));\n/**\n * Sequences used to match longer strings.\n *\n * We don't have `Script`, `Style`, or `Title` here. Instead, we re-use the *End\n * sequences with an increased offset.\n */\nconst Sequences = {\n    Cdata: new Uint8Array([0x43, 0x44, 0x41, 0x54, 0x41, 0x5b]), // CDATA[\n    CdataEnd: new Uint8Array([0x5d, 0x5d, 0x3e]), // ]]>\n    CommentEnd: new Uint8Array([0x2d, 0x2d, 0x3e]), // `-->`\n    ScriptEnd: new Uint8Array([0x3c, 0x2f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74]), // `</script`\n    StyleEnd: new Uint8Array([0x3c, 0x2f, 0x73, 0x74, 0x79, 0x6c, 0x65]), // `</style`\n    TitleEnd: new Uint8Array([0x3c, 0x2f, 0x74, 0x69, 0x74, 0x6c, 0x65]), // `</title`\n    TextareaEnd: new Uint8Array([\n        0x3c, 0x2f, 0x74, 0x65, 0x78, 0x74, 0x61, 0x72, 0x65, 0x61,\n    ]), // `</textarea`\n};\nexport default class Tokenizer {\n    constructor({ xmlMode = false, decodeEntities = true, }, cbs) {\n        this.cbs = cbs;\n        /** The current state the tokenizer is in. */\n        this.state = State.Text;\n        /** The read buffer. */\n        this.buffer = \"\";\n        /** The beginning of the section that is currently being read. */\n        this.sectionStart = 0;\n        /** The index within the buffer that we are currently looking at. */\n        this.index = 0;\n        /** The start of the last entity. */\n        this.entityStart = 0;\n        /** Some behavior, eg. when decoding entities, is done while we are in another state. This keeps track of the other state type. */\n        this.baseState = State.Text;\n        /** For special parsing behavior inside of script and style tags. */\n        this.isSpecial = false;\n        /** Indicates whether the tokenizer has been paused. */\n        this.running = true;\n        /** The offset of the current buffer. */\n        this.offset = 0;\n        this.currentSequence = undefined;\n        this.sequenceIndex = 0;\n        this.xmlMode = xmlMode;\n        this.decodeEntities = decodeEntities;\n        this.entityDecoder = new EntityDecoder(xmlMode ? xmlDecodeTree : htmlDecodeTree, (cp, consumed) => this.emitCodePoint(cp, consumed));\n    }\n    reset() {\n        this.state = State.Text;\n        this.buffer = \"\";\n        this.sectionStart = 0;\n        this.index = 0;\n        this.baseState = State.Text;\n        this.currentSequence = undefined;\n        this.running = true;\n        this.offset = 0;\n    }\n    write(chunk) {\n        this.offset += this.buffer.length;\n        this.buffer = chunk;\n        this.parse();\n    }\n    end() {\n        if (this.running)\n            this.finish();\n    }\n    pause() {\n        this.running = false;\n    }\n    resume() {\n        this.running = true;\n        if (this.index < this.buffer.length + this.offset) {\n            this.parse();\n        }\n    }\n    stateText(c) {\n        if (c === CharCodes.Lt ||\n            (!this.decodeEntities && this.fastForwardTo(CharCodes.Lt))) {\n            if (this.index > this.sectionStart) {\n                this.cbs.ontext(this.sectionStart, this.index);\n            }\n            this.state = State.BeforeTagName;\n            this.sectionStart = this.index;\n        }\n        else if (this.decodeEntities && c === CharCodes.Amp) {\n            this.startEntity();\n        }\n    }\n    stateSpecialStartSequence(c) {\n        const isEnd = this.sequenceIndex === this.currentSequence.length;\n        const isMatch = isEnd\n            ? // If we are at the end of the sequence, make sure the tag name has ended\n                isEndOfTagSection(c)\n            : // Otherwise, do a case-insensitive comparison\n                (c | 0x20) === this.currentSequence[this.sequenceIndex];\n        if (!isMatch) {\n            this.isSpecial = false;\n        }\n        else if (!isEnd) {\n            this.sequenceIndex++;\n            return;\n        }\n        this.sequenceIndex = 0;\n        this.state = State.InTagName;\n        this.stateInTagName(c);\n    }\n    /** Look for an end tag. For <title> tags, also decode entities. */\n    stateInSpecialTag(c) {\n        if (this.sequenceIndex === this.currentSequence.length) {\n            if (c === CharCodes.Gt || isWhitespace(c)) {\n                const endOfText = this.index - this.currentSequence.length;\n                if (this.sectionStart < endOfText) {\n                    // Spoof the index so that reported locations match up.\n                    const actualIndex = this.index;\n                    this.index = endOfText;\n                    this.cbs.ontext(this.sectionStart, endOfText);\n                    this.index = actualIndex;\n                }\n                this.isSpecial = false;\n                this.sectionStart = endOfText + 2; // Skip over the `</`\n                this.stateInClosingTagName(c);\n                return; // We are done; skip the rest of the function.\n            }\n            this.sequenceIndex = 0;\n        }\n        if ((c | 0x20) === this.currentSequence[this.sequenceIndex]) {\n            this.sequenceIndex += 1;\n        }\n        else if (this.sequenceIndex === 0) {\n            if (this.currentSequence === Sequences.TitleEnd) {\n                // We have to parse entities in <title> tags.\n                if (this.decodeEntities && c === CharCodes.Amp) {\n                    this.startEntity();\n                }\n            }\n            else if (this.fastForwardTo(CharCodes.Lt)) {\n                // Outside of <title> tags, we can fast-forward.\n                this.sequenceIndex = 1;\n            }\n        }\n        else {\n            // If we see a `<`, set the sequence index to 1; useful for eg. `<</script>`.\n            this.sequenceIndex = Number(c === CharCodes.Lt);\n        }\n    }\n    stateCDATASequence(c) {\n        if (c === Sequences.Cdata[this.sequenceIndex]) {\n            if (++this.sequenceIndex === Sequences.Cdata.length) {\n                this.state = State.InCommentLike;\n                this.currentSequence = Sequences.CdataEnd;\n                this.sequenceIndex = 0;\n                this.sectionStart = this.index + 1;\n            }\n        }\n        else {\n            this.sequenceIndex = 0;\n            this.state = State.InDeclaration;\n            this.stateInDeclaration(c); // Reconsume the character\n        }\n    }\n    /**\n     * When we wait for one specific character, we can speed things up\n     * by skipping through the buffer until we find it.\n     *\n     * @returns Whether the character was found.\n     */\n    fastForwardTo(c) {\n        while (++this.index < this.buffer.length + this.offset) {\n            if (this.buffer.charCodeAt(this.index - this.offset) === c) {\n                return true;\n            }\n        }\n        /*\n         * We increment the index at the end of the `parse` loop,\n         * so set it to `buffer.length - 1` here.\n         *\n         * TODO: Refactor `parse` to increment index before calling states.\n         */\n        this.index = this.buffer.length + this.offset - 1;\n        return false;\n    }\n    /**\n     * Comments and CDATA end with `-->` and `]]>`.\n     *\n     * Their common qualities are:\n     * - Their end sequences have a distinct character they start with.\n     * - That character is then repeated, so we have to check multiple repeats.\n     * - All characters but the start character of the sequence can be skipped.\n     */\n    stateInCommentLike(c) {\n        if (c === this.currentSequence[this.sequenceIndex]) {\n            if (++this.sequenceIndex === this.currentSequence.length) {\n                if (this.currentSequence === Sequences.CdataEnd) {\n                    this.cbs.oncdata(this.sectionStart, this.index, 2);\n                }\n                else {\n                    this.cbs.oncomment(this.sectionStart, this.index, 2);\n                }\n                this.sequenceIndex = 0;\n                this.sectionStart = this.index + 1;\n                this.state = State.Text;\n            }\n        }\n        else if (this.sequenceIndex === 0) {\n            // Fast-forward to the first character of the sequence\n            if (this.fastForwardTo(this.currentSequence[0])) {\n                this.sequenceIndex = 1;\n            }\n        }\n        else if (c !== this.currentSequence[this.sequenceIndex - 1]) {\n            // Allow long sequences, eg. --->, ]]]>\n            this.sequenceIndex = 0;\n        }\n    }\n    /**\n     * HTML only allows ASCII alpha characters (a-z and A-Z) at the beginning of a tag name.\n     *\n     * XML allows a lot more characters here (@see https://www.w3.org/TR/REC-xml/#NT-NameStartChar).\n     * We allow anything that wouldn't end the tag.\n     */\n    isTagStartChar(c) {\n        return this.xmlMode ? !isEndOfTagSection(c) : isASCIIAlpha(c);\n    }\n    startSpecial(sequence, offset) {\n        this.isSpecial = true;\n        this.currentSequence = sequence;\n        this.sequenceIndex = offset;\n        this.state = State.SpecialStartSequence;\n    }\n    stateBeforeTagName(c) {\n        if (c === CharCodes.ExclamationMark) {\n            this.state = State.BeforeDeclaration;\n            this.sectionStart = this.index + 1;\n        }\n        else if (c === CharCodes.Questionmark) {\n            this.state = State.InProcessingInstruction;\n            this.sectionStart = this.index + 1;\n        }\n        else if (this.isTagStartChar(c)) {\n            const lower = c | 0x20;\n            this.sectionStart = this.index;\n            if (this.xmlMode) {\n                this.state = State.InTagName;\n            }\n            else if (lower === Sequences.ScriptEnd[2]) {\n                this.state = State.BeforeSpecialS;\n            }\n            else if (lower === Sequences.TitleEnd[2]) {\n                this.state = State.BeforeSpecialT;\n            }\n            else {\n                this.state = State.InTagName;\n            }\n        }\n        else if (c === CharCodes.Slash) {\n            this.state = State.BeforeClosingTagName;\n        }\n        else {\n            this.state = State.Text;\n            this.stateText(c);\n        }\n    }\n    stateInTagName(c) {\n        if (isEndOfTagSection(c)) {\n            this.cbs.onopentagname(this.sectionStart, this.index);\n            this.sectionStart = -1;\n            this.state = State.BeforeAttributeName;\n            this.stateBeforeAttributeName(c);\n        }\n    }\n    stateBeforeClosingTagName(c) {\n        if (isWhitespace(c)) {\n            // Ignore\n        }\n        else if (c === CharCodes.Gt) {\n            this.state = State.Text;\n        }\n        else {\n            this.state = this.isTagStartChar(c)\n                ? State.InClosingTagName\n                : State.InSpecialComment;\n            this.sectionStart = this.index;\n        }\n    }\n    stateInClosingTagName(c) {\n        if (c === CharCodes.Gt || isWhitespace(c)) {\n            this.cbs.onclosetag(this.sectionStart, this.index);\n            this.sectionStart = -1;\n            this.state = State.AfterClosingTagName;\n            this.stateAfterClosingTagName(c);\n        }\n    }\n    stateAfterClosingTagName(c) {\n        // Skip everything until \">\"\n        if (c === CharCodes.Gt || this.fastForwardTo(CharCodes.Gt)) {\n            this.state = State.Text;\n            this.sectionStart = this.index + 1;\n        }\n    }\n    stateBeforeAttributeName(c) {\n        if (c === CharCodes.Gt) {\n            this.cbs.onopentagend(this.index);\n            if (this.isSpecial) {\n                this.state = State.InSpecialTag;\n                this.sequenceIndex = 0;\n            }\n            else {\n                this.state = State.Text;\n            }\n            this.sectionStart = this.index + 1;\n        }\n        else if (c === CharCodes.Slash) {\n            this.state = State.InSelfClosingTag;\n        }\n        else if (!isWhitespace(c)) {\n            this.state = State.InAttributeName;\n            this.sectionStart = this.index;\n        }\n    }\n    stateInSelfClosingTag(c) {\n        if (c === CharCodes.Gt) {\n            this.cbs.onselfclosingtag(this.index);\n            this.state = State.Text;\n            this.sectionStart = this.index + 1;\n            this.isSpecial = false; // Reset special state, in case of self-closing special tags\n        }\n        else if (!isWhitespace(c)) {\n            this.state = State.BeforeAttributeName;\n            this.stateBeforeAttributeName(c);\n        }\n    }\n    stateInAttributeName(c) {\n        if (c === CharCodes.Eq || isEndOfTagSection(c)) {\n            this.cbs.onattribname(this.sectionStart, this.index);\n            this.sectionStart = this.index;\n            this.state = State.AfterAttributeName;\n            this.stateAfterAttributeName(c);\n        }\n    }\n    stateAfterAttributeName(c) {\n        if (c === CharCodes.Eq) {\n            this.state = State.BeforeAttributeValue;\n        }\n        else if (c === CharCodes.Slash || c === CharCodes.Gt) {\n            this.cbs.onattribend(QuoteType.NoValue, this.sectionStart);\n            this.sectionStart = -1;\n            this.state = State.BeforeAttributeName;\n            this.stateBeforeAttributeName(c);\n        }\n        else if (!isWhitespace(c)) {\n            this.cbs.onattribend(QuoteType.NoValue, this.sectionStart);\n            this.state = State.InAttributeName;\n            this.sectionStart = this.index;\n        }\n    }\n    stateBeforeAttributeValue(c) {\n        if (c === CharCodes.DoubleQuote) {\n            this.state = State.InAttributeValueDq;\n            this.sectionStart = this.index + 1;\n        }\n        else if (c === CharCodes.SingleQuote) {\n            this.state = State.InAttributeValueSq;\n            this.sectionStart = this.index + 1;\n        }\n        else if (!isWhitespace(c)) {\n            this.sectionStart = this.index;\n            this.state = State.InAttributeValueNq;\n            this.stateInAttributeValueNoQuotes(c); // Reconsume token\n        }\n    }\n    handleInAttributeValue(c, quote) {\n        if (c === quote ||\n            (!this.decodeEntities && this.fastForwardTo(quote))) {\n            this.cbs.onattribdata(this.sectionStart, this.index);\n            this.sectionStart = -1;\n            this.cbs.onattribend(quote === CharCodes.DoubleQuote\n                ? QuoteType.Double\n                : QuoteType.Single, this.index + 1);\n            this.state = State.BeforeAttributeName;\n        }\n        else if (this.decodeEntities && c === CharCodes.Amp) {\n            this.startEntity();\n        }\n    }\n    stateInAttributeValueDoubleQuotes(c) {\n        this.handleInAttributeValue(c, CharCodes.DoubleQuote);\n    }\n    stateInAttributeValueSingleQuotes(c) {\n        this.handleInAttributeValue(c, CharCodes.SingleQuote);\n    }\n    stateInAttributeValueNoQuotes(c) {\n        if (isWhitespace(c) || c === CharCodes.Gt) {\n            this.cbs.onattribdata(this.sectionStart, this.index);\n            this.sectionStart = -1;\n            this.cbs.onattribend(QuoteType.Unquoted, this.index);\n            this.state = State.BeforeAttributeName;\n            this.stateBeforeAttributeName(c);\n        }\n        else if (this.decodeEntities && c === CharCodes.Amp) {\n            this.startEntity();\n        }\n    }\n    stateBeforeDeclaration(c) {\n        if (c === CharCodes.OpeningSquareBracket) {\n            this.state = State.CDATASequence;\n            this.sequenceIndex = 0;\n        }\n        else {\n            this.state =\n                c === CharCodes.Dash\n                    ? State.BeforeComment\n                    : State.InDeclaration;\n        }\n    }\n    stateInDeclaration(c) {\n        if (c === CharCodes.Gt || this.fastForwardTo(CharCodes.Gt)) {\n            this.cbs.ondeclaration(this.sectionStart, this.index);\n            this.state = State.Text;\n            this.sectionStart = this.index + 1;\n        }\n    }\n    stateInProcessingInstruction(c) {\n        if (c === CharCodes.Gt || this.fastForwardTo(CharCodes.Gt)) {\n            this.cbs.onprocessinginstruction(this.sectionStart, this.index);\n            this.state = State.Text;\n            this.sectionStart = this.index + 1;\n        }\n    }\n    stateBeforeComment(c) {\n        if (c === CharCodes.Dash) {\n            this.state = State.InCommentLike;\n            this.currentSequence = Sequences.CommentEnd;\n            // Allow short comments (eg. <!-->)\n            this.sequenceIndex = 2;\n            this.sectionStart = this.index + 1;\n        }\n        else {\n            this.state = State.InDeclaration;\n        }\n    }\n    stateInSpecialComment(c) {\n        if (c === CharCodes.Gt || this.fastForwardTo(CharCodes.Gt)) {\n            this.cbs.oncomment(this.sectionStart, this.index, 0);\n            this.state = State.Text;\n            this.sectionStart = this.index + 1;\n        }\n    }\n    stateBeforeSpecialS(c) {\n        const lower = c | 0x20;\n        if (lower === Sequences.ScriptEnd[3]) {\n            this.startSpecial(Sequences.ScriptEnd, 4);\n        }\n        else if (lower === Sequences.StyleEnd[3]) {\n            this.startSpecial(Sequences.StyleEnd, 4);\n        }\n        else {\n            this.state = State.InTagName;\n            this.stateInTagName(c); // Consume the token again\n        }\n    }\n    stateBeforeSpecialT(c) {\n        const lower = c | 0x20;\n        if (lower === Sequences.TitleEnd[3]) {\n            this.startSpecial(Sequences.TitleEnd, 4);\n        }\n        else if (lower === Sequences.TextareaEnd[3]) {\n            this.startSpecial(Sequences.TextareaEnd, 4);\n        }\n        else {\n            this.state = State.InTagName;\n            this.stateInTagName(c); // Consume the token again\n        }\n    }\n    startEntity() {\n        this.baseState = this.state;\n        this.state = State.InEntity;\n        this.entityStart = this.index;\n        this.entityDecoder.startEntity(this.xmlMode\n            ? DecodingMode.Strict\n            : this.baseState === State.Text ||\n                this.baseState === State.InSpecialTag\n                ? DecodingMode.Legacy\n                : DecodingMode.Attribute);\n    }\n    stateInEntity() {\n        const length = this.entityDecoder.write(this.buffer, this.index - this.offset);\n        // If `length` is positive, we are done with the entity.\n        if (length >= 0) {\n            this.state = this.baseState;\n            if (length === 0) {\n                this.index = this.entityStart;\n            }\n        }\n        else {\n            // Mark buffer as consumed.\n            this.index = this.offset + this.buffer.length - 1;\n        }\n    }\n    /**\n     * Remove data that has already been consumed from the buffer.\n     */\n    cleanup() {\n        // If we are inside of text or attributes, emit what we already have.\n        if (this.running && this.sectionStart !== this.index) {\n            if (this.state === State.Text ||\n                (this.state === State.InSpecialTag && this.sequenceIndex === 0)) {\n                this.cbs.ontext(this.sectionStart, this.index);\n                this.sectionStart = this.index;\n            }\n            else if (this.state === State.InAttributeValueDq ||\n                this.state === State.InAttributeValueSq ||\n                this.state === State.InAttributeValueNq) {\n                this.cbs.onattribdata(this.sectionStart, this.index);\n                this.sectionStart = this.index;\n            }\n        }\n    }\n    shouldContinue() {\n        return this.index < this.buffer.length + this.offset && this.running;\n    }\n    /**\n     * Iterates through the buffer, calling the function corresponding to the current state.\n     *\n     * States that are more likely to be hit are higher up, as a performance improvement.\n     */\n    parse() {\n        while (this.shouldContinue()) {\n            const c = this.buffer.charCodeAt(this.index - this.offset);\n            switch (this.state) {\n                case State.Text: {\n                    this.stateText(c);\n                    break;\n                }\n                case State.SpecialStartSequence: {\n                    this.stateSpecialStartSequence(c);\n                    break;\n                }\n                case State.InSpecialTag: {\n                    this.stateInSpecialTag(c);\n                    break;\n                }\n                case State.CDATASequence: {\n                    this.stateCDATASequence(c);\n                    break;\n                }\n                case State.InAttributeValueDq: {\n                    this.stateInAttributeValueDoubleQuotes(c);\n                    break;\n                }\n                case State.InAttributeName: {\n                    this.stateInAttributeName(c);\n                    break;\n                }\n                case State.InCommentLike: {\n                    this.stateInCommentLike(c);\n                    break;\n                }\n                case State.InSpecialComment: {\n                    this.stateInSpecialComment(c);\n                    break;\n                }\n                case State.BeforeAttributeName: {\n                    this.stateBeforeAttributeName(c);\n                    break;\n                }\n                case State.InTagName: {\n                    this.stateInTagName(c);\n                    break;\n                }\n                case State.InClosingTagName: {\n                    this.stateInClosingTagName(c);\n                    break;\n                }\n                case State.BeforeTagName: {\n                    this.stateBeforeTagName(c);\n                    break;\n                }\n                case State.AfterAttributeName: {\n                    this.stateAfterAttributeName(c);\n                    break;\n                }\n                case State.InAttributeValueSq: {\n                    this.stateInAttributeValueSingleQuotes(c);\n                    break;\n                }\n                case State.BeforeAttributeValue: {\n                    this.stateBeforeAttributeValue(c);\n                    break;\n                }\n                case State.BeforeClosingTagName: {\n                    this.stateBeforeClosingTagName(c);\n                    break;\n                }\n                case State.AfterClosingTagName: {\n                    this.stateAfterClosingTagName(c);\n                    break;\n                }\n                case State.BeforeSpecialS: {\n                    this.stateBeforeSpecialS(c);\n                    break;\n                }\n                case State.BeforeSpecialT: {\n                    this.stateBeforeSpecialT(c);\n                    break;\n                }\n                case State.InAttributeValueNq: {\n                    this.stateInAttributeValueNoQuotes(c);\n                    break;\n                }\n                case State.InSelfClosingTag: {\n                    this.stateInSelfClosingTag(c);\n                    break;\n                }\n                case State.InDeclaration: {\n                    this.stateInDeclaration(c);\n                    break;\n                }\n                case State.BeforeDeclaration: {\n                    this.stateBeforeDeclaration(c);\n                    break;\n                }\n                case State.BeforeComment: {\n                    this.stateBeforeComment(c);\n                    break;\n                }\n                case State.InProcessingInstruction: {\n                    this.stateInProcessingInstruction(c);\n                    break;\n                }\n                case State.InEntity: {\n                    this.stateInEntity();\n                    break;\n                }\n            }\n            this.index++;\n        }\n        this.cleanup();\n    }\n    finish() {\n        if (this.state === State.InEntity) {\n            this.entityDecoder.end();\n            this.state = this.baseState;\n        }\n        this.handleTrailingData();\n        this.cbs.onend();\n    }\n    /** Handle any trailing data. */\n    handleTrailingData() {\n        const endIndex = this.buffer.length + this.offset;\n        // If there is no remaining data, we are done.\n        if (this.sectionStart >= endIndex) {\n            return;\n        }\n        if (this.state === State.InCommentLike) {\n            if (this.currentSequence === Sequences.CdataEnd) {\n                this.cbs.oncdata(this.sectionStart, endIndex, 0);\n            }\n            else {\n                this.cbs.oncomment(this.sectionStart, endIndex, 0);\n            }\n        }\n        else if (this.state === State.InTagName ||\n            this.state === State.BeforeAttributeName ||\n            this.state === State.BeforeAttributeValue ||\n            this.state === State.AfterAttributeName ||\n            this.state === State.InAttributeName ||\n            this.state === State.InAttributeValueSq ||\n            this.state === State.InAttributeValueDq ||\n            this.state === State.InAttributeValueNq ||\n            this.state === State.InClosingTagName) {\n            /*\n             * If we are currently in an opening or closing tag, us not calling the\n             * respective callback signals that the tag should be ignored.\n             */\n        }\n        else {\n            this.cbs.ontext(this.sectionStart, endIndex);\n        }\n    }\n    emitCodePoint(cp, consumed) {\n        if (this.baseState !== State.Text &&\n            this.baseState !== State.InSpecialTag) {\n            if (this.sectionStart < this.entityStart) {\n                this.cbs.onattribdata(this.sectionStart, this.entityStart);\n            }\n            this.sectionStart = this.entityStart + consumed;\n            this.index = this.sectionStart - 1;\n            this.cbs.onattribentity(cp);\n        }\n        else {\n            if (this.sectionStart < this.entityStart) {\n                this.cbs.ontext(this.sectionStart, this.entityStart);\n            }\n            this.sectionStart = this.entityStart + consumed;\n            this.index = this.sectionStart - 1;\n            this.cbs.ontextentity(cp, this.sectionStart);\n        }\n    }\n}\n//# sourceMappingURL=Tokenizer.js.map","import Tokenizer, { QuoteType } from \"./Tokenizer.js\";\nimport { fromCodePoint } from \"entities/lib/decode.js\";\nconst formTags = new Set([\n    \"input\",\n    \"option\",\n    \"optgroup\",\n    \"select\",\n    \"button\",\n    \"datalist\",\n    \"textarea\",\n]);\nconst pTag = new Set([\"p\"]);\nconst tableSectionTags = new Set([\"thead\", \"tbody\"]);\nconst ddtTags = new Set([\"dd\", \"dt\"]);\nconst rtpTags = new Set([\"rt\", \"rp\"]);\nconst openImpliesClose = new Map([\n    [\"tr\", new Set([\"tr\", \"th\", \"td\"])],\n    [\"th\", new Set([\"th\"])],\n    [\"td\", new Set([\"thead\", \"th\", \"td\"])],\n    [\"body\", new Set([\"head\", \"link\", \"script\"])],\n    [\"li\", new Set([\"li\"])],\n    [\"p\", pTag],\n    [\"h1\", pTag],\n    [\"h2\", pTag],\n    [\"h3\", pTag],\n    [\"h4\", pTag],\n    [\"h5\", pTag],\n    [\"h6\", pTag],\n    [\"select\", formTags],\n    [\"input\", formTags],\n    [\"output\", formTags],\n    [\"button\", formTags],\n    [\"datalist\", formTags],\n    [\"textarea\", formTags],\n    [\"option\", new Set([\"option\"])],\n    [\"optgroup\", new Set([\"optgroup\", \"option\"])],\n    [\"dd\", ddtTags],\n    [\"dt\", ddtTags],\n    [\"address\", pTag],\n    [\"article\", pTag],\n    [\"aside\", pTag],\n    [\"blockquote\", pTag],\n    [\"details\", pTag],\n    [\"div\", pTag],\n    [\"dl\", pTag],\n    [\"fieldset\", pTag],\n    [\"figcaption\", pTag],\n    [\"figure\", pTag],\n    [\"footer\", pTag],\n    [\"form\", pTag],\n    [\"header\", pTag],\n    [\"hr\", pTag],\n    [\"main\", pTag],\n    [\"nav\", pTag],\n    [\"ol\", pTag],\n    [\"pre\", pTag],\n    [\"section\", pTag],\n    [\"table\", pTag],\n    [\"ul\", pTag],\n    [\"rt\", rtpTags],\n    [\"rp\", rtpTags],\n    [\"tbody\", tableSectionTags],\n    [\"tfoot\", tableSectionTags],\n]);\nconst voidElements = new Set([\n    \"area\",\n    \"base\",\n    \"basefont\",\n    \"br\",\n    \"col\",\n    \"command\",\n    \"embed\",\n    \"frame\",\n    \"hr\",\n    \"img\",\n    \"input\",\n    \"isindex\",\n    \"keygen\",\n    \"link\",\n    \"meta\",\n    \"param\",\n    \"source\",\n    \"track\",\n    \"wbr\",\n]);\nconst foreignContextElements = new Set([\"math\", \"svg\"]);\nconst htmlIntegrationElements = new Set([\n    \"mi\",\n    \"mo\",\n    \"mn\",\n    \"ms\",\n    \"mtext\",\n    \"annotation-xml\",\n    \"foreignobject\",\n    \"desc\",\n    \"title\",\n]);\nconst reNameEnd = /\\s|\\//;\nexport class Parser {\n    constructor(cbs, options = {}) {\n        var _a, _b, _c, _d, _e, _f;\n        this.options = options;\n        /** The start index of the last event. */\n        this.startIndex = 0;\n        /** The end index of the last event. */\n        this.endIndex = 0;\n        /**\n         * Store the start index of the current open tag,\n         * so we can update the start index for attributes.\n         */\n        this.openTagStart = 0;\n        this.tagname = \"\";\n        this.attribname = \"\";\n        this.attribvalue = \"\";\n        this.attribs = null;\n        this.stack = [];\n        this.buffers = [];\n        this.bufferOffset = 0;\n        /** The index of the last written buffer. Used when resuming after a `pause()`. */\n        this.writeIndex = 0;\n        /** Indicates whether the parser has finished running / `.end` has been called. */\n        this.ended = false;\n        this.cbs = cbs !== null && cbs !== void 0 ? cbs : {};\n        this.htmlMode = !this.options.xmlMode;\n        this.lowerCaseTagNames = (_a = options.lowerCaseTags) !== null && _a !== void 0 ? _a : this.htmlMode;\n        this.lowerCaseAttributeNames =\n            (_b = options.lowerCaseAttributeNames) !== null && _b !== void 0 ? _b : this.htmlMode;\n        this.recognizeSelfClosing =\n            (_c = options.recognizeSelfClosing) !== null && _c !== void 0 ? _c : !this.htmlMode;\n        this.tokenizer = new ((_d = options.Tokenizer) !== null && _d !== void 0 ? _d : Tokenizer)(this.options, this);\n        this.foreignContext = [!this.htmlMode];\n        (_f = (_e = this.cbs).onparserinit) === null || _f === void 0 ? void 0 : _f.call(_e, this);\n    }\n    // Tokenizer event handlers\n    /** @internal */\n    ontext(start, endIndex) {\n        var _a, _b;\n        const data = this.getSlice(start, endIndex);\n        this.endIndex = endIndex - 1;\n        (_b = (_a = this.cbs).ontext) === null || _b === void 0 ? void 0 : _b.call(_a, data);\n        this.startIndex = endIndex;\n    }\n    /** @internal */\n    ontextentity(cp, endIndex) {\n        var _a, _b;\n        this.endIndex = endIndex - 1;\n        (_b = (_a = this.cbs).ontext) === null || _b === void 0 ? void 0 : _b.call(_a, fromCodePoint(cp));\n        this.startIndex = endIndex;\n    }\n    /**\n     * Checks if the current tag is a void element. Override this if you want\n     * to specify your own additional void elements.\n     */\n    isVoidElement(name) {\n        return this.htmlMode && voidElements.has(name);\n    }\n    /** @internal */\n    onopentagname(start, endIndex) {\n        this.endIndex = endIndex;\n        let name = this.getSlice(start, endIndex);\n        if (this.lowerCaseTagNames) {\n            name = name.toLowerCase();\n        }\n        this.emitOpenTag(name);\n    }\n    emitOpenTag(name) {\n        var _a, _b, _c, _d;\n        this.openTagStart = this.startIndex;\n        this.tagname = name;\n        const impliesClose = this.htmlMode && openImpliesClose.get(name);\n        if (impliesClose) {\n            while (this.stack.length > 0 && impliesClose.has(this.stack[0])) {\n                const element = this.stack.shift();\n                (_b = (_a = this.cbs).onclosetag) === null || _b === void 0 ? void 0 : _b.call(_a, element, true);\n            }\n        }\n        if (!this.isVoidElement(name)) {\n            this.stack.unshift(name);\n            if (this.htmlMode) {\n                if (foreignContextElements.has(name)) {\n                    this.foreignContext.unshift(true);\n                }\n                else if (htmlIntegrationElements.has(name)) {\n                    this.foreignContext.unshift(false);\n                }\n            }\n        }\n        (_d = (_c = this.cbs).onopentagname) === null || _d === void 0 ? void 0 : _d.call(_c, name);\n        if (this.cbs.onopentag)\n            this.attribs = {};\n    }\n    endOpenTag(isImplied) {\n        var _a, _b;\n        this.startIndex = this.openTagStart;\n        if (this.attribs) {\n            (_b = (_a = this.cbs).onopentag) === null || _b === void 0 ? void 0 : _b.call(_a, this.tagname, this.attribs, isImplied);\n            this.attribs = null;\n        }\n        if (this.cbs.onclosetag && this.isVoidElement(this.tagname)) {\n            this.cbs.onclosetag(this.tagname, true);\n        }\n        this.tagname = \"\";\n    }\n    /** @internal */\n    onopentagend(endIndex) {\n        this.endIndex = endIndex;\n        this.endOpenTag(false);\n        // Set `startIndex` for next node\n        this.startIndex = endIndex + 1;\n    }\n    /** @internal */\n    onclosetag(start, endIndex) {\n        var _a, _b, _c, _d, _e, _f, _g, _h;\n        this.endIndex = endIndex;\n        let name = this.getSlice(start, endIndex);\n        if (this.lowerCaseTagNames) {\n            name = name.toLowerCase();\n        }\n        if (this.htmlMode &&\n            (foreignContextElements.has(name) ||\n                htmlIntegrationElements.has(name))) {\n            this.foreignContext.shift();\n        }\n        if (!this.isVoidElement(name)) {\n            const pos = this.stack.indexOf(name);\n            if (pos !== -1) {\n                for (let index = 0; index <= pos; index++) {\n                    const element = this.stack.shift();\n                    // We know the stack has sufficient elements.\n                    (_b = (_a = this.cbs).onclosetag) === null || _b === void 0 ? void 0 : _b.call(_a, element, index !== pos);\n                }\n            }\n            else if (this.htmlMode && name === \"p\") {\n                // Implicit open before close\n                this.emitOpenTag(\"p\");\n                this.closeCurrentTag(true);\n            }\n        }\n        else if (this.htmlMode && name === \"br\") {\n            // We can't use `emitOpenTag` for implicit open, as `br` would be implicitly closed.\n            (_d = (_c = this.cbs).onopentagname) === null || _d === void 0 ? void 0 : _d.call(_c, \"br\");\n            (_f = (_e = this.cbs).onopentag) === null || _f === void 0 ? void 0 : _f.call(_e, \"br\", {}, true);\n            (_h = (_g = this.cbs).onclosetag) === null || _h === void 0 ? void 0 : _h.call(_g, \"br\", false);\n        }\n        // Set `startIndex` for next node\n        this.startIndex = endIndex + 1;\n    }\n    /** @internal */\n    onselfclosingtag(endIndex) {\n        this.endIndex = endIndex;\n        if (this.recognizeSelfClosing || this.foreignContext[0]) {\n            this.closeCurrentTag(false);\n            // Set `startIndex` for next node\n            this.startIndex = endIndex + 1;\n        }\n        else {\n            // Ignore the fact that the tag is self-closing.\n            this.onopentagend(endIndex);\n        }\n    }\n    closeCurrentTag(isOpenImplied) {\n        var _a, _b;\n        const name = this.tagname;\n        this.endOpenTag(isOpenImplied);\n        // Self-closing tags will be on the top of the stack\n        if (this.stack[0] === name) {\n            // If the opening tag isn't implied, the closing tag has to be implied.\n            (_b = (_a = this.cbs).onclosetag) === null || _b === void 0 ? void 0 : _b.call(_a, name, !isOpenImplied);\n            this.stack.shift();\n        }\n    }\n    /** @internal */\n    onattribname(start, endIndex) {\n        this.startIndex = start;\n        const name = this.getSlice(start, endIndex);\n        this.attribname = this.lowerCaseAttributeNames\n            ? name.toLowerCase()\n            : name;\n    }\n    /** @internal */\n    onattribdata(start, endIndex) {\n        this.attribvalue += this.getSlice(start, endIndex);\n    }\n    /** @internal */\n    onattribentity(cp) {\n        this.attribvalue += fromCodePoint(cp);\n    }\n    /** @internal */\n    onattribend(quote, endIndex) {\n        var _a, _b;\n        this.endIndex = endIndex;\n        (_b = (_a = this.cbs).onattribute) === null || _b === void 0 ? void 0 : _b.call(_a, this.attribname, this.attribvalue, quote === QuoteType.Double\n            ? '\"'\n            : quote === QuoteType.Single\n                ? \"'\"\n                : quote === QuoteType.NoValue\n                    ? undefined\n                    : null);\n        if (this.attribs &&\n            !Object.prototype.hasOwnProperty.call(this.attribs, this.attribname)) {\n            this.attribs[this.attribname] = this.attribvalue;\n        }\n        this.attribvalue = \"\";\n    }\n    getInstructionName(value) {\n        const index = value.search(reNameEnd);\n        let name = index < 0 ? value : value.substr(0, index);\n        if (this.lowerCaseTagNames) {\n            name = name.toLowerCase();\n        }\n        return name;\n    }\n    /** @internal */\n    ondeclaration(start, endIndex) {\n        this.endIndex = endIndex;\n        const value = this.getSlice(start, endIndex);\n        if (this.cbs.onprocessinginstruction) {\n            const name = this.getInstructionName(value);\n            this.cbs.onprocessinginstruction(`!${name}`, `!${value}`);\n        }\n        // Set `startIndex` for next node\n        this.startIndex = endIndex + 1;\n    }\n    /** @internal */\n    onprocessinginstruction(start, endIndex) {\n        this.endIndex = endIndex;\n        const value = this.getSlice(start, endIndex);\n        if (this.cbs.onprocessinginstruction) {\n            const name = this.getInstructionName(value);\n            this.cbs.onprocessinginstruction(`?${name}`, `?${value}`);\n        }\n        // Set `startIndex` for next node\n        this.startIndex = endIndex + 1;\n    }\n    /** @internal */\n    oncomment(start, endIndex, offset) {\n        var _a, _b, _c, _d;\n        this.endIndex = endIndex;\n        (_b = (_a = this.cbs).oncomment) === null || _b === void 0 ? void 0 : _b.call(_a, this.getSlice(start, endIndex - offset));\n        (_d = (_c = this.cbs).oncommentend) === null || _d === void 0 ? void 0 : _d.call(_c);\n        // Set `startIndex` for next node\n        this.startIndex = endIndex + 1;\n    }\n    /** @internal */\n    oncdata(start, endIndex, offset) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;\n        this.endIndex = endIndex;\n        const value = this.getSlice(start, endIndex - offset);\n        if (!this.htmlMode || this.options.recognizeCDATA) {\n            (_b = (_a = this.cbs).oncdatastart) === null || _b === void 0 ? void 0 : _b.call(_a);\n            (_d = (_c = this.cbs).ontext) === null || _d === void 0 ? void 0 : _d.call(_c, value);\n            (_f = (_e = this.cbs).oncdataend) === null || _f === void 0 ? void 0 : _f.call(_e);\n        }\n        else {\n            (_h = (_g = this.cbs).oncomment) === null || _h === void 0 ? void 0 : _h.call(_g, `[CDATA[${value}]]`);\n            (_k = (_j = this.cbs).oncommentend) === null || _k === void 0 ? void 0 : _k.call(_j);\n        }\n        // Set `startIndex` for next node\n        this.startIndex = endIndex + 1;\n    }\n    /** @internal */\n    onend() {\n        var _a, _b;\n        if (this.cbs.onclosetag) {\n            // Set the end index for all remaining tags\n            this.endIndex = this.startIndex;\n            for (let index = 0; index < this.stack.length; index++) {\n                this.cbs.onclosetag(this.stack[index], true);\n            }\n        }\n        (_b = (_a = this.cbs).onend) === null || _b === void 0 ? void 0 : _b.call(_a);\n    }\n    /**\n     * Resets the parser to a blank state, ready to parse a new HTML document\n     */\n    reset() {\n        var _a, _b, _c, _d;\n        (_b = (_a = this.cbs).onreset) === null || _b === void 0 ? void 0 : _b.call(_a);\n        this.tokenizer.reset();\n        this.tagname = \"\";\n        this.attribname = \"\";\n        this.attribs = null;\n        this.stack.length = 0;\n        this.startIndex = 0;\n        this.endIndex = 0;\n        (_d = (_c = this.cbs).onparserinit) === null || _d === void 0 ? void 0 : _d.call(_c, this);\n        this.buffers.length = 0;\n        this.foreignContext.length = 0;\n        this.foreignContext.unshift(!this.htmlMode);\n        this.bufferOffset = 0;\n        this.writeIndex = 0;\n        this.ended = false;\n    }\n    /**\n     * Resets the parser, then parses a complete document and\n     * pushes it to the handler.\n     *\n     * @param data Document to parse.\n     */\n    parseComplete(data) {\n        this.reset();\n        this.end(data);\n    }\n    getSlice(start, end) {\n        while (start - this.bufferOffset >= this.buffers[0].length) {\n            this.shiftBuffer();\n        }\n        let slice = this.buffers[0].slice(start - this.bufferOffset, end - this.bufferOffset);\n        while (end - this.bufferOffset > this.buffers[0].length) {\n            this.shiftBuffer();\n            slice += this.buffers[0].slice(0, end - this.bufferOffset);\n        }\n        return slice;\n    }\n    shiftBuffer() {\n        this.bufferOffset += this.buffers[0].length;\n        this.writeIndex--;\n        this.buffers.shift();\n    }\n    /**\n     * Parses a chunk of data and calls the corresponding callbacks.\n     *\n     * @param chunk Chunk to parse.\n     */\n    write(chunk) {\n        var _a, _b;\n        if (this.ended) {\n            (_b = (_a = this.cbs).onerror) === null || _b === void 0 ? void 0 : _b.call(_a, new Error(\".write() after done!\"));\n            return;\n        }\n        this.buffers.push(chunk);\n        if (this.tokenizer.running) {\n            this.tokenizer.write(chunk);\n            this.writeIndex++;\n        }\n    }\n    /**\n     * Parses the end of the buffer and clears the stack, calls onend.\n     *\n     * @param chunk Optional final chunk to parse.\n     */\n    end(chunk) {\n        var _a, _b;\n        if (this.ended) {\n            (_b = (_a = this.cbs).onerror) === null || _b === void 0 ? void 0 : _b.call(_a, new Error(\".end() after done!\"));\n            return;\n        }\n        if (chunk)\n            this.write(chunk);\n        this.ended = true;\n        this.tokenizer.end();\n    }\n    /**\n     * Pauses parsing. The parser won't emit events until `resume` is called.\n     */\n    pause() {\n        this.tokenizer.pause();\n    }\n    /**\n     * Resumes parsing after `pause` was called.\n     */\n    resume() {\n        this.tokenizer.resume();\n        while (this.tokenizer.running &&\n            this.writeIndex < this.buffers.length) {\n            this.tokenizer.write(this.buffers[this.writeIndex++]);\n        }\n        if (this.ended)\n            this.tokenizer.end();\n    }\n    /**\n     * Alias of `write`, for backwards compatibility.\n     *\n     * @param chunk Chunk to parse.\n     * @deprecated\n     */\n    parseChunk(chunk) {\n        this.write(chunk);\n    }\n    /**\n     * Alias of `end`, for backwards compatibility.\n     *\n     * @param chunk Optional final chunk to parse.\n     * @deprecated\n     */\n    done(chunk) {\n        this.end(chunk);\n    }\n}\n//# sourceMappingURL=Parser.js.map","import { Parser } from \"./Parser.js\";\nexport { Parser } from \"./Parser.js\";\nimport { DomHandler, } from \"domhandler\";\nexport { DomHandler, \n// Old name for DomHandler\nDomHandler as DefaultHandler, } from \"domhandler\";\n// Helper methods\n/**\n * Parses the data, returns the resulting document.\n *\n * @param data The data that should be parsed.\n * @param options Optional options for the parser and DOM handler.\n */\nexport function parseDocument(data, options) {\n    const handler = new DomHandler(undefined, options);\n    new Parser(handler, options).end(data);\n    return handler.root;\n}\n/**\n * Parses data, returns an array of the root nodes.\n *\n * Note that the root nodes still have a `Document` node as their parent.\n * Use `parseDocument` to get the `Document` node instead.\n *\n * @param data The data that should be parsed.\n * @param options Optional options for the parser and DOM handler.\n * @deprecated Use `parseDocument` instead.\n */\nexport function parseDOM(data, options) {\n    return parseDocument(data, options).children;\n}\n/**\n * Creates a parser instance, with an attached DOM handler.\n *\n * @param callback A callback that will be called once parsing has been completed, with the resulting document.\n * @param options Optional options for the parser and DOM handler.\n * @param elementCallback An optional callback that will be called every time a tag has been completed inside of the DOM.\n */\nexport function createDocumentStream(callback, options, elementCallback) {\n    const handler = new DomHandler((error) => callback(error, handler.root), options, elementCallback);\n    return new Parser(handler, options);\n}\n/**\n * Creates a parser instance, with an attached DOM handler.\n *\n * @param callback A callback that will be called once parsing has been completed, with an array of root nodes.\n * @param options Optional options for the parser and DOM handler.\n * @param elementCallback An optional callback that will be called every time a tag has been completed inside of the DOM.\n * @deprecated Use `createDocumentStream` instead.\n */\nexport function createDomStream(callback, options, elementCallback) {\n    const handler = new DomHandler(callback, options, elementCallback);\n    return new Parser(handler, options);\n}\nexport { default as Tokenizer, QuoteType, } from \"./Tokenizer.js\";\n/*\n * All of the following exports exist for backwards-compatibility.\n * They should probably be removed eventually.\n */\nexport * as ElementType from \"domelementtype\";\nimport { getFeed } from \"domutils\";\nexport { getFeed } from \"domutils\";\nconst parseFeedDefaultOptions = { xmlMode: true };\n/**\n * Parse a feed.\n *\n * @param feed The feed that should be parsed, as a string.\n * @param options Optionally, options for parsing. When using this, you should set `xmlMode` to `true`.\n */\nexport function parseFeed(feed, options = parseFeedDefaultOptions) {\n    return getFeed(parseDOM(feed, options));\n}\nexport * as DomUtils from \"domutils\";\n//# sourceMappingURL=index.js.map","import { getLoad } from './load.js';\nimport { getParse } from './parse.js';\nimport { renderWithParse5, parseWithParse5 } from './parsers/parse5-adapter.js';\nimport renderWithHtmlparser2 from 'dom-serializer';\nimport { parseDocument as parseWithHtmlparser2 } from 'htmlparser2';\nconst parse = getParse((content, options, isDocument, context) => options._useHtmlParser2\n    ? parseWithHtmlparser2(content, options)\n    : parseWithParse5(content, options, isDocument, context));\n// Duplicate docs due to https://github.com/TypeStrong/typedoc/issues/1616\n/**\n * Create a querying function, bound to a document created from the provided\n * markup.\n *\n * Note that similar to web browser contexts, this operation may introduce\n * `<html>`, `<head>`, and `<body>` elements; set `isDocument` to `false` to\n * switch to fragment mode and disable this.\n *\n * @category Loading\n * @param content - Markup to be loaded.\n * @param options - Options for the created instance.\n * @param isDocument - Allows parser to be switched to fragment mode.\n * @returns The loaded document.\n * @see {@link https://cheerio.js.org#loading} for additional usage information.\n */\nexport const load = getLoad(parse, (dom, options) => options._useHtmlParser2\n    ? renderWithHtmlparser2(dom, options)\n    : renderWithParse5(dom));\n//# sourceMappingURL=load-parse.js.map","\nexport enum BlockTypes {\n  HEADER2 = \"headerH2\",\n  HEADER3 = \"headerH3\",\n  PARAGRAPH = \"paragraph\",\n  ORDERED_LIST = \"orderedList\",\n  UNORDERED_LIST = \"unorderedList\",\n  IMAGE = \"image\",\n  TABLE = \"table\",\n  LINK_TOOL = \"linkTool\",\n  QUOTE = \"quote\",\n  HIGHLIGHT = \"highlight\",\n  EMBED = \"embed\",\n  IMAGE_CONTAINER = \"imageContainer\",\n  BUTTON = \"buttonPlugin\",\n}\n\nexport type Block = {\n  type: string;\n  data: {\n    content?: string[][];\n    text?: string;\n    level?: number;\n    items?: Array<string>;\n    style?: string;\n    variant?: string;\n    description?: string;\n    title?: string;\n  };\n};\n\n\nexport interface RichTextObject {\n  time?: number;\n  version: string;\n  blocks: Block[];\n}\n  ","// transforms.ts\nimport { ImageBlock } from \"../../../types/index.js\";\nimport { BlockTypes } from \"../../../types/editorjs.js\";\nimport { Cheerio } from \"cheerio\";\nimport { Element } from 'domhandler';\n\nexport type TransformFunctions = {\n  [key: string]: (element: Cheerio<Element>) => any;\n};\n\nconst transforms: TransformFunctions = {\n  p: (element: Cheerio<Element>) => ({\n    type: \"paragraph\",\n    data: { text: element.html() },\n  }),\n  h2: (element: Cheerio<Element>) => ({\n    type: \"headerH2\",\n    data: { text: element.text(), level: 2 },\n  }),\n  h3: (element: Cheerio<Element>) => ({\n    type: \"headerH3\",\n    data: { text: element.text(), level: 3 },\n  }),\n\n  ul: (element: Cheerio<Element>) => ({\n    type: \"unorderedList\",\n    data: {\n      items: element\n        .find(\"li\")\n        .map((i: number, el: Element) => {\n          return element.find(el).html();\n        })\n        .get(),\n      style: \"unordered\",\n    },\n  }),\n  ol: (element: Cheerio<Element>) => ({\n    type: \"orderedList\",\n    data: {\n      items: element\n        .find(\"li\")\n        .map((i: number, el: Element) => {\n          return element.find(el).html();\n        })\n        .get(),\n      style: \"ordered\",\n    },\n  }),\n  \"ck-highlight\": (element: Cheerio<Element>) => {\n    return {\n      type: \"highlight\",\n      data: {\n        variant: element.attr(\"data-variant\"),\n        description: element.find(\".ck-highlight__description\").html(),\n        title: element.find(\"div\").html(),\n      },\n    };\n  },\n  table: (element: Cheerio<Element>) => ({\n    type: \"table\",\n    data: {\n      // check if the table has a thead\n      withHeadings: element.find(\"thead\").length > 0,\n      content: element\n        .find(\"tr\")\n        .map((i: number, el: Element) => {\n          return element\n            .find(el)\n            .find(\"td, th\")\n            .map((i: number, el: Element) => {\n              const content = element.find(el)\n              return content.html();\n            })\n            .get();\n        })\n        .get()\n        .reduce((acc: string[][], item: string, index: number) => {\n          const nbCols = element.find(\"tr\").first().find(\"td, th\").length;\n          if (index % nbCols === 0) acc.push([item]);\n          else acc[acc.length - 1].push(item);\n          return acc;\n        }, [])\n    },\n  }),\n  image: (element: Cheerio<Element>) => ({\n    type: \"image\",\n    data: {\n      file: {\n        url: element.find(\"img\").attr(\"src\"),\n        alt: element.find(\"img\").attr(\"alt\"),\n      },\n      caption: element.find(\"figcaption\").text(),\n      withBorder: false,\n      stretched: !!element.attr(\"style\")?.includes(\"width\"),\n      withBackground: false,\n    },\n  }),\n  'images-container': (element: Cheerio<Element>) => ({\n  type: \"imageContainer\",\n  data: {\n    children: element.find(\"figure.image\").map((i: number, el: Element): ImageBlock => ({\n      type: BlockTypes.IMAGE,\n      data: {\n        file: {\n          url: element.find(el).find(\"img\").attr(\"src\") ?? \"\",\n          alt: element.find(el).find(\"img\").attr(\"alt\") ?? \"\",\n        },\n        caption: element.find(el).find(\"figcaption\").text(),\n      }\n    })).get()\n  },\n}),\n  'link-tool': (element: Cheerio<Element>) => ({\n    type: \"linkTool\",\n    data: {\n      link: element.attr(\"data-href\"),\n      meta: {\n        id: element.attr(\"data-id\"),\n        title: element.attr(\"data-title\"),\n        image: {\n          url: element.attr(\"data-image-url\"),\n        },\n      },\n    },\n  }),\n  quote: (element: Cheerio<Element>) => ({\n    type: \"quote\",\n    data: {\n      text: element.find(\"p\").html(),\n      // TODO: (Should be improved) the ckeditor quote add a &nbsp; in the caption, we have to remove it\n      caption: element.find(\"figcaption\").text() !== \"\\u00a0\" ? element.find(\"figcaption\").html(): \"\",\n    },\n  }),\n  media: (element: Cheerio<Element>) => {\n      const source = element.children().first().attr(\"data-oembed-url\");\n      const iframe = element.find(\"iframe\");\n      const service = iframe.attr(\"title\");\n      const embed = iframe.attr(\"src\");\n      const width = iframe.attr(\"width\") ?? 0;\n      const height = iframe.attr(\"height\") ?? 0;\n      return {\n        type: \"embed\",\n        data: {\n          embed,\n          service,\n          source,\n          width: +width,\n          height: +height,\n          caption: element.find(\"figcaption\").text() !== \"\\u00a0\" ? element.find(\"figcaption\").html(): \"\",\n        },\n      };\n  },\n\n  'button-plugin': (element: Cheerio<Element>) => {\n    return {\n      type: \"buttonPlugin\",\n      data: {\n        href: element.attr(\"data-href\"),\n        title: element.attr(\"data-title\"),\n      },\n    };\n  },\n};\n\nexport default transforms;\n","// errors.ts\nexport function ParseFunctionError(type: string): Error {\n  return new Error(`\\x1b[31m The Transform function for HTML tag \"${type}\" is not defined. \\n\n  Define your custom transform functions to support this tag. \\x1b[0m`);\n}","// Import the necessary Cheerio function\nimport { load } from 'cheerio';\nimport { Element } from 'domhandler';\nimport transforms from './transforms';\nimport { Block, RichTextObject } from '../../../types'; // Adjust the import path as needed\nimport { ParseFunctionError } from './errors';\n\ntype Parser = {\n  parse(html: string): RichTextObject;\n};\n\nconst createParser = (plugins = {}): Parser => {\n  const parsers = Object.assign({}, transforms, plugins);\n\n  return {\n    parse: (html: string): RichTextObject => {\n      const $ = load(html); // Load the HTML string into Cheerio\n      const blocks: Block[] = [];\n      $('article').children().each((i: number, element: Element) => {\n        let tagName = element.tagName.toLowerCase();\n        let transformFn = parsers[tagName];\n        // figure tag is a special case for table, image, and media embed\n        if (tagName === 'figure' && element.attribs.class) {\n          const classList = element.attribs.class.split(' ');\n          const foundClass = classList.find(className => parsers[className]);\n          if (foundClass) {\n            transformFn = parsers[foundClass];\n          }\n        }\n\n        if (transformFn) {\n          // Pass the Cheerio object representing the element to the transform function\n          blocks.push(transformFn($(element)));\n        } else {\n          console.error(ParseFunctionError(tagName));\n        }\n      });\n\n      return {\n        blocks: blocks,\n        version: \"1.0.0\"\n      };\n    },\n  };\n};\n\nexport default createParser;\n","\nimport createParser from \"./utils/parser\";\n\n/**\n * Parses HTML to a json.\n */\nexport default function json2html(html: string): string {\n  try {\n    if (!html) {\n      return JSON.stringify({\n        blocks: [],\n        version: \"1.0.0\"\n      });\n    }\n    const data = createParser().parse(`<article>${html}</article>`);\n    const jsonString = JSON.stringify(data);\n    return jsonString;\n\n  } catch (e) {\n    console.error(e);\n    return JSON.stringify({\n      blocks: [],\n      version: \"1.0.0\"\n    });\n  }\n}\n","/**\n * @license Copyright (c) 2003-2023, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module editorjs/editorjsdataprocessor\n */\n\nimport {\n\tHtmlDataProcessor,\n\ttype DataProcessor,\n\ttype ViewDocument,\n\ttype ViewDocumentFragment,\n\ttype MatcherPattern\n} from 'ckeditor5';\nimport json2html from \"./json2html/json2html\";\nimport html2json from \"./html2json/html2json\";\n/**\n * This data processor implementation uses GitHub Flavored Json as input/output data.\n *\n * See the {@glink features/editorjs Json output} guide to learn more on how to enable it.\n */\nexport default class EditorjsDataProcessor implements DataProcessor {\n  /**\n   * HTML data processor used to process HTML produced by the Json-to-HTML converter and the other way.\n   */\n  _htmlDP;\n\n  /**\n   * Creates a new instance of the Json data processor class.\n   */\n  constructor(document: ViewDocument) {\n    this._htmlDP = new HtmlDataProcessor(document);\n  }\n\n  /**\n   * Keeps the specified element in the output as HTML. This is useful if the editor contains\n   * features producing HTML that is not a part of the Json standard.\n   *\n   * By default, all HTML tags are removed.\n   *\n   * @param element The element name to be kept.\n   */\n  // keepHtml(element: keyof HTMLElementTagNameMap) {\n  //   turndownService.keep([element]);\n  // }\n\n  /**\n   * Converts the provided JSON string to a view tree.\n   *\n   * @param data A JSON string.\n   * @returns The converted view element.\n   */\n  toView(data: string): ViewDocumentFragment {\n    const html = json2html(data);\n    return this._htmlDP.toView(html);\n  }\n\n\n  /**\n   * Converts the provided {@link module:engine/view/documentfragment~DocumentFragment} to data format &ndash; in this\n   * case to a JSON string.\n   *\n   * @returns JSON string.\n   */\n  toData(viewFragment: ViewDocumentFragment): string {\n    const html = this._htmlDP.toData(viewFragment);\n    return html2json(html);\n  }\n\n  /**\n   * Registers a {@link module:engine/view/matcher~MatcherPattern} for view elements whose content should be treated as raw data\n   * and not processed during the conversion from Json to view elements.\n   *\n   * The raw data can be later accessed by a\n   * {@link module:engine/view/element~Element#getCustomProperty custom property of a view element} called `\"$rawContent\"`.\n   *\n   * @param pattern The pattern matching all view elements whose content should\n   * be treated as raw data.\n   */\n  registerRawContentMatcher(pattern: MatcherPattern) {\n    this._htmlDP.registerRawContentMatcher(pattern);\n  }\n\n  /**\n   * This method does not have any effect on the data processor result. It exists for compatibility with the\n   * {@link module:engine/dataprocessor/dataprocessor~DataProcessor `DataProcessor` interface}.\n   */\n  useFillerType() {}\n}\n","import EditorjsDataProcessor from \"./editorjsdataprocessor\";\nimport { Plugin, type Editor } from 'ckeditor5';\n\nexport default class Editorjs extends Plugin {\n  static get pluginName() {\n    return \"Editorjs\" as const;\n  }\n\n  constructor(editor: Editor) {\n    super(editor);\n\n    editor.data.processor = new EditorjsDataProcessor(editor.data.viewDocument);\n  }\n}\n","import { Plugin, Widget, toWidget } from 'ckeditor5';\n\nclass ButtonPluginEditing extends Plugin {\n\tstatic get requires() {\n\t\treturn [ Widget ];\n\t}\n\n\tinit() {\n\t\tthis._defineSchema();\n\t\tthis._defineConverters();\n\t}\n\n\t_defineSchema() {\n\t\tconst schema = this.editor.model.schema;\n\t\tschema.register( 'buttonPlugin', {\n\t\t\tisObject: true,\n\t\t\tallowWhere: '$block',\n\t\t\tallowAttributes: [ 'href', 'title' ]\n\t\t} );\n\t}\n\n\t_defineConverters() {\n\t\tconst conversion = this.editor.conversion;\n\n\t\t// Downcast conversion for displaying the widget in the editor.\n\t\tconversion.for( 'downcast' ).elementToElement( {\n\t\t\tmodel: 'buttonPlugin',\n\t\t\tview: ( modelItem, { writer: viewWriter } ) => {\n\t\t\t\tconst href = modelItem.getAttribute( 'href' ) as string;\n\t\t\t\tconst title = modelItem.getAttribute( 'title' ) as string;\n\n\t\t\t\tconst widgetContainer = viewWriter.createContainerElement( 'figure', {\n\t\t\t\t\tclass: 'button-plugin',\n\t\t\t\t\t'data-href': href,\n\t\t\t\t\t'data-title': title\n\t\t\t\t} );\n\n\t\t\t\tconst linkContainer = viewWriter.createContainerElement( 'div', { class: 'button-plugin-container' } );\n\t\t\t\tconst linkElement = viewWriter.createContainerElement( 'a', {\n\t\t\t\t\tclass: 'button-plugin-content',\n\t\t\t\t\thref,\n\t\t\t\t\ttarget: '_blank',\n\t\t\t\t\trel: 'nofollow noindex noreferrer'\n\t\t\t\t} );\n\t\t\t\t// add value title to the titleDIv\n\t\t\t\tconst titleDiv = viewWriter.createContainerElement( 'div', {\n\t\t\t\t\tclass: 'button-plugin-title'\n\t\t\t\t} );\n\t\t\t\tviewWriter.insert( viewWriter.createPositionAt( titleDiv, 0 ), viewWriter.createText( title ) );\n\n\t\t\t\tconst anchorDiv = viewWriter.createContainerElement( 'div', {\n\t\t\t\t\tclass: 'button-plugin-anchor'\n\t\t\t\t} );\n\t\t\t\tviewWriter.insert( viewWriter.createPositionAt( anchorDiv, 0 ), viewWriter.createText( href ) );\n\n\t\t\t\tviewWriter.insert( viewWriter.createPositionAt( linkElement, 'end' ), titleDiv );\n\t\t\t\tviewWriter.insert( viewWriter.createPositionAt( linkElement, 'end' ), anchorDiv );\n\n\t\t\t\tviewWriter.insert( viewWriter.createPositionAt( linkContainer, 0 ), linkElement );\n\t\t\t\tviewWriter.insert( viewWriter.createPositionAt( widgetContainer, 0 ), linkContainer );\n\n\t\t\t\treturn toWidget( widgetContainer, viewWriter, { label: 'Link Preview Widget' } );\n\t\t\t}\n\t\t} );\n\n\t\t// Upcast conversion for converting pasted or loaded content into the model structure.\n\t\tconversion.for( 'upcast' ).elementToElement( {\n\t\t\tview: {\n\t\t\t\tname: 'figure',\n\t\t\t\tclasses: 'button-plugin'\n\t\t\t},\n\t\t\tmodel: ( viewElement, { writer: modelWriter } ) => {\n\t\t\t\treturn modelWriter.createElement( 'buttonPlugin', {\n\t\t\t\t\thref: viewElement.getAttribute( 'data-href' ),\n\t\t\t\t\ttitle: viewElement.getAttribute( 'data-title' )\n\t\t\t\t} );\n\t\t\t}\n\t\t} );\n\t}\n}\n\nexport default ButtonPluginEditing;\n","import type { Locale } from 'ckeditor5';\nimport { icons, View, LabeledFieldView, createLabeledInputText, ButtonView, submitHandler } from 'ckeditor5';\nimport './buttonPlugin.css';\n\nexport default class ButtonPluginFormView extends View {\n    urlInputView: LabeledFieldView;\n    titleInputView: LabeledFieldView;\n    saveButtonView: ButtonView;\n    cancelButtonView: ButtonView;\n    childViews: any;\n    constructor( locale: Locale ) {\n    \tsuper( locale );\n\n    \t// URL input field\n    \tthis.urlInputView = this._createInput( 'URL' );\n\n    \t// Title input field\n    \tthis.titleInputView = this._createInput( 'Titre' );\n\n    \t// Save button\n    \tthis.saveButtonView = this._createButton( 'Enregistrer', icons.check, 'ck-button-save' );\n    \tthis.saveButtonView.type = 'submit';\n\n    \t// Cancel button\n    \tthis.cancelButtonView = this._createButton( 'Annuler', icons.cancel, 'ck-button-cancel' );\n    \tthis.cancelButtonView.delegate( 'execute' ).to( this, 'cancel' );\n\n    \t// Collecting child views\n    \tthis.childViews = this.createCollection( [\n    \t\tthis.urlInputView,\n    \t\tthis.titleInputView,\n    \t\tthis.cancelButtonView,\n    \t\tthis.saveButtonView\n    \t] );\n\n    \t// Setting the template\n    \tthis.setTemplate( {\n    \t\ttag: 'form',\n    \t\tattributes: {\n    \t\t\tclass: [ 'ck', 'ck-button-plugin-form' ],\n    \t\t\ttabindex: '-1'\n    \t\t},\n    \t\tchildren: this.childViews\n    \t} );\n    }\n\n    override render() {\n    \tsuper.render();\n    \tsubmitHandler( {\n    \t\tview: this\n    \t} );\n    }\n\n    focus() {\n    \tthis.childViews.first.focus();\n    }\n\n    _createInput( label: string ) {\n    \tconst labeledInput = new LabeledFieldView( this.locale, createLabeledInputText );\n    \tlabeledInput.label = label;\n    \treturn labeledInput;\n    }\n\n    _createButton( label: string, icon: string, className: string ) {\n    \tconst button = new ButtonView( this.locale );\n    \tbutton.set( {\n    \t\tlabel,\n    \t\ticon,\n    \t\ttooltip: true,\n    \t\tclass: className\n    \t} );\n    \treturn button;\n    }\n}\n","import type { ButtonPluginResponse } from '../types/buttonPlugin.js';\nimport { Command } from 'ckeditor5';\nimport type { Writer } from 'ckeditor5';\n\ninterface PropsCommand {\n    href: string;\n    title: string;\n}\n\nclass ButtonPluginCommand extends Command {\n\toverride execute( data: PropsCommand ) {\n\t\tconst editor = this.editor;\n\t\tconst { href, title } = data;\n\n\t\tif ( !href ) {\n\t\t\tconsole.error( 'URL is required for a link preview.' );\n\t\t\treturn;\n\t\t}\n\t\tthis.fetchLinkData( href, title ).then( fetchedData => {\n\t\t\tthis.insertLinkData( editor, fetchedData );\n\t\t} );\n\t}\n\n\tasync fetchLinkData( href: string, title: string ): Promise<ButtonPluginResponse | null> {\n\t\ttry {\n\t\t\treturn {\n\t\t\t\thref,\n\t\t\t\ttitle\n\t\t\t};\n\t\t} catch ( error ) {\n\t\t\tconsole.error( 'Error fetching link data:', error );\n\t\t}\n\t\treturn null;\n\t}\n\n\tinsertLinkData( editor: any, fetchedData: ButtonPluginResponse | null ) {\n\t\tif ( fetchedData ) {\n\t\t\teditor.model.change( ( writer: Writer ) => {\n\t\t\t\tconst buttonPluginElement = writer.createElement( 'buttonPlugin', fetchedData as unknown as Record<string, unknown> );\n\t\t\t\teditor.model.insertContent( buttonPluginElement, editor.model.document.selection );\n\t\t\t} );\n\t\t} else {\n\t\t\tconsole.error( 'Failed to fetch link data.' );\n\t\t}\n\t}\n}\n\nexport default ButtonPluginCommand;\n","import type {\n\tViewElement,\t// ADDED\n\tViewDocumentSelection } from 'ckeditor5';\nimport {\n\tElement,\n\ttoMap\n} from 'ckeditor5';\nimport { isWidget } from 'ckeditor5';\n\n/**\n * Returns an buttonPlugin widget editing view element if one is selected or is among the selection's ancestors.\n */\nexport const getSelectedButtonPluginViewWidget = ( selection: ViewDocumentSelection ): ViewElement | null => {\n\tconst viewElement = selection.getSelectedElement();\n\n\tif ( !viewElement ) {\n\t\treturn null;\n\t}\n\n\tif ( isButtonPluginWidget( viewElement ) ) {\n\t\tif ( viewElement.hasAttribute( 'data-href' ) ) {\n\t\t\tbuttonPluginURl = viewElement.getAttribute( 'data-href' );\n\t\t}\n\n\t\treturn viewElement;\n\t}\n\treturn null;\n};\n\n/**\n* Checks if a given view element is an buttonPlugin widget.\n*/\nexport const isButtonPluginWidget = ( viewElement: ViewElement ): boolean => {\n\tconst isButtonPlugin = viewElement.hasClass( 'button-plugin' );\n\treturn isButtonPlugin && isWidget( viewElement );\n};\n\n/**\n * Opens the link in a new browser tab.\n */\nexport function openButtonPlugin( link: string ): void {\n\twindow.open( link, '_blank', 'noopener' );\n}\n\n/**\n * The URL of the selected buttonPlugin widget.\n */\nlet buttonPluginURl: string | undefined = '';\n\n/**\n * Returns the URL of the selected buttonPlugin widget.\n * @returns The URL of the selected buttonPlugin widget.\n */\nexport function getButtonPluginURl(): string | undefined {\n\treturn buttonPluginURl;\n}\n\n/**\n * Sets the URL of the selected buttonPlugin widget.\n * @param url The URL of the selected buttonPlugin widget.\n */\nexport function setButtonPluginURl( url: string ): void {\n\tbuttonPluginURl = url;\n}\n\n/**\n * The title of the selected buttonPlugin widget.\n */\nlet buttonPluginTitle: string | undefined = '';\n\n/**\n * Returns the title of the selected buttonPlugin widget.\n * @returns The title of the selected buttonPlugin widget.\n */\nexport function getButtonPluginTitle(): string | undefined {\n\treturn buttonPluginTitle;\n}\n\n/**\n * Sets the title of the selected buttonPlugin widget.\n * @param title The title of the selected buttonPlugin widget.\n */\nexport function setButtonPluginTitle( title: string ): void {\n\tbuttonPluginTitle = title;\n}\n","import type { Locale } from 'ckeditor5';\nimport { Plugin, createDropdown, ButtonView, icons } from 'ckeditor5';\nimport ButtonPluginFormView from './buttonPluginView.js'; // Ensure this path is correct\nimport ButtonPluginCommand from './buttonPluginCommand.js';\nimport { getButtonPluginURl, getSelectedButtonPluginViewWidget, openButtonPlugin, setButtonPluginTitle, setButtonPluginURl } from './utils.js';\n\n// Add URL validation regex\nconst URL_REGEX = /^(https?:\\/\\/)?([\\da-z.-]+)\\.([a-z.]{2,6})([/\\w .-]*)*\\/?$/;\n\nconst buttonPluginIcon = '<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\" width=\"24px\" fill=\"#e8eaed\"><path d=\"M240-280h480v-120H240v120Zm-80 120q-33 0-56.5-23.5T80-240v-480q0-33 23.5-56.5T160-800h640q33 0 56.5 23.5T880-720v480q0 33-23.5 56.5T800-160H160Zm0-80h640v-480H160v480Zm0 0v-480 480Z\"/></svg>';\nconst buttonPluginOpenIcon = '<svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\" ><path fill=\"dark\" d=\"M9.60038 3.66557C9.34265 3.66557 9.13372 3.45664 9.13372 3.19891C9.13372 2.94117 9.34265 2.73224 9.60038 2.73224H12.8011C12.9237 2.73224 13.0352 2.77948 13.1184 2.85674C13.1273 2.86499 13.1359 2.87358 13.1441 2.88249C13.1808 2.92214 13.2092 2.9666 13.2296 3.01373C13.2542 3.0705 13.2678 3.13311 13.2678 3.19891V6.39963C13.2678 6.65736 13.0588 6.8663 12.8011 6.8663C12.5434 6.8663 12.3344 6.65736 12.3344 6.39963V4.32553L7.26309 9.39688C7.08085 9.57913 6.78537 9.57913 6.60312 9.39688C6.42088 9.21464 6.42088 8.91916 6.60312 8.73692L11.6745 3.66557H9.60038Z\"/><path fill=\"dark\" d=\"M4.26584 5.26593C4.10665 5.26593 3.95398 5.32917 3.84141 5.44174C3.72884 5.55431 3.6656 5.70698 3.6656 5.86618V11.7342C3.6656 11.8934 3.72884 12.046 3.84141 12.1586C3.95398 12.2712 4.10665 12.3344 4.26584 12.3344H10.1338C10.293 12.3344 10.4457 12.2712 10.5583 12.1586C10.6708 12.046 10.7341 11.8934 10.7341 11.7342V8.53345C10.7341 8.27571 10.943 8.06678 11.2007 8.06678C11.4585 8.06678 11.6674 8.27571 11.6674 8.53345V11.7342C11.6674 12.1409 11.5058 12.531 11.2182 12.8186C10.9306 13.1062 10.5406 13.2677 10.1338 13.2677H4.26584C3.85911 13.2677 3.46904 13.1062 3.18144 12.8186C2.89384 12.531 2.73227 12.1409 2.73227 11.7342V5.86618C2.73227 5.45945 2.89384 5.06938 3.18144 4.78177C3.46904 4.49417 3.85911 4.3326 4.26584 4.3326H7.46657C7.7243 4.3326 7.93324 4.54153 7.93324 4.79927C7.93324 5.057 7.7243 5.26593 7.46657 5.26593H4.26584Z\"/></svg>';\n\nexport default class ButtonPluginUI extends Plugin {\n    public actionsView: null = null;\n\n    static get requires() {\n    \treturn [ ButtonPluginCommand ];\n    }\n\n    static get pluginName() {\n    \treturn 'ButtonPluginUI';\n    }\n\n    init() {\n    \tconst editor = this.editor;\n\n    \t// Update the buttonPluginURl when the selection changes in the editor\n    \teditor.model.document.selection.on( 'change:range', () => {\n    \t\tconst viewSelection = editor.editing.view.document.selection;\n    \t\tconst selectedWidget = getSelectedButtonPluginViewWidget( viewSelection );\n\n    \t\tif ( selectedWidget && selectedWidget.hasAttribute( 'data-href' ) ) {\n    \t\t\tsetButtonPluginURl( selectedWidget.getAttribute( 'data-href' ) || '' );\n    \t\t} else {\n    \t\t\tsetButtonPluginURl( '' ); // Reset the linkURl if no widget is selected\n    \t\t}\n\n    \t\tif ( selectedWidget && selectedWidget.hasAttribute( 'data-title' ) ) {\n    \t\t\tsetButtonPluginTitle( selectedWidget.getAttribute( 'data-title' ) || '' );\n    \t\t} else {\n    \t\t\tsetButtonPluginTitle( '' ); // Reset the title if no widget is selected\n    \t\t}\n    \t} );\n\n    \t// Add the openButtonPlugin button to the widget toolbar\n    \teditor.ui.componentFactory.add( 'openButtonPlugin', locale => {\n    \t\tconst button = new ButtonView( locale );\n\n    \t\tbutton.set( {\n    \t\t\tlabel: 'Ouvrir le lien',\n    \t\t\ticon: buttonPluginOpenIcon,\n    \t\t\ttooltip: true\n    \t\t} );\n\n    \t\tbutton.on( 'execute', () => {\n    \t\t\tconst href = getButtonPluginURl();\n    \t\t\tif ( href ) {\n    \t\t\t\topenButtonPlugin( href );\n    \t\t\t} else {\n    \t\t\t\talert( 'Aucun lien n\\'a été fourni.' );\n    \t\t\t}\n    \t\t} );\n\n    \t\treturn button;\n    \t} );\n\n    \teditor.ui.componentFactory.add( 'buttonPlugin', ( locale: Locale ) => {\n    \t\tconst dropdown = createDropdown( locale );\n    \t\tconst button = dropdown.buttonView;\n\n    \t\tbutton.set( {\n    \t\t\tlabel: 'Coller l\\'URL d\\'un lien',\n    \t\t\ticon: buttonPluginIcon,\n    \t\t\ttooltip: true\n    \t\t} );\n\n    \t\tdropdown.on( 'change:isOpen', () => {\n    \t\t\tconst formView = new ButtonPluginFormView( locale );\n\n    \t\t\tif ( !dropdown.panelView.children.length ) {\n    \t\t\t\tdropdown.panelView.children.add( formView );\n    \t\t\t}\n\n    \t\t\tformView.on( 'submit', () => {\n    \t\t\t\tconst element = formView.urlInputView.fieldView.element!;\n    \t\t\t\tconst titleElement = formView.titleInputView.fieldView.element!;\n    \t\t\t\tconst href = element instanceof HTMLInputElement ? element.value.trim() : '';\n    \t\t\t\tconst titleValue = titleElement instanceof HTMLInputElement ? titleElement.value.trim() : '';\n\n    \t\t\t\t// Validate inputs\n    \t\t\t\tlet errorMessage = '';\n\n    \t\t\t\tif ( !href ) {\n    \t\t\t\t\terrorMessage = 'L\\'URL est requise.';\n    \t\t\t\t} else if ( !URL_REGEX.test( href ) ) {\n    \t\t\t\t\terrorMessage = 'L\\'URL n\\'est pas valide. Elle doit commencer par http:// ou https:// et contenir un nom de domaine valide.';\n    \t\t\t\t}\n\n    \t\t\t\tif ( !titleValue ) {\n    \t\t\t\t\terrorMessage = errorMessage ? `${ errorMessage }\\nLe titre est requis.` : 'Le titre est requis.';\n    \t\t\t\t}\n\n    \t\t\t\t// Show error if validation fails\n    \t\t\t\tif ( errorMessage ) {\n    \t\t\t\t\t// Update error messages in form view\n    \t\t\t\t\tif ( formView.urlInputView.fieldView.element ) {\n    \t\t\t\t\t\tformView.urlInputView.errorText = !href || !URL_REGEX.test( href ) ? errorMessage : '';\n    \t\t\t\t\t}\n    \t\t\t\t\tif ( formView.titleInputView.fieldView.element ) {\n    \t\t\t\t\t\tformView.titleInputView.errorText = !titleValue ? 'Le titre est requis.' : '';\n    \t\t\t\t\t}\n    \t\t\t\t\treturn;\n    \t\t\t\t}\n\n    \t\t\t\t// Clear any previous error messages\n    \t\t\t\tformView.urlInputView.errorText = '';\n    \t\t\t\tformView.titleInputView.errorText = '';\n\n    \t\t\t\t// If validation passes, execute the command\n    \t\t\t\teditor.execute( 'insertButtonPlugin', { href, title: titleValue } );\n    \t\t\t\tdropdown.isOpen = false;\n    \t\t\t\teditor.editing.view.focus();\n\n    \t\t\t\t// Reset form fields\n    \t\t\t\tif ( formView.urlInputView.fieldView.element instanceof HTMLInputElement ) {\n    \t\t\t\t\tformView.urlInputView.fieldView.element.value = '';\n    \t\t\t\t}\n    \t\t\t\tif ( formView.titleInputView.fieldView.element instanceof HTMLInputElement ) {\n    \t\t\t\t\tformView.titleInputView.fieldView.element.value = '';\n    \t\t\t\t}\n\n    \t\t\t\t// Update stored values\n    \t\t\t\tsetButtonPluginURl( href );\n    \t\t\t\tsetButtonPluginTitle( titleValue );\n    \t\t\t} );\n\n    \t\t\tformView.on( 'cancel', () => {\n    \t\t\t\t// Clear any error messages when canceling\n    \t\t\t\tformView.urlInputView.errorText = '';\n    \t\t\t\tformView.titleInputView.errorText = '';\n\n    \t\t\t\tdropdown.isOpen = false;\n    \t\t\t\teditor.editing.view.focus();\n    \t\t\t} );\n    \t\t} );\n\n    \t\treturn dropdown;\n    \t} );\n\n    \teditor.commands.add( 'insertButtonPlugin', new ButtonPluginCommand( editor ) );\n    }\n}\n","import { Plugin } from 'ckeditor5';\nimport ButtonPluginEditing from './buttonPluginEditing.js';\nimport ButtonPluginUI from './buttonPluginUI.js';\n\nexport default class ButtonPlugin extends Plugin {\n\tstatic get pluginName() {\n\t\treturn 'ButtonPlugin';\n\t}\n\n\tstatic get requires() {\n\t\treturn [ ButtonPluginEditing, ButtonPluginUI ];\n\t}\n}\n","import {\n    ViewElement,\n    Element,\n    ViewDocumentSelection,\n    isWidget,Writer,\n    DocumentSelection\n} from 'ckeditor5';\nimport { highlights } from './assets/highlightVariant';\n\n/**\n * Returns an highlight widget editing view element if one is selected or is among the selection's ancestors.\n */\nexport const getSelectedHighlightViewWidget = (selection: ViewDocumentSelection): ViewElement | null => {\n    const viewElement = selection.getSelectedElement();\n\n    if (!viewElement) {\n        return null;\n    }\n\n    if (isHighlightWidget(viewElement)) {\n        return viewElement;\n    }\n    return null;\n}\n\n/**\n* Checks if a given view element is an highlight widget.\n*/\nexport const isHighlightWidget = (viewElement: ViewElement): boolean => {\n    const isHighlight = viewElement.hasClass('ck-highlight');\n    return isHighlight && isWidget(viewElement);\n}\n\nfunction extractContentFromElement(element: Element | null): Array<{ data?: string, attributes?: Iterable<[string, string]> } | { type: 'break' }> {\n    if (!element) {\n        return [];\n    }\n\n    return Array.from(element.getChildren()).reduce<Array<{ data?: string, attributes?: Iterable<[string, string]> } | { type: 'break' }>>((acc, child) => {\n        if (child.is('$text') || child.is('$textProxy')) {\n            acc.push({ data: child.data, attributes: child.getAttributes() as Iterable<[string, string]> });\n        } else if (child.is('element') && child.name === 'br') {\n            acc.push({ type: 'break' });\n        }\n        return acc;\n    }, []);\n}\n\nexport const getValuesFromHighlightBox = (selectedElement: Element | null) => {\n    if (!selectedElement || selectedElement.name !== 'highlightBox') {\n        return null;\n    }\n\n    const titleChild = Array.from(selectedElement.getChildren())[0];\n    const descriptionChild = Array.from(selectedElement.getChildren())[1];\n\n    const titleContent = extractContentFromElement(titleChild as Element);\n    const descriptionContent = extractContentFromElement(descriptionChild as Element);\n\n    return {\n        title: titleContent,\n        description: descriptionContent\n    };\n}\n\nexport function createHighlightBox(writer: Writer, selection: DocumentSelection, value: string) {\n    const highlightBox = writer.createElement('highlightBox', { variant: value });\n    const highlightTitle = writer.createElement('highlightBoxTitle');\n    const highlightDescription = writer.createElement('highlightBoxDescription');\n\n    const { titleContent, descriptionContent } = getContentForHighlightBox(selection, value);\n\n    // Insert title content\n    appendTextNodes(writer, highlightTitle, titleContent);\n\n    // Insert description content\n    appendTextNodes(writer, highlightDescription, descriptionContent);\n\n    writer.append(highlightTitle, highlightBox);\n    writer.append(highlightDescription, highlightBox);\n\n    return highlightBox;\n}\n\n// Helper function to extract the title and description content\nfunction getContentForHighlightBox(selection: DocumentSelection, value: string) {\n    const values = getValuesFromHighlightBox(selection.getSelectedElement());\n    const titleContent = values?.title || [{ data: highlights[value].title, attributes: [] }];\n    const descriptionContent = values?.description || [];\n\n    return { titleContent, descriptionContent };\n}\n\n// Helper function to append text nodes to an element\nfunction appendTextNodes(writer: Writer, parentElement: any, content: any[]) {\n    content.forEach(node => {\n        if (node) {\n            if (node.type === 'break') {\n                // Insert a line break element if the node is of type 'break'\n                const breakElement = writer.createElement('br');\n                writer.append(breakElement, parentElement);\n            } else if (node.data) {\n                // Insert a text node if the node has data\n                const textNode = writer.createText(node.data, Object.fromEntries(node.attributes || []));\n                writer.append(textNode, parentElement);\n            }\n        }\n    });\n}","import { Command } from 'ckeditor5';\nimport { createHighlightBox } from './utils';\n\nexport default class InsertHighlightCommand extends Command {\n    declare public value: boolean;\n\n    override execute({ value }: { value: string }) {\n        this.editor.model.change(writer => {\n            const selection = this.editor.model.document.selection;\n            const range = selection.getFirstRange();\n            const highlightBox = createHighlightBox(writer, selection, value);\n\n            if (range) {\n                writer.remove(range);\n                const insertPosition = range.start;\n                this.editor.model.insertContent(highlightBox, insertPosition);\n            } else {\n                this.editor.model.insertContent(highlightBox);\n            }\n        });\n    }\n\n    override refresh() {\n        this.isEnabled = true;\n    }\n}\n","import { Plugin } from 'ckeditor5';\nimport { Widget, toWidget, toWidgetEditable } from 'ckeditor5';\nimport { Enter, ViewDocumentEnterEvent } from 'ckeditor5';\nimport InsertHighlightCommand from './InsertHighlightCommand';\nimport { highlights } from './assets/highlightVariant';\n\n\nexport default class HighlightEditing extends Plugin {\n    static get requires() {                                                   \n        return [Widget, Enter];\n    }\n    public static get pluginName() {\n\t\treturn 'HighlightEditing' as const;\n\t}\n\n    init() {\n        this._defineSchema();\n        this._defineConverters();\n        this._defineBrConverters();\n        this.editor.commands.add('insertHighlightBox', new InsertHighlightCommand(this.editor));\n\n        this.editor.config.define('highlightConfig', {                          \n            types: Object.keys(highlights)\n        });\n        this._setupEnterKeyHandling();\n    }\n\n    _setupEnterKeyHandling() {\n        this.listenTo<ViewDocumentEnterEvent>(this.editor.editing.view.document, 'enter', (evt, data) => {\n            const positionParent = this.editor.model.document.selection.getLastPosition()?.parent;\n            if (!positionParent) {\n                return;\n            }\n            if (positionParent.is('element', 'highlightBoxTitle') || positionParent.is('element', 'highlightBoxDescription')) {\n                this._handleEnterInHighlightBox();\n                data.preventDefault();\n                evt.stop();\n                this.editor.editing.view.scrollToTheSelection();\n            }\n        }, { priority: 'high' });\n    }\n\n    _handleEnterInHighlightBox() {\n        const model = this.editor.model;\n        const document = model.document;\n\n        model.change(writer => {\n            const selection = document.selection;\n            const position = selection.getFirstPosition();\n            if (!position) {\n                return;\n            }\n            writer.insertElement('br', position);\n        });\n    }\n\n    _defineSchema() {\n        const schema = this.editor.model.schema;\n\n        schema.register('highlightBox', {\n            // Behaves like a self-contained block object (e.g. a block image)\n            // allowed in places where other blocks are allowed (e.g. directly in the root).\n            inheritAllFrom: '$blockObject',\n            allowAttributes: ['variant']\n        });\n\n        schema.register('highlightBoxTitle', {\n            // Cannot be split or left by the caret.\n            isLimit: true,\n            allowIn: 'highlightBox',\n\n            // Allow content which is allowed in blocks (i.e. text with attributes).\n            allowContentOf: '$block',\n        });\n\n        schema.register('highlightBoxDescription', {\n            // Cannot be split or left by the caret.\n            isLimit: true,\n            allowIn: 'highlightBox',\n            // Allow content which is allowed in the root (e.g. paragraphs).\n            allowContentOf: '$block',\n        });\n\n        schema.register('br', {\n            allowWhere: '$text',\n            isInline: true,\n            isContent: true\n        });\n    }\n\n    _defineConverters() {\n        const conversion = this.editor.conversion;\n\n\n        // <highlightBox> converters.\n        conversion.for('upcast').elementToElement({\n            view: {\n                name: 'figure',\n                classes: `ck-highlight`,\n                attributes: ['data-variant'] // Add custom class from variant\n            },\n            model: (viewElement, { writer: modelWriter }) => {    \n                return modelWriter.createElement('highlightBox', {\n                    variant: viewElement.getAttribute('data-variant'),\n                });\n            },\n\n        });\n        //modal to view\n        conversion.for('dataDowncast').elementToElement({\n            model: 'highlightBox',\n            view: (modelElement, { writer: viewWriter }) => {\n                const variant = modelElement.getAttribute('variant') as string;\n                return viewWriter.createContainerElement('figure', { class: `ck-highlight ck-highlight-${variant}`, 'data-variant': `${variant}` });\n            }\n    \n        });\n        conversion.for('editingDowncast').elementToElement({\n            model: 'highlightBox',\n            view: (modelElement, { writer: viewWriter }) => {\n                const variant = modelElement.getAttribute('variant') as string;\n                const iconWrapper = viewWriter.createContainerElement('div', { class: `ck-iconWrapper` });\n                const icon = viewWriter.createRawElement('div', { class: `ck-iconHighlight` }, function( domElement ) {\n                    domElement.innerHTML = highlights[variant].icon;\n                });\n               \n                const section = viewWriter.createContainerElement('figure', { class: `ck-highlight ck-highlight-${variant}`,'data-variant': `${variant}`, });// Add custom class from variant\n\n                viewWriter.insert(viewWriter.createPositionAt(section, 0), iconWrapper);\n                viewWriter.insert(viewWriter.createPositionAt(iconWrapper, 0), icon);\n                \n                return toWidget(section, viewWriter, { label: 'highlight box widget' });\n            }\n        });\n\n        // <highlightBoxTitle> converters.\n        conversion.for('upcast').elementToElement({\n            model: 'highlightBoxTitle',\n            view: {\n                name: 'div',\n                classes: 'ck-highlight__title',\n            }\n        });\n        conversion.for('dataDowncast').elementToElement({\n            model: 'highlightBoxTitle',\n            view: {\n                name: 'div',\n                classes: 'ck-highlight__title'\n            }\n        });\n        conversion.for('editingDowncast').elementToElement({\n            model: 'highlightBoxTitle',\n            view: (_modelElement, { writer: viewWriter }) => {\n                // Note: You use a more specialized createEditableElement() method here.\n                const title = viewWriter.createEditableElement('div', { class: 'ck-highlight__title' });\n\n                return toWidgetEditable(title, viewWriter);\n            }\n        });\n\n        // <highlightBoxDescription> converters.\n        conversion.for('upcast').elementToElement({\n            model: 'highlightBoxDescription',\n            view: {\n                name: 'div',\n                classes: 'ck-highlight__description'\n            }\n        });\n        conversion.for('dataDowncast').elementToElement({\n            model: 'highlightBoxDescription',\n            view: {\n                name: 'div',\n                classes: 'ck-highlight__description'\n            }\n        });\n        conversion.for('editingDowncast').elementToElement({\n            model: 'highlightBoxDescription',\n            view: (_modelElement, { writer: viewWriter }) => {\n\n                // Note: You use a more specialized createEditableElement() method here.\n                const div = viewWriter.createEditableElement('div', { class: 'ck-highlight__description' }); \n\n                return toWidgetEditable(div, viewWriter);\n            }\n        });\n\n    }\n    _defineBrConverters() {\n        const conversion = this.editor.conversion;\n        // <br> converters\n        conversion.for('upcast').elementToElement({\n            view: 'br',\n            model: 'br'\n        });\n        \n        conversion.for('dataDowncast').elementToElement({\n            model: 'br',\n            view: 'br'\n        });\n        \n        conversion.for('editingDowncast').elementToElement({\n            model: 'br',\n            view: 'br'\n        });\n    }\n}","\nimport { Plugin } from 'ckeditor5';\nimport { createDropdown, addListToDropdown, ViewModel } from 'ckeditor5';\nimport InsertHighlightCommand from './InsertHighlightCommand';\nimport { Collection } from 'ckeditor5';\nimport { ListDropdownItemDefinition } from 'ckeditor5';\nimport { highlightIconToolBar } from './assets/highlightVariant';\n\ndeclare module '@ckeditor/ckeditor5-core' {\n    interface CommandsMap {\n        insertHighlightBox: InsertHighlightCommand;\n    }\n}\n\nfunction getDropdownItemsDefinitions(placeholderHighlights: string[]) {\n    const itemDefinitions = new Collection<ListDropdownItemDefinition>();\n\n    for (const name of placeholderHighlights) {\n        const definition: ListDropdownItemDefinition = {\n            type: 'button',\n            model: new ViewModel({\n                commandParam: name,\n                label: name,\n                withText: true\n            })\n        };\n\n        // Add the item definition to the collection.\n        itemDefinitions.add(definition);\n    }\n\n    return itemDefinitions;\n}\n\nexport default class HighlightUI extends Plugin {\n    /**\n     * @inheritDoc\n     */\n    public static get pluginName() {\n        return 'HighlightUI' as const;\n    }\n\n    init() {\n        const editor = this.editor;\n        const t = editor.t;\n        const placeholderHighlights = editor.config.get('highlightConfig.types') as string[];\n\n        // The \"highlightBox\" button must be registered among the UI components of the editor\n        // to be displayed in the toolbar.\n        editor.ui.componentFactory.add('highlight', locale => {\n            const dropdownView = createDropdown(locale);\n\n            // Populate the list in the dropdown with items.\n            addListToDropdown(dropdownView, getDropdownItemsDefinitions(placeholderHighlights));\n\n            // The button will be an instance of ButtonView.\n\n            dropdownView.buttonView.set({\n                // The t() function helps localize the editor. All strings enclosed in t() can be\n                // translated and change when the language of the editor changes.\n                label: t('Highlight'),\n                tooltip: true,\n                icon: highlightIconToolBar\n            });\n            // Disable the placeholder button when the command is disabled.\n            const command = editor.commands.get('insertHighlightBox');\n            if (command) {\n                dropdownView.bind('isEnabled').to(command, 'isEnabled');\n            }\n\n            // Execute the command when the dropdown item is clicked (executed).\n            this.listenTo(dropdownView, 'execute', (evt: any) => {\n                editor.execute('insertHighlightBox', { value: evt.source.commandParam });\n                editor.editing.view.focus();\n            });\n\n            return dropdownView;\n\n        });\n\n    }\n}\n","import HighlightEditing from './HighlightEditing';\nimport HighlightUI from './HighlightUI';\nimport {Plugin} from 'ckeditor5';\nimport './highlight.css'\n\nexport default class Highlight extends Plugin {\n    public static get pluginName() {\n\t\treturn 'Highlight' as const;\n\t}\n    static get requires() {\n        return [ HighlightEditing, HighlightUI ];\n    }\n}","import { Plugin } from 'ckeditor5';\nimport type { CommentsIntegrationInterface, Comment } from './CommentsIntegrationInterface.js';\n\n/**\n * A plugin that implements the comments adapter integration.\n */\nexport default class CommentsIntegration extends Plugin implements CommentsIntegrationInterface {\n  /**\n   * @inheritDoc\n   */\n  public static get pluginName() {\n    return 'CommentsIntegration' as const;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public static get requires() {\n    return ['RooleComments'] as const;\n  }\n\n  private _comments: Map<string, Comment>;\n\n  /**\n   * @inheritDoc\n   */\n  constructor(editor: any) {\n    super(editor);\n    this._comments = new Map();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public init(): Promise<void> {\n    return Promise.resolve();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public addComment(commentData: Partial<Comment>): Promise<Comment> {\n    const comment = {\n      ...commentData,\n      id: commentData.id || Date.now().toString(),\n      content: commentData.content || '',\n      authorId: commentData.authorId || '1',\n      authorName: commentData.authorName || 'Test User',\n      createdAt: commentData.createdAt || new Date().toISOString()\n    } as Comment;\n\n    this._comments.set(comment.id, comment);\n    return Promise.resolve(comment);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public updateComment(commentData: Comment): Promise<Comment> {\n    this._comments.set(commentData.id, commentData);\n    return Promise.resolve(commentData);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public removeComment(commentId: string): Promise<void> {\n    this._comments.delete(commentId);\n    return Promise.resolve();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getComment(commentId: string): Promise<Comment> {\n    const comment = this._comments.get(commentId);\n    if (!comment) {\n      return Promise.resolve({\n        id: commentId,\n        content: '',\n        authorId: '1',\n        authorName: 'Test User',\n        createdAt: new Date().toISOString()\n      });\n    }\n    return Promise.resolve(comment);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getComments(): Promise<Comment[]> {\n    return Promise.resolve(Array.from(this._comments.values()));\n  }\n}\n","import { Plugin } from 'ckeditor5';\nimport CommentsIntegration from './CommentsIntegration';\n\n// Add this interface to properly type the CKEditor Comments plugin\ninterface CommentsPlugin {\n  adapter: any;\n}\n\n/**\n * The Comments plugin.\n */\nexport default class Comments extends Plugin {\n  /**\n   * @inheritDoc\n   */\n  public static get pluginName() {\n    return 'RooleComments' as const;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public static get requires() {\n    return [CommentsIntegration] as const;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public init(): void {\n    const editor = this.editor;\n\n    // If the CKEditor Comments plugin is available, set our adapter as the comments adapter\n    if (editor.plugins.has('Comments')) {\n      const commentsIntegration = editor.plugins.get('CommentsIntegration');\n      // Add type assertion to fix the error\n      (editor.plugins.get('Comments') as unknown as CommentsPlugin).adapter = commentsIntegration;\n    }\n  }\n}\n","import ckeditor from './../theme/icons/ckeditor.svg';\nimport './augmentation.js';\n\nexport { default as Editorjs } from './Editorjs/editorjs.js';\nexport { default as ButtonPlugin } from './ButtonPlugin/buttonPlugin.js';\nexport { default as Highlight } from './Highlight/Highlight.js';\nexport { default as Comments } from './Comments/Comments.js';\n\nexport const icons = {\n\tckeditor\n};\n"],"names":["highlightIconToolBar","highlightVariants","INFO","PARKING","SPOT","ACTION","TIP","HOTEL","VISIT","RESTAURANT","FAVORITE","highlights","title","icon","mediaEmbedConfig","providers","name","width","height","url","html","match","src","postId","encodeURIComponent","userId","userName","id","time","extraProviders","type","embedUrl","videoId","allProviders","concat","reduce","acc","provider","transforms","paragraph","data","text","headerH2","headerH3","mediaLib","unorderedList","items","map","item","join","orderedList","table","content","withHeadings","cell","slice","row","imageContainer","children","length","child","file","caption","alt","image","stretched","linkTool","link","meta","imageUrl","quote","highlight","variant","description","embed","regex","service","RegExp","exec","source","buttonPlugin","href","ParseFunctionError","Error","parser","plugins","parsers","Object","assign","parse","blocks","block","json2html","parsedJson","JSON","edjs","edjsParser","e","console","log","ElementType","isTag","elem","Tag","Script","Style","Root","Text","Directive","Comment","CDATA","Doctype","Node","constructor","parent","prev","next","startIndex","endIndex","parentNode","previousSibling","nextSibling","cloneNode","recursive","DataNode","nodeValue","arguments","nodeType","ProcessingInstruction","NodeWithChildren","firstChild","_a","lastChild","childNodes","Document","Element","attribs","tagName","attributes","keys","_b","value","namespace","prefix","node","isTagRaw","isCDATA","isText","isComment","isDirective","isDocument","hasChildren","prototype","hasOwnProperty","call","result","cloneChildren","clone","forEach","instruction","sourceCodeLocation","childs","i","defaultOpts","withStartIndices","withEndIndices","xmlMode","DomHandler","callback","options","elementCB","dom","root","done","tagStack","lastNode","undefined","onparserinit","onreset","onend","handleCallback","onerror","error","onclosetag","pop","onopentag","element","addNode","push","ontext","oncomment","oncommentend","oncdatastart","oncdataend","onprocessinginstruction","Uint16Array","split","c","charCodeAt","decodeMap","Map","fromCodePoint","String","codePoint","output","fromCharCode","replaceCodePoint","get","CharCodes","TO_LOWER_BIT","BinTrieFlags","isNumber","code","ZERO","NINE","isHexadecimalCharacter","UPPER_A","UPPER_F","LOWER_A","LOWER_F","isAsciiAlphaNumeric","UPPER_Z","LOWER_Z","isEntityInAttributeInvalidEnd","EQUALS","EntityDecoderState","DecodingMode","EntityDecoder","decodeTree","emitCodePoint","errors","state","EntityStart","consumed","treeIndex","excess","decodeMode","Strict","startEntity","write","str","offset","NUM","NumericStart","stateNumericStart","NamedEntity","stateNamedEntity","NumericDecimal","stateNumericDecimal","NumericHex","stateNumericHex","LOWER_X","addToNumericResult","start","end","base","digitCount","Math","pow","parseInt","substr","startIdx","char","emitNumericEntity","lastCp","expectedLength","absenceOfDigitsInNumericCharacterReference","SEMI","missingSemicolonAfterCharacterReference","validateNumericCharacterReference","current","valueLength","VALUE_LENGTH","determineBranch","max","Attribute","emitNotTerminatedNamedEntity","emitNamedEntityData","getDecoder","ret","decoder","decodeWithTrie","lastIndex","indexOf","len","nodeIdx","branchCount","BRANCH_LENGTH","jumpOffset","JUMP_TABLE","lo","hi","mid","midVal","htmlDecodeTree","xmlDecodeTree","xmlReplacer","xmlCodeMap","getCodePoint","codePointAt","index","encodeXML","lastIdx","substring","toString","Number","getEscaper","escape","escapeAttribute","escapeText","elementNames","val","toLowerCase","attributeNames","unencodedElements","Set","replaceQuotes","replace","formatAttributes","opts","encode","encodeEntities","decodeEntities","key","emptyAttrs","singleTag","render","nodes","renderNode","renderDirective","renderComment","renderCdata","renderTag","renderText","foreignModeIntegrationPoints","foreignElements","has","tag","selfClosingTags","getOuterHTML","renderHTML","getInnerHTML","getText","Array","isArray","textContent","innerText","getChildren","getParent","getSiblings","siblings","unshift","getAttributeValue","hasAttrib","getName","nextElementSibling","prevElementSibling","removeElement","childsIndex","lastIndexOf","splice","replaceElement","replacement","appendChild","sibling","append","currNext","prependChild","prepend","filter","test","recurse","limit","Infinity","find","nodeStack","indexStack","shift","findOneChild","findOne","searchedNodes","found","existsOne","some","findAll","Checks","tag_name","tag_type","tag_contains","getAttribCheck","attrib","combineFuncs","a","b","compileTest","funcs","testElement","getElements","getElementById","getElementsByTagName","getElementsByClassName","className","getElementsByTagType","removeSubsets","idx","ancestor","includes","DocumentPosition","compareDocumentPosition","nodeA","nodeB","aParents","bParents","maxIdx","min","DISCONNECTED","sharedParent","aSibling","bSibling","FOLLOWING","CONTAINED_BY","PRECEDING","CONTAINS","uniqueSort","arr","sort","relative","getFeed","doc","feedRoot","getOneElement","isValidFeed","getAtomFeed","getRssFeed","feed","entry","media","getMediaElements","addConditionally","fetch","pubDate","Date","updated","MEDIA_KEYS_STRING","MEDIA_KEYS_INT","where","medium","isDefault","expression","trim","obj","prop","_useHtmlParser2","flattenOptions","baseOptions","xml","that","_root","isOptions","toRender","_options","elements","elems","parseHTML","context","keepScripts","parsed","load","remove","contains","container","contained","extract","merge","arr1","arr2","isArrayLike","newLength","isCheerio","maybeCheerio","cheerio","camelCase","_","x","toUpperCase","cssCase","domEach","array","fn","CharacterCodes","isHtml","tagStart","tagChar","LowerA","LowerZ","UpperA","UpperZ","Exclamation","hasOwn","rspace","dataAttrPrefix","rboolean","rbrace","getAttr","setAttr","el","removeAttribute","attr","objName","objValue","getProp","setProp","property","css","URL","baseURI","wrap","TypeError","setData","readAllData","domName","startsWith","jsName","parseDataValue","readData","num","dataEl","querying","option","removeAttr","values","toArray","splitNames","names","attrNames","attrName","hasClass","clazz","addClass","classNames","numElements","setClass","cn","appendClass","removeClass","classes","numClasses","removeAll","elClasses","changed","j","toggleClass","stateVal","elementClasses","SelectorType","AttributeAction","reName","reEscape","actionTypes","Start","End","Any","Not","Hyphen","unpackPseudos","isTraversal","selector","Adjacent","Child","Descendant","Parent","Sibling","ColumnCombinator","stripQuotesFromPseudos","funescape","escaped","escapedWhitespace","high","unescapeCSS","isQuote","isWhitespace","subselects","parseSelector","selectorIndex","tokens","stripWhitespace","readValueWithParenthesis","counter","isEscaped","pos","slashCount","ensureNotTraversal","addTraversal","addSpecialAttribute","action","ignoreCase","finalizeSubselector","loop","firstChar","Equals","Exists","possibleAction","sectionEnd","valueStart","forceIgnore","attributeSelector","PseudoElement","quot","Pseudo","Universal","boolbase","trueFunc","falseFunc","procedure","token","sortByProcedure","procs","getProcedure","procNew","proc","d","reChars","escapeRegex","caseInsensitiveAttributes","shouldIgnoreCase","quirksMode","attributeRules","equals","adapter","hyphen","hyphenIC","charAt","exists","endsWith","any","anyIC","not","whitespace","formula","sign","readSign","number","readNumber","skipWhitespace","compile","absA","abs","bMod","nthCheck","getChildFunc","filters","icontains","itext","rule","func","getNCheck","nthChild","nthLastChild","nthOfType","currentSibling","nthLastOfType","_rule","scope","hover","dynamicStatePseudo","visited","active","dynamicPseudo","pseudos","empty","elemName","every","verifyPseudoArgs","subselect","argIndex","aliases","disabled","enabled","checked","required","optional","selected","checkbox","password","radio","reset","submit","header","button","input","PLACEHOLDER_ELEMENT","ensureIsTag","getNextSiblings","elemIndex","copyOptions","lowerCaseAttributeNames","lowerCaseTags","cacheResults","is","compileToken","matches","_context","relativeSelector","s","compiled","hasElement","shouldTestNextSiblings","nextElements","compilePseudoSelector","userPseudo","stringPseudo","alias","pseudo","getElementParent","compileGeneralSelector","WeakSet","descendant","isFalseCache","cachedDescendant","add","flexibleDescendant","adjacent","previous","lastElement","includesScopePseudo","t","DESCENDANT_TOKEN","FLEXIBLE_DESCENDANT_TOKEN","SCOPE_TOKEN","absolutize","hasContext","sortRules","isArrayContext","finalContext","query","rules","first","second","compileRules","reduceRules","rootFunc","combine","defaultEquals","defaultOptions","DomUtils","convertOptionFormats","_c","_d","wrapCompile","addAdapter","_compileToken","prepareContext","appendNextSiblings","elemsLength","nextSiblings","filterNames","isFilter","getLimit","partLimit","NaN","isFinite","getDocumentRoot","groupSelectors","selectors","filteredSelectors","plainSelectors","UNIVERSAL_SELECTOR","SCOPE_PSEUDO","plain","filtered","sel","filterBySelector","filterByPosition","filterParsed","filterElements","size","filteredSelector","missing","findFilterElements","select","results","findElements","queryForSelector","totalLimit","filterIndex","findIndex","sub","elemsNoLimit","remainingSelector","remainingHasTraversal","els","reSiblingSelector","selectorOrHaystack","_make","haystack","_findBySelector","POSITIVE_INFINITY","_getMatcher","matchMap","postFns","matched","filterArray","_matcher","_singleMatcher","_matchUntil","nextElem","innerMatcher","filterSelector","getFilterFn","_removeDuplicates","from","parents","reverse","parentsUntil","closest","set","selectOpts","selectFn","nextAll","nextUntil","prevAll","prevUntil","contents","newElems","each","filterFn","last","eq","selectorOrNeedle","$haystack","needle","prevObject","other","selection","addBack","getParse","Buffer","isBuffer","checkIsDocument","update","newChilds","_makeDomArray","_parse","_insert","concatenator","domSrc","_render","uniqueSplice","spliceIdx","spliceCount","spliceArgs","oldParent","oldSiblings","prevIdx","appendTo","target","appendTarget","prependTo","prependTarget","_wrap","insert","wrapper","lastParent","wrapperDom","elInsertLocation","updateDOM","wrapInner","unwrap","replaceWith","wrapAll","insertBefore","after","insertAfter","clones","clonedSelf","before","targetArr","cont","staticText","textNode","setCss","getCss","styles","stringify","k","newStyles","n","trimmed","trimEnd","submittableSelector","r20","rCRLF","serialize","serializeArray","retArr","$elem","getExtractDescr","descr","$","Cheerio","Symbol","iterator","Attributes","Traversing","Manipulation","Css","Forms","Extract","getLoad","internalOpts","initialRoot","LoadedCheerio","initialize","r","rootInstance","isNode","instance","search","searchContext","staticMethods","UNDEFINED_CODE_POINTS","REPLACEMENT_CHARACTER","CODE_POINTS","SEQUENCES","DASH_DASH","CDATA_START","DOCTYPE","SCRIPT","PUBLIC","SYSTEM","isSurrogate","cp","isSurrogatePair","getSurrogatePairCodePoint","cp1","cp2","isControlCodePoint","isUndefinedCodePoint","ERR","DEFAULT_BUFFER_WATERLINE","Preprocessor","handler","lastGapPos","gapStack","skipNextNewLine","lastChunkWritten","endOfChunkHit","bufferWaterline","isEol","lineStartPos","droppedBufferSize","line","lastErrOffset","col","getError","cpOffset","startCol","startOffset","startLine","endLine","endCol","endOffset","_err","onParseError","_addGap","_processSurrogate","nextCp","EOF","surrogateInInputStream","willDropParsedChunk","dropParsedChunk","chunk","isLastChunk","insertHtmlAtCurrentPos","pattern","caseSensitive","peek","CARRIAGE_RETURN","LINE_FEED","advance","isCommonValidRange","_checkForProblematicCharacters","controlCharacterInInputStream","noncharacterInInputStream","retreat","count","TokenType","getTokenAttr","attrs","NS","ATTRS","DOCUMENT_MODE","TAG_NAMES","TAG_ID","TAG_NAME_TO_ID","A","ADDRESS","ANNOTATION_XML","APPLET","AREA","ARTICLE","ASIDE","B","BASE","BASEFONT","BGSOUND","BIG","BLOCKQUOTE","BODY","BR","BUTTON","CAPTION","CENTER","CODE","COL","COLGROUP","DD","DESC","DETAILS","DIALOG","DIR","DIV","DL","DT","EM","EMBED","FIELDSET","FIGCAPTION","FIGURE","FONT","FOOTER","FOREIGN_OBJECT","FORM","FRAME","FRAMESET","H1","H2","H3","H4","H5","H6","HEAD","HEADER","HGROUP","HR","HTML","I","IMG","IMAGE","INPUT","IFRAME","KEYGEN","LABEL","LI","LINK","LISTING","MAIN","MALIGNMARK","MARQUEE","MATH","MENU","META","MGLYPH","MI","MO","MN","MS","MTEXT","NAV","NOBR","NOFRAMES","NOEMBED","NOSCRIPT","OBJECT","OL","OPTGROUP","OPTION","P","PARAM","PLAINTEXT","PRE","RB","RP","RT","RTC","RUBY","S","SEARCH","SECTION","SELECT","SOURCE","SMALL","SPAN","STRIKE","STRONG","STYLE","SUB","SUMMARY","SUP","TABLE","TBODY","TEMPLATE","TEXTAREA","TFOOT","TD","TH","THEAD","TITLE","TR","TRACK","TT","U","UL","SVG","VAR","WBR","XMP","getTagID","UNKNOWN","SPECIAL_ELEMENTS","MATHML","XLINK","XML","XMLNS","NUMBERED_HEADERS","UNESCAPED_TEXT","hasUnescapedText","tn","scriptingEnabled","State","TokenizerMode","DATA","RCDATA","RAWTEXT","SCRIPT_DATA","CDATA_SECTION","isAsciiDigit","DIGIT_0","DIGIT_9","isAsciiUpper","LATIN_CAPITAL_A","LATIN_CAPITAL_Z","isAsciiLower","LATIN_SMALL_A","LATIN_SMALL_Z","isAsciiLetter","toAsciiLower","SPACE","TABULATION","FORM_FEED","isScriptDataDoubleEscapeSequenceEnd","SOLIDUS","GREATER_THAN_SIGN","getErrorForNumericCharacterReference","NULL","nullCharacterReference","characterReferenceOutsideUnicodeRange","surrogateCharacterReference","noncharacterCharacterReference","controlCharacterReference","Tokenizer","paused","inLoop","inForeignNode","lastStartTagName","returnState","entityStartPos","consumedAfterSnapshot","currentCharacterToken","currentToken","currentAttr","preprocessor","currentLocation","getCurrentLocation","entityDecoder","_flushCodePointConsumedAsCharacterReference","sourceCodeLocationInfo","_runParsingLoop","_consume","_ensureHibernation","_callState","pause","resume","writeCallback","_advanceBy","_consumeSequenceIfMatch","_createStartTagToken","START_TAG","tagID","selfClosing","ackSelfClosing","location","_createEndTagToken","END_TAG","_createCommentToken","COMMENT","_createDoctypeToken","initialName","forceQuirks","publicId","systemId","_createCharacterToken","chars","_createAttr","attrNameFirstCh","_leaveAttrName","attrLocations","create","_leaveAttrValue","duplicateAttribute","prepareToken","ct","_emitCurrentCharacterToken","emitCurrentTagToken","onStartTag","endTagWithAttributes","endTagWithTrailingSolidus","onEndTag","emitCurrentComment","onComment","emitCurrentDoctype","onDoctype","nextLocation","CHARACTER","onCharacter","NULL_CHARACTER","onNullCharacter","WHITESPACE_CHARACTER","onWhitespaceCharacter","_emitEOFToken","onEof","_appendCharToCurrentCharacterToken","ch","_emitCodePoint","_emitChars","_startCharacterReference","CHARACTER_REFERENCE","_isCharacterReferenceInAttribute","Legacy","ATTRIBUTE_VALUE_DOUBLE_QUOTED","ATTRIBUTE_VALUE_SINGLE_QUOTED","ATTRIBUTE_VALUE_UNQUOTED","_stateData","_stateRcdata","_stateRawtext","_stateScriptData","_statePlaintext","TAG_OPEN","_stateTagOpen","END_TAG_OPEN","_stateEndTagOpen","TAG_NAME","_stateTagName","RCDATA_LESS_THAN_SIGN","_stateRcdataLessThanSign","RCDATA_END_TAG_OPEN","_stateRcdataEndTagOpen","RCDATA_END_TAG_NAME","_stateRcdataEndTagName","RAWTEXT_LESS_THAN_SIGN","_stateRawtextLessThanSign","RAWTEXT_END_TAG_OPEN","_stateRawtextEndTagOpen","RAWTEXT_END_TAG_NAME","_stateRawtextEndTagName","SCRIPT_DATA_LESS_THAN_SIGN","_stateScriptDataLessThanSign","SCRIPT_DATA_END_TAG_OPEN","_stateScriptDataEndTagOpen","SCRIPT_DATA_END_TAG_NAME","_stateScriptDataEndTagName","SCRIPT_DATA_ESCAPE_START","_stateScriptDataEscapeStart","SCRIPT_DATA_ESCAPE_START_DASH","_stateScriptDataEscapeStartDash","SCRIPT_DATA_ESCAPED","_stateScriptDataEscaped","SCRIPT_DATA_ESCAPED_DASH","_stateScriptDataEscapedDash","SCRIPT_DATA_ESCAPED_DASH_DASH","_stateScriptDataEscapedDashDash","SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN","_stateScriptDataEscapedLessThanSign","SCRIPT_DATA_ESCAPED_END_TAG_OPEN","_stateScriptDataEscapedEndTagOpen","SCRIPT_DATA_ESCAPED_END_TAG_NAME","_stateScriptDataEscapedEndTagName","SCRIPT_DATA_DOUBLE_ESCAPE_START","_stateScriptDataDoubleEscapeStart","SCRIPT_DATA_DOUBLE_ESCAPED","_stateScriptDataDoubleEscaped","SCRIPT_DATA_DOUBLE_ESCAPED_DASH","_stateScriptDataDoubleEscapedDash","SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH","_stateScriptDataDoubleEscapedDashDash","SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN","_stateScriptDataDoubleEscapedLessThanSign","SCRIPT_DATA_DOUBLE_ESCAPE_END","_stateScriptDataDoubleEscapeEnd","BEFORE_ATTRIBUTE_NAME","_stateBeforeAttributeName","ATTRIBUTE_NAME","_stateAttributeName","AFTER_ATTRIBUTE_NAME","_stateAfterAttributeName","BEFORE_ATTRIBUTE_VALUE","_stateBeforeAttributeValue","_stateAttributeValueDoubleQuoted","_stateAttributeValueSingleQuoted","_stateAttributeValueUnquoted","AFTER_ATTRIBUTE_VALUE_QUOTED","_stateAfterAttributeValueQuoted","SELF_CLOSING_START_TAG","_stateSelfClosingStartTag","BOGUS_COMMENT","_stateBogusComment","MARKUP_DECLARATION_OPEN","_stateMarkupDeclarationOpen","COMMENT_START","_stateCommentStart","COMMENT_START_DASH","_stateCommentStartDash","_stateComment","COMMENT_LESS_THAN_SIGN","_stateCommentLessThanSign","COMMENT_LESS_THAN_SIGN_BANG","_stateCommentLessThanSignBang","COMMENT_LESS_THAN_SIGN_BANG_DASH","_stateCommentLessThanSignBangDash","COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH","_stateCommentLessThanSignBangDashDash","COMMENT_END_DASH","_stateCommentEndDash","COMMENT_END","_stateCommentEnd","COMMENT_END_BANG","_stateCommentEndBang","_stateDoctype","BEFORE_DOCTYPE_NAME","_stateBeforeDoctypeName","DOCTYPE_NAME","_stateDoctypeName","AFTER_DOCTYPE_NAME","_stateAfterDoctypeName","AFTER_DOCTYPE_PUBLIC_KEYWORD","_stateAfterDoctypePublicKeyword","BEFORE_DOCTYPE_PUBLIC_IDENTIFIER","_stateBeforeDoctypePublicIdentifier","DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED","_stateDoctypePublicIdentifierDoubleQuoted","DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED","_stateDoctypePublicIdentifierSingleQuoted","AFTER_DOCTYPE_PUBLIC_IDENTIFIER","_stateAfterDoctypePublicIdentifier","BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS","_stateBetweenDoctypePublicAndSystemIdentifiers","AFTER_DOCTYPE_SYSTEM_KEYWORD","_stateAfterDoctypeSystemKeyword","BEFORE_DOCTYPE_SYSTEM_IDENTIFIER","_stateBeforeDoctypeSystemIdentifier","DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED","_stateDoctypeSystemIdentifierDoubleQuoted","DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED","_stateDoctypeSystemIdentifierSingleQuoted","AFTER_DOCTYPE_SYSTEM_IDENTIFIER","_stateAfterDoctypeSystemIdentifier","BOGUS_DOCTYPE","_stateBogusDoctype","_stateCdataSection","CDATA_SECTION_BRACKET","_stateCdataSectionBracket","CDATA_SECTION_END","_stateCdataSectionEnd","_stateCharacterReference","AMBIGUOUS_AMPERSAND","_stateAmbiguousAmpersand","LESS_THAN_SIGN","AMPERSAND","unexpectedNullCharacter","EXCLAMATION_MARK","QUESTION_MARK","unexpectedQuestionMarkInsteadOfTagName","eofBeforeTagName","invalidFirstCharacterOfTagName","missingEndTagName","eofInTag","handleSpecialEndTag","_cp","HYPHEN_MINUS","eofInScriptHtmlCommentLikeText","$$","EQUALS_SIGN","unexpectedEqualsSignBeforeAttributeName","QUOTATION_MARK","APOSTROPHE","unexpectedCharacterInAttributeName","missingAttributeValue","GRAVE_ACCENT","unexpectedCharacterInUnquotedAttributeValue","missingWhitespaceBetweenAttributes","unexpectedSolidusInTag","cdataInHtmlContent","incorrectlyOpenedComment","abruptClosingOfEmptyComment","eofInComment","nestedComment","incorrectlyClosedComment","eofInDoctype","missingWhitespaceBeforeDoctypeName","missingDoctypeName","invalidCharacterSequenceAfterDoctypeName","missingWhitespaceAfterDoctypePublicKeyword","missingDoctypePublicIdentifier","missingQuoteBeforeDoctypePublicIdentifier","abruptDoctypePublicIdentifier","missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers","missingQuoteBeforeDoctypeSystemIdentifier","missingWhitespaceAfterDoctypeSystemKeyword","missingDoctypeSystemIdentifier","abruptDoctypeSystemIdentifier","unexpectedCharacterAfterDoctypeSystemIdentifier","RIGHT_SQUARE_BRACKET","eofInCdata","SEMICOLON","unknownNamedCharacterReference","IMPLICIT_END_TAG_REQUIRED","IMPLICIT_END_TAG_REQUIRED_THOROUGHLY","SCOPING_ELEMENTS_HTML","SCOPING_ELEMENTS_HTML_LIST","SCOPING_ELEMENTS_HTML_BUTTON","SCOPING_ELEMENTS_MATHML","SCOPING_ELEMENTS_SVG","TABLE_ROW_CONTEXT","TABLE_BODY_CONTEXT","TABLE_CONTEXT","TABLE_CELLS","OpenElementStack","currentTmplContentOrNode","_isInTemplate","treeAdapter","getTemplateContent","document","tagIDs","stackTop","tmplCount","currentTagId","_indexOf","getNamespaceURI","_updateCurrentElement","onItemPush","popped","onItemPop","oldElement","newElement","referenceElement","newElementID","insertionIdx","popUntilTagNamePopped","targetIdx","shortenToLength","popUntilElementPopped","popUntilPopped","tagNames","targetNS","_indexOfTagNames","popUntilNumberedHeaderPopped","popUntilTableCellPopped","popAllUpToHtmlElement","clearBackTo","clearBackToTableContext","clearBackToTableBodyContext","clearBackToTableRowContext","tryPeekProperlyNestedBodyElement","getCommonAncestor","elementIdx","isRootHtmlElementCurrent","hasInDynamicScope","htmlScope","hasInScope","hasInListItemScope","hasInButtonScope","hasNumberedHeaderInScope","hasInTableScope","hasTableBodyContextInTableScope","hasInSelectScope","generateImpliedEndTags","generateImpliedEndTagsThoroughly","generateImpliedEndTagsWithExclusion","exclusionId","NOAH_ARK_CAPACITY","EntryType","MARKER","Marker","FormattingElementList","entries","bookmark","_getNoahArkConditionCandidates","neAttrs","candidates","neAttrsLength","neTagName","getTagName","neNamespaceURI","elementAttrs","getAttrList","_ensureNoahArkCondition","neAttrsMap","neAttr","validCandidates","candidate","cAttr","insertMarker","pushElement","insertElementAfterBookmark","bookmarkIdx","removeEntry","entryIndex","clearToLastMarker","markerIdx","getElementEntryInScopeWithTagName","getElementEntry","defaultTreeAdapter","createDocument","nodeName","mode","NO_QUIRKS","createDocumentFragment","createElement","namespaceURI","createCommentNode","createTextNode","newNode","referenceNode","setTemplateContent","templateElement","contentElement","setDocumentType","doctypeNode","setDocumentMode","getDocumentMode","detachNode","insertText","prevNode","isTextNode","insertTextBefore","adoptAttributes","recipient","recipientAttrsMap","getFirstChild","getChildNodes","getParentNode","getTextNodeContent","getCommentNodeContent","commentNode","getDocumentTypeNodeName","getDocumentTypeNodePublicId","getDocumentTypeNodeSystemId","isCommentNode","isDocumentTypeNode","isElementNode","setNodeSourceCodeLocation","getNodeSourceCodeLocation","updateNodeSourceCodeLocation","endLocation","VALID_DOCTYPE_NAME","VALID_SYSTEM_ID","QUIRKS_MODE_SYSTEM_ID","QUIRKS_MODE_PUBLIC_ID_PREFIXES","QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES","QUIRKS_MODE_PUBLIC_IDS","LIMITED_QUIRKS_PUBLIC_ID_PREFIXES","LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES","hasPrefix","prefixes","isConforming","QUIRKS","LIMITED_QUIRKS","MIME_TYPES","TEXT_HTML","APPLICATION_XML","DEFINITION_URL_ATTR","ADJUSTED_DEFINITION_URL_ATTR","SVG_ATTRS_ADJUSTMENT_MAP","XML_ATTRS_ADJUSTMENT_MAP","SVG_TAG_NAMES_ADJUSTMENT_MAP","EXITS_FOREIGN_CONTENT","causesExit","startTagToken","isFontWithAttrs","COLOR","SIZE","FACE","adjustTokenMathMLAttrs","adjustTokenSVGAttrs","adjustedAttrName","adjustTokenXMLAttrs","adjustedAttrEntry","adjustTokenSVGTagName","adjustedTagName","isMathMLTextIntegrationPoint","ns","isHtmlIntegrationPoint","ENCODING","isIntegrationPoint","foreignNS","HIDDEN_INPUT_TYPE","AA_OUTER_LOOP_ITER","AA_INNER_LOOP_ITER","InsertionMode","BASE_LOC","TABLE_STRUCTURE_TAGS","defaultParserOptions","Parser","fragmentContext","scriptHandler","stopped","insertionMode","INITIAL","originalInsertionMode","headElement","formElement","currentNotInHTML","tmplInsertionModeStack","pendingCharacterTokens","hasNonWhitespacePendingCharacterToken","framesetOk","fosterParentingEnabled","tokenizer","activeFormattingElements","fragmentContextID","_setContextModes","openElements","getFragmentParser","TN","documentMock","IN_TEMPLATE","_initTokenizerForFragmentParsing","_insertFakeRootElement","_resetInsertionMode","_findFormInFragmentContext","getFragment","rootElement","fragment","_adoptNodes","beforeToken","loc","err","tid","isTop","_setEndLocation","isHTML","_isIntegrationPoint","_switchToTextParsing","nextTokenizerState","_insertElement","TEXT","switchToPlaintextParsing","IN_BODY","_getAdjustedCurrentElement","_setDocumentType","documentChildren","docTypeNode","_attachElementToTree","startTag","_shouldFosterParentOnInsertion","_fosterParentElement","_appendElement","_insertFakeElement","_insertTemplate","tmpl","_appendCommentNode","_insertCharacters","beforeElement","_findFosterParentingLocation","textNodeIdx","tnLoc","donor","closingToken","ctLoc","endLoc","endTag","shouldProcessStartTagTokenInForeignContent","_processToken","_processStartTag","foreignContent","_reconstructActiveFormattingElements","listLength","unopenIdx","_closeTableCell","IN_ROW","_closePElement","IN_TABLE_BODY","IN_CAPTION","IN_COLUMN_GROUP","IN_TABLE","IN_FRAMESET","_resetInsertionModeForSelect","AFTER_HEAD","BEFORE_HEAD","IN_CELL","IN_HEAD","selectIdx","IN_SELECT_IN_TABLE","IN_SELECT","_isElementCausesFosterParenting","openElement","_isSpecialElement","characterInForeignContent","tokenInInitialMode","BEFORE_HTML","tokenBeforeHtml","tokenBeforeHead","tokenInHead","IN_HEAD_NO_SCRIPT","tokenInHeadNoScript","tokenAfterHead","characterInBody","characterInTable","IN_TABLE_TEXT","characterInTableText","tokenInColumnGroup","AFTER_BODY","tokenAfterBody","AFTER_AFTER_BODY","tokenAfterAfterBody","nullCharacterInForeignContent","appendComment","AFTER_FRAMESET","tokenInTableText","appendCommentToRootHtmlElement","AFTER_AFTER_FRAMESET","appendCommentToDocument","doctypeInInitialMode","misplacedDoctype","nonVoidHtmlElementStartTagWithTrailingSolidus","startTagInForeignContent","_startTagOutsideForeignContent","startTagBeforeHtml","startTagBeforeHead","startTagInHead","startTagInHeadNoScript","startTagAfterHead","startTagInBody","startTagInTable","startTagInCaption","startTagInColumnGroup","startTagInTableBody","startTagInRow","startTagInCell","startTagInSelect","startTagInSelectInTable","startTagInTemplate","startTagAfterBody","startTagInFrameset","startTagAfterFrameset","startTagAfterAfterBody","startTagAfterAfterFrameset","endTagInForeignContent","_endTagOutsideForeignContent","endTagBeforeHtml","endTagBeforeHead","endTagInHead","endTagInHeadNoScript","endTagAfterHead","endTagInBody","endTagInText","endTagInTable","endTagInCaption","endTagInColumnGroup","endTagInTableBody","endTagInRow","endTagInCell","endTagInSelect","endTagInSelectInTable","endTagInTemplate","endTagAfterBody","endTagInFrameset","endTagAfterFrameset","eofInBody","eofInText","eofInTemplate","stopParsing","unicode","whitespaceCharacterInBody","whitespaceCharacterInTableText","aaObtainFormattingElementEntry","p","formattingElementEntry","genericEndTagInBody","aaObtainFurthestBlock","furthestBlock","aaInnerLoop","formattingElement","nextElement","elementEntry","counterOverflow","shouldRemoveFromOpenElements","aaRecreateElementFromEntry","aaInsertLastNodeInCommonAncestor","commonAncestor","aaReplaceFormattingElement","callAdoptionAgency","htmlElement","htmlLocation","bodyElement","bodyLocation","doctype","nonConformingDoctype","missingDoctype","endTagWithoutMatchingOpenElement","misplacedStartTagForHeadElement","templateEndTagInHead","closingOfElementWithOpenChildElements","nestedNoscriptInHead","errCode","openElementsLeftAfterEof","disallowedContentInNoscriptInHead","abandonedHeadElementChild","modeInBody","htmlStartTagInBody","bodyStartTagInBody","framesetStartTagInBody","addressStartTagInBody","numberedHeaderStartTagInBody","preStartTagInBody","formStartTagInBody","inTemplate","listItemStartTagInBody","elementId","plaintextStartTagInBody","buttonStartTagInBody","aStartTagInBody","activeElementEntry","bStartTagInBody","nobrStartTagInBody","appletStartTagInBody","tableStartTagInBody","areaStartTagInBody","isHiddenInput","inputType","TYPE","inputStartTagInBody","paramStartTagInBody","hrStartTagInBody","imageStartTagInBody","textareaStartTagInBody","xmpStartTagInBody","iframeStartTagInBody","rawTextStartTagInBody","selectStartTagInBody","optgroupStartTagInBody","rbStartTagInBody","rtStartTagInBody","mathStartTagInBody","svgStartTagInBody","genericStartTagInBody","bodyEndTagInBody","htmlEndTagInBody","addressEndTagInBody","formEndTagInBody","pEndTagInBody","liEndTagInBody","ddEndTagInBody","numberedHeaderEndTagInBody","appletEndTagInBody","brEndTagInBody","eofInElementThatCanContainOnlyText","tokenInTable","captionStartTagInTable","colgroupStartTagInTable","colStartTagInTable","tbodyStartTagInTable","tdStartTagInTable","tableStartTagInTable","inputStartTagInTable","formStartTagInTable","savedFosterParentingState","TABLE_VOID_ELEMENTS","popUntilHtmlOrIntegrationPoint","currentNs","VOID_ELEMENTS","isVoidElement","serializeOuter","serializeNode","serializeChildNodes","currentNode","serializeElement","serializeTextNode","serializeCommentNode","serializeDocumentTypeNode","serializeAttributes","parentTn","parseFragment","enquoteDoctypeId","serializeDoctypeContent","attribsNamespace","attribsPrefix","parseWithParse5","htmlparser2Adapter","parseDocument","renderOpts","renderWithParse5","Space","NewLine","Tab","FormFeed","CarriageReturn","isEndOfTagSection","Slash","Gt","isASCIIAlpha","QuoteType","Sequences","Cdata","Uint8Array","CdataEnd","CommentEnd","ScriptEnd","StyleEnd","TitleEnd","TextareaEnd","cbs","buffer","sectionStart","entityStart","baseState","isSpecial","running","currentSequence","sequenceIndex","finish","stateText","Lt","fastForwardTo","BeforeTagName","Amp","stateSpecialStartSequence","isEnd","isMatch","InTagName","stateInTagName","stateInSpecialTag","endOfText","actualIndex","stateInClosingTagName","stateCDATASequence","InCommentLike","InDeclaration","stateInDeclaration","stateInCommentLike","oncdata","isTagStartChar","startSpecial","sequence","SpecialStartSequence","stateBeforeTagName","ExclamationMark","BeforeDeclaration","Questionmark","InProcessingInstruction","lower","BeforeSpecialS","BeforeSpecialT","BeforeClosingTagName","onopentagname","BeforeAttributeName","stateBeforeAttributeName","stateBeforeClosingTagName","InClosingTagName","InSpecialComment","AfterClosingTagName","stateAfterClosingTagName","onopentagend","InSpecialTag","InSelfClosingTag","InAttributeName","stateInSelfClosingTag","onselfclosingtag","stateInAttributeName","Eq","onattribname","AfterAttributeName","stateAfterAttributeName","BeforeAttributeValue","onattribend","NoValue","stateBeforeAttributeValue","DoubleQuote","InAttributeValueDq","SingleQuote","InAttributeValueSq","InAttributeValueNq","stateInAttributeValueNoQuotes","handleInAttributeValue","onattribdata","Double","Single","stateInAttributeValueDoubleQuotes","stateInAttributeValueSingleQuotes","Unquoted","stateBeforeDeclaration","OpeningSquareBracket","CDATASequence","Dash","BeforeComment","ondeclaration","stateInProcessingInstruction","stateBeforeComment","stateInSpecialComment","stateBeforeSpecialS","stateBeforeSpecialT","InEntity","stateInEntity","cleanup","shouldContinue","handleTrailingData","onattribentity","ontextentity","formTags","pTag","tableSectionTags","ddtTags","rtpTags","openImpliesClose","voidElements","foreignContextElements","htmlIntegrationElements","reNameEnd","_e","_f","openTagStart","tagname","attribname","attribvalue","stack","buffers","bufferOffset","writeIndex","ended","htmlMode","lowerCaseTagNames","recognizeSelfClosing","foreignContext","getSlice","emitOpenTag","impliesClose","endOpenTag","isImplied","_g","_h","closeCurrentTag","isOpenImplied","onattribute","getInstructionName","_j","_k","recognizeCDATA","parseComplete","shiftBuffer","parseChunk","parseWithHtmlparser2","renderWithHtmlparser2","BlockTypes","h2","level","h3","ul","style","ol","nbCols","withBorder","withBackground","iframe","createParser","transformFn","class","classList","foundClass","version","jsonString","EditorjsDataProcessor","_htmlDP","HtmlDataProcessor","toView","toData","viewFragment","html2json","registerRawContentMatcher","useFillerType","Editorjs","Plugin","pluginName","editor","processor","viewDocument","ButtonPluginEditing","requires","Widget","init","_defineSchema","_defineConverters","schema","model","register","isObject","allowWhere","allowAttributes","conversion","for","elementToElement","view","modelItem","writer","viewWriter","getAttribute","widgetContainer","createContainerElement","linkContainer","linkElement","rel","titleDiv","createPositionAt","createText","anchorDiv","toWidget","label","viewElement","modelWriter","ButtonPluginFormView","View","urlInputView","titleInputView","saveButtonView","cancelButtonView","childViews","locale","_createInput","_createButton","icons","check","cancel","delegate","to","createCollection","setTemplate","tabindex","submitHandler","focus","labeledInput","LabeledFieldView","createLabeledInputText","ButtonView","tooltip","ButtonPluginCommand","Command","execute","fetchLinkData","then","fetchedData","insertLinkData","change","buttonPluginElement","insertContent","getSelectedButtonPluginViewWidget","getSelectedElement","isButtonPluginWidget","hasAttribute","buttonPluginURl","isButtonPlugin","isWidget","openButtonPlugin","window","open","getButtonPluginURl","setButtonPluginURl","setButtonPluginTitle","URL_REGEX","buttonPluginIcon","buttonPluginOpenIcon","ButtonPluginUI","actionsView","on","viewSelection","editing","selectedWidget","ui","componentFactory","alert","dropdown","createDropdown","buttonView","formView","panelView","fieldView","titleElement","HTMLInputElement","titleValue","errorMessage","errorText","isOpen","commands","ButtonPlugin","extractContentFromElement","getAttributes","getValuesFromHighlightBox","selectedElement","titleChild","descriptionChild","titleContent","descriptionContent","createHighlightBox","highlightBox","highlightTitle","highlightDescription","getContentForHighlightBox","appendTextNodes","parentElement","breakElement","fromEntries","InsertHighlightCommand","range","getFirstRange","insertPosition","refresh","isEnabled","HighlightEditing","Enter","_defineBrConverters","config","define","types","_setupEnterKeyHandling","listenTo","evt","positionParent","getLastPosition","_handleEnterInHighlightBox","preventDefault","stop","scrollToTheSelection","priority","position","getFirstPosition","insertElement","inheritAllFrom","isLimit","allowIn","allowContentOf","isInline","isContent","modelElement","iconWrapper","createRawElement","domElement","innerHTML","section","_modelElement","createEditableElement","toWidgetEditable","div","getDropdownItemsDefinitions","placeholderHighlights","itemDefinitions","Collection","definition","ViewModel","commandParam","withText","HighlightUI","dropdownView","addListToDropdown","command","bind","Highlight","CommentsIntegration","_comments","Promise","resolve","addComment","commentData","comment","now","authorId","authorName","createdAt","toISOString","updateComment","removeComment","commentId","delete","getComment","Comments","commentsIntegration","ckeditor"],"mappings":"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","x_google_ignoreList":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73]}